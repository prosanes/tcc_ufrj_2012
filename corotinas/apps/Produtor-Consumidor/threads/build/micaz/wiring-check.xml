<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:BenchmarkAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4077a768"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a8c20"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407a8c20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a29f0"/></to>
    </wire>
    <wire loc="15:BenchmarkAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x4077be70"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x407a7908"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x407a7908"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a0d7c8"/></to>
    </wire>
    <wire loc="16:BenchmarkAppC.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40779bf0"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40ab5208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40ab5208"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x4083e5a0"/>
      <arguments>
        <value cst="I:228">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:BenchmarkAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40772e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ab56e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ab56e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4083eab8"/></to>
    </wire>
    <wire loc="19:BenchmarkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40735308"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a0188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a0188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404c2090"/></to>
    </wire>
    <wire loc="21:BenchmarkAppC.nc">
      <from><interface-ref name="Produtor" scoped="" ref="0x407356d8"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x407961f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Thread" scoped="" ref="0x407961f8"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x406d5a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:BenchmarkAppC.nc">
      <from><interface-ref name="Consumidor" scoped="" ref="0x40734010"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x407ab010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Thread" scoped="" ref="0x407ab010"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x406d5a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:BenchmarkAppC.nc">
      <from><interface-ref name="SerialSender" scoped="" ref="0x40734948"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x407aae10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Thread" scoped="" ref="0x407aae10"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x406d5a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:BenchmarkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40733260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40316b60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403b7ac0"/></to>
    </wire>
    <wire loc="28:BenchmarkAppC.nc">
      <from><interface-ref name="Semaphore" scoped="" ref="0x40787de8"/></from>
      <to><interface-ref name="Semaphore" scoped="" ref="0x40ad1010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <from><interface-ref name="Semaphore" scoped="" ref="0x40ad1010"/></from>
      <to><interface-ref name="Semaphore" scoped="" ref="0x40acfd20"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a97be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a5e5c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a26090"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x409cc580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x409c8010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40986e68"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a3768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d09e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ce67d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cf31f8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405c92c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ce220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404d44e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ce220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c1e20"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404d40e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c1e20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049f868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4049f868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049e010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x404c1798"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x40385368"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x403112d0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d7010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404c2ef0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404c13f8"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404da960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404da960"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404d7bc0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404dadc8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a2cb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a2cb0"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d00f0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a79c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40819a40"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a7268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b8888"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4049e7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b84d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049e3f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403c8e48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049e3f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404ab538"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404ab538"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404b14c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ab908"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a79c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404b18f0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403d5210"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403d5210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404217d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404b02f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404ab908"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403f44b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046a3e8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403dca28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40439790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40439790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ba13b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403e90a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043b410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be2538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403ed210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4044bc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4044bc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c27a88"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403d4670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40420ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40420ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b04570"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403efce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40440968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40440968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2a6c0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403d3a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40426b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40426b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b23418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403e0210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404296b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404296b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b5f228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403e48e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404374f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404374f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b9b228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403e8ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40445170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40445170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdd538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403cd2f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40419b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40419b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b0c2d0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403db8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404247d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404247d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b46228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403de0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40432330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40432330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b820b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403e2750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40435170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40435170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbf0b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403eb0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40449988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40449988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c229e8"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403f2590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4047a3b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403e1c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043c090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043c090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404217d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b070f8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403d9830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404224f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404224f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b400b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403f30c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404738f0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403d8ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042a3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042a3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b66de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403e54b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40438170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40438170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b9fd70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403e9a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043bd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be0010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403edc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4044a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4044a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c25538"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403d30a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b02010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403d24b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404254f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404254f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b4ade0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403e0c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40428030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40428030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b86c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403e32f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40437e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40437e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc3c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403e68e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40445ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40445ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdb010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403cdcf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404184f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404184f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b0bc90"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403da2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40423170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40423170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b44c08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403dea98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40432c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40432c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b81a88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403eba98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40448330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40448330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c20538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403ddea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4042edc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4042edc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ba3938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403ea670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043c9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043c9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be49e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403ee750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4044b330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4044b330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c280b0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403f1010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404778a0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403d5c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40420170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40420170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b06ac8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403d82f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40422e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40422e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3fa88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ef2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40440010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40440010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c03c20"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403d7750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4042ad30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4042ad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b617f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403e5ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40438ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40438ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b9d7f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403e84b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4043a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4043a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdf9e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403ec670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40449030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40449030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c23010"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403d08f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40419228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40419228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b0e8f0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403d2ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40425e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40425e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b487f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403df670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40428988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40428988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b846c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403e3ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404367d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404367d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc16c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403f3ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40471dd8"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403e1210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043d6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043d6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be7538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403dd4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404316b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404316b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7f538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403d6750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40418e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40418e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b09718"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403dad68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40423ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40423ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b426c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40385c80"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4038c208"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x403112d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4038dd10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403a9e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4063a458"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403c8e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b7778"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403ba9a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x403c9010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403c9010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403cdcf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403b43c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x403c9a18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403c9a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403cd2f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403b4da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x403c84c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403c84c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403d08f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x404da590"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404d6258"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404dc498"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x406f2238"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d66c0"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404dadc8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404d6d20"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404dc498"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404e2368"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4039d9f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="BitArrayUtils" scoped="" ref="0x404e9d30"/></from>
      <to><interface-ref name="BitArrayUtils" scoped="" ref="0x40560450"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x404de588"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x4055f518"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x4055f518"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x405632f8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="PreemptionAlarm" scoped="" ref="0x404f0d88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405c3010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405bfa68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e26b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <from><interface-ref name="alarmTask" scoped="" ref="0x404ed2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x40563a38"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40582178"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405bfa68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405c9a70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405c9a70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40691338"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405c92c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d3240"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x405d5af0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406cbd28"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405d3240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40667140"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406bf688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406715d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406978d8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x405dfcb8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x405dfcb8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40667578"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406ba6e0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x405da658"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x405da658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406730a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x406730a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c8cd08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40667140"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c8fe28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40667578"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c8d2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c8aed0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40621488"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40621488"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4062ed28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40c86158"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40632760"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40632760"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4063c030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40c86980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406300f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406300f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4063c990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40cb53d0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4062fc30"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4062fc30"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4063a8b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x40639828"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x4062c378"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x4062c378"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40666120"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40666b50"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x40666500"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40694298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406bd948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x406d81f8"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x406cf788"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="Thread" scoped="" ref="0x406d5a20"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x406d4b80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x406e14b8"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x406d4020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x406e36a0"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x406f6b48"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x406e3e08"/></from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x406d1988"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x406e3040"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x4070d1d0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x4070d1d0"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x4070b7a0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x406cfc58"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x406f63e0"/></from>
      <to><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x406f1238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406d2c30"/></from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406f2a78"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x406f19a0"/></from>
      <to><interface-ref name="StaticThreadInfo" scoped="" ref="0x406f6b48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadInfo" scoped="" ref="0x406f01f8"/></from>
      <to><interface-ref name="DynamicThreadInfo" scoped="" ref="0x406f53c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x406f0958"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404da590"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40723418"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4070dea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4070dea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40719ad8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40724010"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4072d558"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x407244a0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4071f700"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40716ed8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407077e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407077e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405bfa68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40712148"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4072da28"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
      <from><interface-ref name="threadTask" scoped="" ref="0x40729010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x40796a50"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x406d81f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x40796e48"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cf3510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x406d1988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40cf3908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x406d4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406d2c30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cf3510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40cf3c50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x407ab868"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x406d81f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x407abc60"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40ce6af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x406d1988"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40ce6ee8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x406d4020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406d2c30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40ce6af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40ce5250"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x407a9690"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x406d81f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x407a9a88"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40d07190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x406d1988"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40d07588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x406d4020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406d2c30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40d07190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40d078d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40837cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a4640"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407a4640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4081c618"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408297e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407b6010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407b6010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407bd230"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407b3010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407ba530"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407c3e68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407d3258"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407c1028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x407d0128"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407c1028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407cfd20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407c1028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x407cc950"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x407ca490"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x4062c378"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40819e28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407b6010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40858de8"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a61578"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a61578"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a5eda0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4083eab8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4085d200"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4085d200"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408a5040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x4083e5a0"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40a99010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40a99010"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40a96010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40858880"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40a61010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40a61010"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40a5e978"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40864b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408735b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408735b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a56d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40a0d7c8"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a2cb48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4084c990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4085d8f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4085d8f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4086e450"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a0dbf0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4085e980"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4085e980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408a3b00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a61cd8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40870850"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40870850"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4086e128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a99860"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40874388"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40874388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4086f5c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408a3b00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408c5b88"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40870e90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4086fd08"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408a3768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c57f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408bb660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40873af0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408a5c00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a0a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408a4330"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408a0458"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x408bb158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40a16728"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408a0a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4096c4f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408a0458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4096c138"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4096cc88"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x408bb158"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408c3040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408bb660"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4096bcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408bb660"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4097deb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408bb660"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4096b230"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x408bd430"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4096b708"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x408bf348"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x408d7790"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40985238"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x408d5d38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40967ae8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40967ae8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4098d838"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4097d630"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4098f010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4098f010"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x409891d8"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x409018b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x408e3300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x409026a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x408ff550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x4096a970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4096ada8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4098be20"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4098dca8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4098dca8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x409a45c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x409891d8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x409a49e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4098d838"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409a41b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40989c50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407a8c20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409c08b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40989c50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x409c1350"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x409cf338"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x409cf338"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x409cc9d0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x409c1788"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x409cf848"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x409cf848"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x409ccf00"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x409c1bc0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x409cfd40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x409cfd40"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x409c9430"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x409cd390"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x409c8ea8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x409ce968"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x409c8460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x409cee78"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x409c8990"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x409e9a98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a7268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x409e81f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a26d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x409e85e0"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x4062c378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a29320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a0dbf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40a2cb48"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a26740"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a26ed8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a29320"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a24420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a1fc20"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a27448"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueC.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a27448"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a4f390"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a25508"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x40a4fbb0"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40582178"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a4b180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a81d20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a61cd8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a84260"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4085d200"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a80468"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a27448"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a80070"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40a80be0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a84a20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4070dea0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a7f770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a96e90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a99860"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40a96920"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40aa1698"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40aa1698"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40a9e498"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a96528"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aa3580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4085d200"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aa3c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40a9ea20"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x4055f518"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40a9a1e8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ab5d78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4084c990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ab0a30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40864b10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40ae0308"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40ae0e38"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40aa1698"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <from><interface-ref name="ConditionVariable" scoped="" ref="0x40adf400"/></from>
      <to><interface-ref name="ConditionVariable" scoped="" ref="0x40ac9508"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <from><interface-ref name="ConditionVariable" scoped="" ref="0x40ac9508"/></from>
      <to><interface-ref name="ConditionVariable" scoped="" ref="0x40acd918"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40adfac8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40ac70f8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40ac7c60"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x4055f518"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40ac6348"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40aa1698"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ac6850"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyOSMainP" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu> &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainImplP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainImplP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyTaskSchedulerC" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @author  Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SchedulerBasicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitArrayUtilsC" loc="28:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BitArrayUtilsC.nc">
      <module/>
    </component>
    <component qname="ThreadQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LinkedListC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/LinkedListC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyThreadSchedulerC.Alarm" loc="36(TinyThreadSchedulerC.Alarm):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405ea2f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformInterruptC" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TOSThreadsInterruptP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TOSThreadsInterruptP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TOSThreadsInterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="StaticThreadC" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StaticThreadP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadMapC" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadMapP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadSleepC" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadTimersC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC.TimerMilliC" loc="36(ThreadTimersC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ThreadTimersC.VirtualizeTimerC" loc="35(ThreadTimersC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <value cst="I:33">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ThreadSleepP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BenchmarkC" loc="4:BenchmarkC.nc">
      <module/>
    </component>
    <component qname="BenchmarkAppC.Produtor" loc="38(BenchmarkAppC.Produtor):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ThreadC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.Produtor.ThreadInfoP" loc="36(BenchmarkAppC.Produtor.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BenchmarkAppC.Consumidor" loc="38(BenchmarkAppC.Consumidor):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ThreadC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.Consumidor.ThreadInfoP" loc="36(BenchmarkAppC.Consumidor.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BenchmarkAppC.SerialSender" loc="38(BenchmarkAppC.SerialSender):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ThreadC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.SerialSender.ThreadInfoP" loc="36(BenchmarkAppC.SerialSender.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TThree" ref="0x40382bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TThree" ref="0x40382bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403881d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockingSerialActiveMessageC" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingSerialActiveMessageC.BlockingStdControlC" loc="37(BlockingSerialActiveMessageC.BlockingStdControlC):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingStdControlC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockingStdControlP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingStdControlImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/syscall_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingSerialAMReceiverP" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP" loc="36(BlockingSerialAMReceiverP.BlockingAMReceiverImplP):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMReceiverImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="BlockingSerialAMSenderP" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingSerialAMSenderP.BlockingAMSenderImplP" loc="37(BlockingSerialAMSenderP.BlockingAMSenderImplP):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMSenderImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="MutexC" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MutexP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BenchmarkAppC.BlockingSerialAMSenderC" loc="38(BenchmarkAppC.BlockingSerialAMSenderC):/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingSerialAMSenderC"/>
        <arguments>
          <value cst="I:228">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SemaphoreC" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/semaphore.h">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ConditionVariableC" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/condvar.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ConditionVariableP" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
        <short>&#10; This is the barrier implementation.</short>
        <long>&#10; This is the barrier implementation.  Every barrier has a pointer to &#10; a linked list of threads.  When a thread calls block() on a barrier &#10; it is pushed onto the thread queue associated with that barrier and&#10; it is blocked.  Once some thread calls unblock() on a particular &#10; barrier, all threads on that barrier's thread queue are popped off &#10; and woken up. &#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SemaphoreP" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f0dc8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f7010" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f7228" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40403238" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40403460" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40403688" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40403878" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4044f3d0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4044f5f8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4044f820" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4044fa10" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405ea2f8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405ea2f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405ea4b8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x405e5560" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x405e5560"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405e5720" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40670138" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40670138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406935f8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406935f8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406937d8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406bccd8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406bccd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ThreadC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x40738668" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
          <component-ref qname="ThreadC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ThreadInfoP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x4078e9a0" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </constant>
        <constant name="thread_id" ref="0x4078ebc0" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40817148" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40817148"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40817368" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4081dcf8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4081dcf8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40828168" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40828168"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40836158" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40836158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408365b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408365b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40836820" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40836820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40836c90" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40836c90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40836ef8" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x408343a8" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x408343a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingStdControlC" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockingAMReceiverImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingAMSenderImplP" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingSerialAMSenderC" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40840cb0" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
          <component-ref qname="BlockingSerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x404a05a0" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404a05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a0778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404a0188" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a0360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a79c8" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049f868" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a7268" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a7440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a7520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a7600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a76e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4049e3f0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4049e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049e010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4049e7f8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4049e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404ab908" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404ab908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404abae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404ab538" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404ab538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ab710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404b02f0" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b04c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404b18f0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404b18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404b1ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404b1c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1d68"/>
        <function-ref name="get" scoped="" ref="0x404b1e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1f28"/>
        <function-ref name="set" scoped="" ref="0x404b0018"/>
        <function-ref name="clr" scoped="" ref="0x404b00f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404b14c8" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404b14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403f44b0" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403f44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4888"/>
        <function-ref name="isInput" scoped="" ref="0x403f4968"/>
        <function-ref name="toggle" scoped="" ref="0x403f4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f4b28"/>
        <function-ref name="get" scoped="" ref="0x403f4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f4ce8"/>
        <function-ref name="set" scoped="" ref="0x403f4dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403dca28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403dca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dcc00"/>
        <function-ref name="isInput" scoped="" ref="0x403dcce0"/>
        <function-ref name="toggle" scoped="" ref="0x403dcdc0"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcea0"/>
        <function-ref name="get" scoped="" ref="0x403e5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e50f0"/>
        <function-ref name="set" scoped="" ref="0x403e51d0"/>
        <function-ref name="clr" scoped="" ref="0x403e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403e90a0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403e90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9278"/>
        <function-ref name="isInput" scoped="" ref="0x403e9358"/>
        <function-ref name="toggle" scoped="" ref="0x403e9438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9518"/>
        <function-ref name="get" scoped="" ref="0x403e95f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e96d8"/>
        <function-ref name="set" scoped="" ref="0x403e97b8"/>
        <function-ref name="clr" scoped="" ref="0x403e9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403ed210" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403ed210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ed4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ed5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed688"/>
        <function-ref name="get" scoped="" ref="0x403ed768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed848"/>
        <function-ref name="set" scoped="" ref="0x403ed928"/>
        <function-ref name="clr" scoped="" ref="0x403eda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403d4670" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4848"/>
        <function-ref name="isInput" scoped="" ref="0x403d4928"/>
        <function-ref name="toggle" scoped="" ref="0x403d4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4ae8"/>
        <function-ref name="get" scoped="" ref="0x403d4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4ca8"/>
        <function-ref name="set" scoped="" ref="0x403d4d88"/>
        <function-ref name="clr" scoped="" ref="0x403d4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403efce8" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403efce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403efec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ee010"/>
        <function-ref name="toggle" scoped="" ref="0x403ee0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee1d0"/>
        <function-ref name="get" scoped="" ref="0x403ee2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee390"/>
        <function-ref name="set" scoped="" ref="0x403ee470"/>
        <function-ref name="clr" scoped="" ref="0x403ee550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403d3a98" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403d3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d3d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d3e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3f10"/>
        <function-ref name="get" scoped="" ref="0x403d2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d20f0"/>
        <function-ref name="set" scoped="" ref="0x403d21d0"/>
        <function-ref name="clr" scoped="" ref="0x403d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403e0210" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e03e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e04c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0688"/>
        <function-ref name="get" scoped="" ref="0x403e0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0848"/>
        <function-ref name="set" scoped="" ref="0x403e0928"/>
        <function-ref name="clr" scoped="" ref="0x403e0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403e48e0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403e48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e4b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4d58"/>
        <function-ref name="get" scoped="" ref="0x403e4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4f18"/>
        <function-ref name="set" scoped="" ref="0x403e3010"/>
        <function-ref name="clr" scoped="" ref="0x403e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403e8ea8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403e8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e60c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e61a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e6280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6360"/>
        <function-ref name="get" scoped="" ref="0x403e6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6520"/>
        <function-ref name="set" scoped="" ref="0x403e6600"/>
        <function-ref name="clr" scoped="" ref="0x403e66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403cd2f8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403cd2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd4d0"/>
        <function-ref name="isInput" scoped="" ref="0x403cd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x403cd690"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd770"/>
        <function-ref name="get" scoped="" ref="0x403cd850"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd930"/>
        <function-ref name="set" scoped="" ref="0x403cda10"/>
        <function-ref name="clr" scoped="" ref="0x403cdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403db8e0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403db8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dbab8"/>
        <function-ref name="isInput" scoped="" ref="0x403dbb98"/>
        <function-ref name="toggle" scoped="" ref="0x403dbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403dbd58"/>
        <function-ref name="get" scoped="" ref="0x403dbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dbf18"/>
        <function-ref name="set" scoped="" ref="0x403da010"/>
        <function-ref name="clr" scoped="" ref="0x403da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403de0a0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403de0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de278"/>
        <function-ref name="isInput" scoped="" ref="0x403de358"/>
        <function-ref name="toggle" scoped="" ref="0x403de438"/>
        <function-ref name="isOutput" scoped="" ref="0x403de518"/>
        <function-ref name="get" scoped="" ref="0x403de5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de6d8"/>
        <function-ref name="set" scoped="" ref="0x403de7b8"/>
        <function-ref name="clr" scoped="" ref="0x403de898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403e2750" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403e2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2928"/>
        <function-ref name="isInput" scoped="" ref="0x403e2a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2bc8"/>
        <function-ref name="get" scoped="" ref="0x403e2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2d88"/>
        <function-ref name="set" scoped="" ref="0x403e2e68"/>
        <function-ref name="clr" scoped="" ref="0x403e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403eb0a0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403eb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb278"/>
        <function-ref name="isInput" scoped="" ref="0x403eb358"/>
        <function-ref name="toggle" scoped="" ref="0x403eb438"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb518"/>
        <function-ref name="get" scoped="" ref="0x403eb5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb6d8"/>
        <function-ref name="set" scoped="" ref="0x403eb7b8"/>
        <function-ref name="clr" scoped="" ref="0x403eb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403f2590" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403f2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2768"/>
        <function-ref name="isInput" scoped="" ref="0x403f2848"/>
        <function-ref name="toggle" scoped="" ref="0x403f2928"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2a08"/>
        <function-ref name="get" scoped="" ref="0x403f2ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f2bc8"/>
        <function-ref name="set" scoped="" ref="0x403f2ca8"/>
        <function-ref name="clr" scoped="" ref="0x403f2d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403e1c08" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403e1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ea010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea0f0"/>
        <function-ref name="get" scoped="" ref="0x403ea1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea2b0"/>
        <function-ref name="set" scoped="" ref="0x403ea390"/>
        <function-ref name="clr" scoped="" ref="0x403ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403d5210" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d53e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5688"/>
        <function-ref name="get" scoped="" ref="0x403d5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5848"/>
        <function-ref name="set" scoped="" ref="0x403d5928"/>
        <function-ref name="clr" scoped="" ref="0x403d5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403d9830" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403d9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403d9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9ca8"/>
        <function-ref name="get" scoped="" ref="0x403d9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9e68"/>
        <function-ref name="set" scoped="" ref="0x403d8010"/>
        <function-ref name="clr" scoped="" ref="0x403d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403f30c0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403f30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3298"/>
        <function-ref name="isInput" scoped="" ref="0x403f3378"/>
        <function-ref name="toggle" scoped="" ref="0x403f3458"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3538"/>
        <function-ref name="get" scoped="" ref="0x403f3618"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f36f8"/>
        <function-ref name="set" scoped="" ref="0x403f37d8"/>
        <function-ref name="clr" scoped="" ref="0x403f38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403d8ce8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403d8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d7010"/>
        <function-ref name="toggle" scoped="" ref="0x403d70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d71d0"/>
        <function-ref name="get" scoped="" ref="0x403d72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7390"/>
        <function-ref name="set" scoped="" ref="0x403d7470"/>
        <function-ref name="clr" scoped="" ref="0x403d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403e54b0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403e54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5688"/>
        <function-ref name="isInput" scoped="" ref="0x403e5768"/>
        <function-ref name="toggle" scoped="" ref="0x403e5848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5928"/>
        <function-ref name="get" scoped="" ref="0x403e5a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5ae8"/>
        <function-ref name="set" scoped="" ref="0x403e5bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403e9a98" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403e9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e9d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e9e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9f10"/>
        <function-ref name="get" scoped="" ref="0x403e8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e80f0"/>
        <function-ref name="set" scoped="" ref="0x403e81d0"/>
        <function-ref name="clr" scoped="" ref="0x403e82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403edc08" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403edc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edde0"/>
        <function-ref name="isInput" scoped="" ref="0x403edec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ec010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ec0f0"/>
        <function-ref name="get" scoped="" ref="0x403ec1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ec2b0"/>
        <function-ref name="set" scoped="" ref="0x403ec390"/>
        <function-ref name="clr" scoped="" ref="0x403ec470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403d30a0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403d30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3278"/>
        <function-ref name="isInput" scoped="" ref="0x403d3358"/>
        <function-ref name="toggle" scoped="" ref="0x403d3438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3518"/>
        <function-ref name="get" scoped="" ref="0x403d35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d36d8"/>
        <function-ref name="set" scoped="" ref="0x403d37b8"/>
        <function-ref name="clr" scoped="" ref="0x403d3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403d24b0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403d24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2688"/>
        <function-ref name="isInput" scoped="" ref="0x403d2768"/>
        <function-ref name="toggle" scoped="" ref="0x403d2848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2928"/>
        <function-ref name="get" scoped="" ref="0x403d2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2ae8"/>
        <function-ref name="set" scoped="" ref="0x403d2bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403e0c08" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403e0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403df010"/>
        <function-ref name="isOutput" scoped="" ref="0x403df0f0"/>
        <function-ref name="get" scoped="" ref="0x403df1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df2b0"/>
        <function-ref name="set" scoped="" ref="0x403df390"/>
        <function-ref name="clr" scoped="" ref="0x403df470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403e32f0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e34c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e35a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e3688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3768"/>
        <function-ref name="get" scoped="" ref="0x403e3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3928"/>
        <function-ref name="set" scoped="" ref="0x403e3a08"/>
        <function-ref name="clr" scoped="" ref="0x403e3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403e68e0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403e68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e6b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d58"/>
        <function-ref name="get" scoped="" ref="0x403e6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6f18"/>
        <function-ref name="set" scoped="" ref="0x403ef010"/>
        <function-ref name="clr" scoped="" ref="0x403ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403cdcf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403cdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cdec8"/>
        <function-ref name="isInput" scoped="" ref="0x403d6010"/>
        <function-ref name="toggle" scoped="" ref="0x403d60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d61d0"/>
        <function-ref name="get" scoped="" ref="0x403d62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6390"/>
        <function-ref name="set" scoped="" ref="0x403d6470"/>
        <function-ref name="clr" scoped="" ref="0x403d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403da2f0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da548"/>
        <function-ref name="isInput" scoped="" ref="0x403da628"/>
        <function-ref name="toggle" scoped="" ref="0x403da708"/>
        <function-ref name="isOutput" scoped="" ref="0x403da7e8"/>
        <function-ref name="get" scoped="" ref="0x403da8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da9a8"/>
        <function-ref name="set" scoped="" ref="0x403daa88"/>
        <function-ref name="clr" scoped="" ref="0x403dab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403dea98" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403dea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dec70"/>
        <function-ref name="isInput" scoped="" ref="0x403ded50"/>
        <function-ref name="toggle" scoped="" ref="0x403dee30"/>
        <function-ref name="isOutput" scoped="" ref="0x403def10"/>
        <function-ref name="get" scoped="" ref="0x403dd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd0f0"/>
        <function-ref name="set" scoped="" ref="0x403dd1d0"/>
        <function-ref name="clr" scoped="" ref="0x403dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403eba98" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403eba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ebc70"/>
        <function-ref name="isInput" scoped="" ref="0x403ebd50"/>
        <function-ref name="toggle" scoped="" ref="0x403ebe30"/>
        <function-ref name="isOutput" scoped="" ref="0x403ebf10"/>
        <function-ref name="get" scoped="" ref="0x403f4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f40f0"/>
        <function-ref name="set" scoped="" ref="0x403f41d0"/>
        <function-ref name="clr" scoped="" ref="0x403f42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403ddea8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403ddea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc208"/>
        <function-ref name="isInput" scoped="" ref="0x403dc2e8"/>
        <function-ref name="toggle" scoped="" ref="0x403dc3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc4a8"/>
        <function-ref name="get" scoped="" ref="0x403dc588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc668"/>
        <function-ref name="set" scoped="" ref="0x403dc748"/>
        <function-ref name="clr" scoped="" ref="0x403dc828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403ea670" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea848"/>
        <function-ref name="isInput" scoped="" ref="0x403ea928"/>
        <function-ref name="toggle" scoped="" ref="0x403eaa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403eaae8"/>
        <function-ref name="get" scoped="" ref="0x403eabc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eaca8"/>
        <function-ref name="set" scoped="" ref="0x403ead88"/>
        <function-ref name="clr" scoped="" ref="0x403eae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403ee750" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403ee750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee928"/>
        <function-ref name="isInput" scoped="" ref="0x403eea08"/>
        <function-ref name="toggle" scoped="" ref="0x403eeae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403eebc8"/>
        <function-ref name="get" scoped="" ref="0x403eeca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eed88"/>
        <function-ref name="set" scoped="" ref="0x403eee68"/>
        <function-ref name="clr" scoped="" ref="0x403ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403f1010" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f11e8"/>
        <function-ref name="isInput" scoped="" ref="0x403f12c8"/>
        <function-ref name="toggle" scoped="" ref="0x403f13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1488"/>
        <function-ref name="get" scoped="" ref="0x403f1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1648"/>
        <function-ref name="set" scoped="" ref="0x403f1728"/>
        <function-ref name="clr" scoped="" ref="0x403f1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403d5c08" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d40f0"/>
        <function-ref name="get" scoped="" ref="0x403d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d42b0"/>
        <function-ref name="set" scoped="" ref="0x403d4390"/>
        <function-ref name="clr" scoped="" ref="0x403d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403d82f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8768"/>
        <function-ref name="get" scoped="" ref="0x403d8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8928"/>
        <function-ref name="set" scoped="" ref="0x403d8a08"/>
        <function-ref name="clr" scoped="" ref="0x403d8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ef2f0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ef5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ef688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef768"/>
        <function-ref name="get" scoped="" ref="0x403ef848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef928"/>
        <function-ref name="set" scoped="" ref="0x403efa08"/>
        <function-ref name="clr" scoped="" ref="0x403efae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403d7750" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7928"/>
        <function-ref name="isInput" scoped="" ref="0x403d7a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d7ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7bc8"/>
        <function-ref name="get" scoped="" ref="0x403d7ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7d88"/>
        <function-ref name="set" scoped="" ref="0x403d7e68"/>
        <function-ref name="clr" scoped="" ref="0x403e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403e5ea8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403e5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e40c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e41a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e4280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4360"/>
        <function-ref name="get" scoped="" ref="0x403e4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4520"/>
        <function-ref name="set" scoped="" ref="0x403e4600"/>
        <function-ref name="clr" scoped="" ref="0x403e46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403e84b0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403e84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8688"/>
        <function-ref name="isInput" scoped="" ref="0x403e8768"/>
        <function-ref name="toggle" scoped="" ref="0x403e8848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8928"/>
        <function-ref name="get" scoped="" ref="0x403e8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8ae8"/>
        <function-ref name="set" scoped="" ref="0x403e8bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403ec670" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ec848"/>
        <function-ref name="isInput" scoped="" ref="0x403ec928"/>
        <function-ref name="toggle" scoped="" ref="0x403eca08"/>
        <function-ref name="isOutput" scoped="" ref="0x403ecae8"/>
        <function-ref name="get" scoped="" ref="0x403ecbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ecca8"/>
        <function-ref name="set" scoped="" ref="0x403ecd88"/>
        <function-ref name="clr" scoped="" ref="0x403ece68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403d08f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403d08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0ac8"/>
        <function-ref name="isInput" scoped="" ref="0x403d0ba8"/>
        <function-ref name="toggle" scoped="" ref="0x403d0c88"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0d68"/>
        <function-ref name="get" scoped="" ref="0x403d0e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0f28"/>
        <function-ref name="set" scoped="" ref="0x403cd018"/>
        <function-ref name="clr" scoped="" ref="0x403cd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403d2ea8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403d2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403db1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403db280"/>
        <function-ref name="isOutput" scoped="" ref="0x403db360"/>
        <function-ref name="get" scoped="" ref="0x403db440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db520"/>
        <function-ref name="set" scoped="" ref="0x403db600"/>
        <function-ref name="clr" scoped="" ref="0x403db6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403df670" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df848"/>
        <function-ref name="isInput" scoped="" ref="0x403df928"/>
        <function-ref name="toggle" scoped="" ref="0x403dfa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfae8"/>
        <function-ref name="get" scoped="" ref="0x403dfbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfca8"/>
        <function-ref name="set" scoped="" ref="0x403dfd88"/>
        <function-ref name="clr" scoped="" ref="0x403dfe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403e3ce8" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403e3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e2010"/>
        <function-ref name="toggle" scoped="" ref="0x403e20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e21d0"/>
        <function-ref name="get" scoped="" ref="0x403e22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2390"/>
        <function-ref name="set" scoped="" ref="0x403e2470"/>
        <function-ref name="clr" scoped="" ref="0x403e2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403f3ab8" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403f3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3c90"/>
        <function-ref name="isInput" scoped="" ref="0x403f3d70"/>
        <function-ref name="toggle" scoped="" ref="0x403f3e50"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2010"/>
        <function-ref name="get" scoped="" ref="0x403f20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f21d0"/>
        <function-ref name="set" scoped="" ref="0x403f22b0"/>
        <function-ref name="clr" scoped="" ref="0x403f2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403e1210" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403e1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e13e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e14c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1688"/>
        <function-ref name="get" scoped="" ref="0x403e1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1848"/>
        <function-ref name="set" scoped="" ref="0x403e1928"/>
        <function-ref name="clr" scoped="" ref="0x403e1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403dd4b0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403dd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd688"/>
        <function-ref name="isInput" scoped="" ref="0x403dd768"/>
        <function-ref name="toggle" scoped="" ref="0x403dd848"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd928"/>
        <function-ref name="get" scoped="" ref="0x403dda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ddae8"/>
        <function-ref name="set" scoped="" ref="0x403ddbc8"/>
        <function-ref name="clr" scoped="" ref="0x403ddca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403d6750" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403d6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6928"/>
        <function-ref name="isInput" scoped="" ref="0x403d6a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6bc8"/>
        <function-ref name="get" scoped="" ref="0x403d6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6d88"/>
        <function-ref name="set" scoped="" ref="0x403d6e68"/>
        <function-ref name="clr" scoped="" ref="0x403d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403dad68" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403dad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9010"/>
        <function-ref name="isInput" scoped="" ref="0x403d90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d92b0"/>
        <function-ref name="get" scoped="" ref="0x403d9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9470"/>
        <function-ref name="set" scoped="" ref="0x403d9550"/>
        <function-ref name="clr" scoped="" ref="0x403d9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404184f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404184f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404186c8"/>
        <function-ref name="isInput" scoped="" ref="0x404187a8"/>
        <function-ref name="toggle" scoped="" ref="0x40418888"/>
        <function-ref name="isOutput" scoped="" ref="0x40418968"/>
        <function-ref name="get" scoped="" ref="0x40418a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418b28"/>
        <function-ref name="set" scoped="" ref="0x40418c08"/>
        <function-ref name="clr" scoped="" ref="0x40418ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40420170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40420170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420348"/>
        <function-ref name="isInput" scoped="" ref="0x40420428"/>
        <function-ref name="toggle" scoped="" ref="0x40420508"/>
        <function-ref name="isOutput" scoped="" ref="0x404205e8"/>
        <function-ref name="get" scoped="" ref="0x404206c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404207a8"/>
        <function-ref name="set" scoped="" ref="0x40420888"/>
        <function-ref name="clr" scoped="" ref="0x40420968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40419228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40419228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419400"/>
        <function-ref name="isInput" scoped="" ref="0x404194e0"/>
        <function-ref name="toggle" scoped="" ref="0x404195c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404196a0"/>
        <function-ref name="get" scoped="" ref="0x40419780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419860"/>
        <function-ref name="set" scoped="" ref="0x40419940"/>
        <function-ref name="clr" scoped="" ref="0x40419a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40418e48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40418e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421050"/>
        <function-ref name="isInput" scoped="" ref="0x40421130"/>
        <function-ref name="toggle" scoped="" ref="0x40421210"/>
        <function-ref name="isOutput" scoped="" ref="0x404212f0"/>
        <function-ref name="get" scoped="" ref="0x404213d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404214b0"/>
        <function-ref name="set" scoped="" ref="0x40421590"/>
        <function-ref name="clr" scoped="" ref="0x40421670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40420ac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40420ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40420d80"/>
        <function-ref name="toggle" scoped="" ref="0x40420e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f010"/>
        <function-ref name="get" scoped="" ref="0x4041f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f1d0"/>
        <function-ref name="set" scoped="" ref="0x4041f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40419b80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40419b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419d58"/>
        <function-ref name="isInput" scoped="" ref="0x40419e38"/>
        <function-ref name="toggle" scoped="" ref="0x40419f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40418010"/>
        <function-ref name="get" scoped="" ref="0x404180f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404181d0"/>
        <function-ref name="set" scoped="" ref="0x404182b0"/>
        <function-ref name="clr" scoped="" ref="0x40418390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404217d0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404217d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404219a8"/>
        <function-ref name="isInput" scoped="" ref="0x40421a88"/>
        <function-ref name="toggle" scoped="" ref="0x40421b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40421c48"/>
        <function-ref name="get" scoped="" ref="0x40421d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421e08"/>
        <function-ref name="set" scoped="" ref="0x40421ee8"/>
        <function-ref name="clr" scoped="" ref="0x40420010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041f4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f968"/>
        <function-ref name="get" scoped="" ref="0x4041fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fb28"/>
        <function-ref name="set" scoped="" ref="0x4041fc08"/>
        <function-ref name="clr" scoped="" ref="0x4041fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b0e8f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b0e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0eac8"/>
        <function-ref name="isInput" scoped="" ref="0x40b0eba8"/>
        <function-ref name="toggle" scoped="" ref="0x40b0ec88"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0ed68"/>
        <function-ref name="get" scoped="" ref="0x40b0ee48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0ef28"/>
        <function-ref name="set" scoped="" ref="0x40b0d018"/>
        <function-ref name="clr" scoped="" ref="0x40b0d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b0c2d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b0c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0c4a8"/>
        <function-ref name="isInput" scoped="" ref="0x40b0c588"/>
        <function-ref name="toggle" scoped="" ref="0x40b0c668"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0c748"/>
        <function-ref name="get" scoped="" ref="0x40b0c828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0c908"/>
        <function-ref name="set" scoped="" ref="0x40b0c9e8"/>
        <function-ref name="clr" scoped="" ref="0x40b0cac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b0bc90" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b0bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b0be68"/>
        <function-ref name="isInput" scoped="" ref="0x40b0a010"/>
        <function-ref name="toggle" scoped="" ref="0x40b0a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b0a1d0"/>
        <function-ref name="get" scoped="" ref="0x40b0a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b0a390"/>
        <function-ref name="set" scoped="" ref="0x40b0a470"/>
        <function-ref name="clr" scoped="" ref="0x40b0a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b09718" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b09718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b098f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b099d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b09ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b09b90"/>
        <function-ref name="get" scoped="" ref="0x40b09c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b09d50"/>
        <function-ref name="set" scoped="" ref="0x40b09e30"/>
        <function-ref name="clr" scoped="" ref="0x40b09f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b070f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b070f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b072d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b073b0"/>
        <function-ref name="toggle" scoped="" ref="0x40b07490"/>
        <function-ref name="isOutput" scoped="" ref="0x40b07570"/>
        <function-ref name="get" scoped="" ref="0x40b07650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b07730"/>
        <function-ref name="set" scoped="" ref="0x40b07810"/>
        <function-ref name="clr" scoped="" ref="0x40b078f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b06ac8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b06ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b06ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40b06d80"/>
        <function-ref name="toggle" scoped="" ref="0x40b06e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40b05010"/>
        <function-ref name="get" scoped="" ref="0x40b050f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b051d0"/>
        <function-ref name="set" scoped="" ref="0x40b052b0"/>
        <function-ref name="clr" scoped="" ref="0x40b05390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b04570" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b04570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b04748"/>
        <function-ref name="isInput" scoped="" ref="0x40b04828"/>
        <function-ref name="toggle" scoped="" ref="0x40b04908"/>
        <function-ref name="isOutput" scoped="" ref="0x40b049e8"/>
        <function-ref name="get" scoped="" ref="0x40b04ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b04ba8"/>
        <function-ref name="set" scoped="" ref="0x40b04c88"/>
        <function-ref name="clr" scoped="" ref="0x40b04d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b02010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b021e8"/>
        <function-ref name="isInput" scoped="" ref="0x40b022c8"/>
        <function-ref name="toggle" scoped="" ref="0x40b023a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b02488"/>
        <function-ref name="get" scoped="" ref="0x40b02568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b02648"/>
        <function-ref name="set" scoped="" ref="0x40b02728"/>
        <function-ref name="clr" scoped="" ref="0x40b02808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40425e48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40425e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424050"/>
        <function-ref name="isInput" scoped="" ref="0x40424130"/>
        <function-ref name="toggle" scoped="" ref="0x40424210"/>
        <function-ref name="isOutput" scoped="" ref="0x404242f0"/>
        <function-ref name="get" scoped="" ref="0x404243d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404244b0"/>
        <function-ref name="set" scoped="" ref="0x40424590"/>
        <function-ref name="clr" scoped="" ref="0x40424670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40423ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40423ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40423d80"/>
        <function-ref name="toggle" scoped="" ref="0x40423e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40422010"/>
        <function-ref name="get" scoped="" ref="0x404220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404221d0"/>
        <function-ref name="set" scoped="" ref="0x404222b0"/>
        <function-ref name="clr" scoped="" ref="0x40422390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40426b00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40426b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40426db8"/>
        <function-ref name="toggle" scoped="" ref="0x40426e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40425010"/>
        <function-ref name="get" scoped="" ref="0x404250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="set" scoped="" ref="0x404252b0"/>
        <function-ref name="clr" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404247d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404247d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404249a8"/>
        <function-ref name="isInput" scoped="" ref="0x40424a88"/>
        <function-ref name="toggle" scoped="" ref="0x40424b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40424c48"/>
        <function-ref name="get" scoped="" ref="0x40424d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424e08"/>
        <function-ref name="set" scoped="" ref="0x40424ee8"/>
        <function-ref name="clr" scoped="" ref="0x40423010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404224f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404226c8"/>
        <function-ref name="isInput" scoped="" ref="0x404227a8"/>
        <function-ref name="toggle" scoped="" ref="0x40422888"/>
        <function-ref name="isOutput" scoped="" ref="0x40422968"/>
        <function-ref name="get" scoped="" ref="0x40422a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422b28"/>
        <function-ref name="set" scoped="" ref="0x40422c08"/>
        <function-ref name="clr" scoped="" ref="0x40422ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404254f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404254f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404256c8"/>
        <function-ref name="isInput" scoped="" ref="0x404257a8"/>
        <function-ref name="toggle" scoped="" ref="0x40425888"/>
        <function-ref name="isOutput" scoped="" ref="0x40425968"/>
        <function-ref name="get" scoped="" ref="0x40425a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425b28"/>
        <function-ref name="set" scoped="" ref="0x40425c08"/>
        <function-ref name="clr" scoped="" ref="0x40425ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40423170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40423170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423348"/>
        <function-ref name="isInput" scoped="" ref="0x40423428"/>
        <function-ref name="toggle" scoped="" ref="0x40423508"/>
        <function-ref name="isOutput" scoped="" ref="0x404235e8"/>
        <function-ref name="get" scoped="" ref="0x404236c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404237a8"/>
        <function-ref name="set" scoped="" ref="0x40423888"/>
        <function-ref name="clr" scoped="" ref="0x40423968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40422e48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40422e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d050"/>
        <function-ref name="isInput" scoped="" ref="0x4042d130"/>
        <function-ref name="toggle" scoped="" ref="0x4042d210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d2f0"/>
        <function-ref name="get" scoped="" ref="0x4042d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d4b0"/>
        <function-ref name="set" scoped="" ref="0x4042d590"/>
        <function-ref name="clr" scoped="" ref="0x4042d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b23418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b23418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b235f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b236d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b237b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b23890"/>
        <function-ref name="get" scoped="" ref="0x40b23970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b23a50"/>
        <function-ref name="set" scoped="" ref="0x40b23b30"/>
        <function-ref name="clr" scoped="" ref="0x40b23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b4ade0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b4ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b49010"/>
        <function-ref name="isInput" scoped="" ref="0x40b490f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b491d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b492b0"/>
        <function-ref name="get" scoped="" ref="0x40b49390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b49470"/>
        <function-ref name="set" scoped="" ref="0x40b49550"/>
        <function-ref name="clr" scoped="" ref="0x40b49630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b487f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b487f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b489d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b48ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b48b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b48c70"/>
        <function-ref name="get" scoped="" ref="0x40b48d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b48e30"/>
        <function-ref name="set" scoped="" ref="0x40b48f10"/>
        <function-ref name="clr" scoped="" ref="0x40b47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b46228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b46228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b46400"/>
        <function-ref name="isInput" scoped="" ref="0x40b464e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b465c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b466a0"/>
        <function-ref name="get" scoped="" ref="0x40b46780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b46860"/>
        <function-ref name="set" scoped="" ref="0x40b46940"/>
        <function-ref name="clr" scoped="" ref="0x40b46a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b44c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b44c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b44de0"/>
        <function-ref name="isInput" scoped="" ref="0x40b44ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b43010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b430f0"/>
        <function-ref name="get" scoped="" ref="0x40b431d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b432b0"/>
        <function-ref name="set" scoped="" ref="0x40b43390"/>
        <function-ref name="clr" scoped="" ref="0x40b43470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b426c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b426c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b42898"/>
        <function-ref name="isInput" scoped="" ref="0x40b42978"/>
        <function-ref name="toggle" scoped="" ref="0x40b42a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b42b38"/>
        <function-ref name="get" scoped="" ref="0x40b42c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b42cf8"/>
        <function-ref name="set" scoped="" ref="0x40b42dd8"/>
        <function-ref name="clr" scoped="" ref="0x40b42eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b400b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b400b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b40288"/>
        <function-ref name="isInput" scoped="" ref="0x40b40368"/>
        <function-ref name="toggle" scoped="" ref="0x40b40448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b40528"/>
        <function-ref name="get" scoped="" ref="0x40b40608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b406e8"/>
        <function-ref name="set" scoped="" ref="0x40b407c8"/>
        <function-ref name="clr" scoped="" ref="0x40b408a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3fa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3fc60"/>
        <function-ref name="isInput" scoped="" ref="0x40b3fd40"/>
        <function-ref name="toggle" scoped="" ref="0x40b3fe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3ff00"/>
        <function-ref name="get" scoped="" ref="0x40b3e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3e0f0"/>
        <function-ref name="set" scoped="" ref="0x40b3e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40b3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404296b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404296b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429888"/>
        <function-ref name="isInput" scoped="" ref="0x40429968"/>
        <function-ref name="toggle" scoped="" ref="0x40429a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40429b28"/>
        <function-ref name="get" scoped="" ref="0x40429c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429ce8"/>
        <function-ref name="set" scoped="" ref="0x40429dc8"/>
        <function-ref name="clr" scoped="" ref="0x40429ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40432330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40432330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432508"/>
        <function-ref name="isInput" scoped="" ref="0x404325e8"/>
        <function-ref name="toggle" scoped="" ref="0x404326c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404327a8"/>
        <function-ref name="get" scoped="" ref="0x40432888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432968"/>
        <function-ref name="set" scoped="" ref="0x40432a48"/>
        <function-ref name="clr" scoped="" ref="0x40432b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042a3d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4042a690"/>
        <function-ref name="toggle" scoped="" ref="0x4042a770"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a850"/>
        <function-ref name="get" scoped="" ref="0x4042a930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042aa10"/>
        <function-ref name="set" scoped="" ref="0x4042aaf0"/>
        <function-ref name="clr" scoped="" ref="0x4042abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40428030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40428030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428208"/>
        <function-ref name="isInput" scoped="" ref="0x404282e8"/>
        <function-ref name="toggle" scoped="" ref="0x404283c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404284a8"/>
        <function-ref name="get" scoped="" ref="0x40428588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428668"/>
        <function-ref name="set" scoped="" ref="0x40428748"/>
        <function-ref name="clr" scoped="" ref="0x40428828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40432c88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40432c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432e60"/>
        <function-ref name="isInput" scoped="" ref="0x40431010"/>
        <function-ref name="toggle" scoped="" ref="0x404310f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404311d0"/>
        <function-ref name="get" scoped="" ref="0x404312b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431390"/>
        <function-ref name="set" scoped="" ref="0x40431470"/>
        <function-ref name="clr" scoped="" ref="0x40431550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4042ad30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4042ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042af08"/>
        <function-ref name="isInput" scoped="" ref="0x40429010"/>
        <function-ref name="toggle" scoped="" ref="0x404290f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404291d0"/>
        <function-ref name="get" scoped="" ref="0x404292b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429390"/>
        <function-ref name="set" scoped="" ref="0x40429470"/>
        <function-ref name="clr" scoped="" ref="0x40429550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40428988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40428988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428b60"/>
        <function-ref name="isInput" scoped="" ref="0x40428c40"/>
        <function-ref name="toggle" scoped="" ref="0x40428d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40428e00"/>
        <function-ref name="get" scoped="" ref="0x40428ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432010"/>
        <function-ref name="set" scoped="" ref="0x404320f0"/>
        <function-ref name="clr" scoped="" ref="0x404321d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404316b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404316b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431888"/>
        <function-ref name="isInput" scoped="" ref="0x40431968"/>
        <function-ref name="toggle" scoped="" ref="0x40431a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40431b28"/>
        <function-ref name="get" scoped="" ref="0x40431c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431ce8"/>
        <function-ref name="set" scoped="" ref="0x40431dc8"/>
        <function-ref name="clr" scoped="" ref="0x40431ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b66de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b66de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b62010"/>
        <function-ref name="isInput" scoped="" ref="0x40b620f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b621d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b622b0"/>
        <function-ref name="get" scoped="" ref="0x40b62390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b62470"/>
        <function-ref name="set" scoped="" ref="0x40b62550"/>
        <function-ref name="clr" scoped="" ref="0x40b62630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b617f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b617f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b619d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b61ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b61b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b61c70"/>
        <function-ref name="get" scoped="" ref="0x40b61d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b61e30"/>
        <function-ref name="set" scoped="" ref="0x40b61f10"/>
        <function-ref name="clr" scoped="" ref="0x40b60010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b5f228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b5f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5f400"/>
        <function-ref name="isInput" scoped="" ref="0x40b5f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b5f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5f6a0"/>
        <function-ref name="get" scoped="" ref="0x40b5f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5f860"/>
        <function-ref name="set" scoped="" ref="0x40b5f940"/>
        <function-ref name="clr" scoped="" ref="0x40b5fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b86c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b86c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b86de0"/>
        <function-ref name="isInput" scoped="" ref="0x40b86ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b85010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b850f0"/>
        <function-ref name="get" scoped="" ref="0x40b851d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b852b0"/>
        <function-ref name="set" scoped="" ref="0x40b85390"/>
        <function-ref name="clr" scoped="" ref="0x40b85470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b846c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b846c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b84898"/>
        <function-ref name="isInput" scoped="" ref="0x40b84978"/>
        <function-ref name="toggle" scoped="" ref="0x40b84a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b84b38"/>
        <function-ref name="get" scoped="" ref="0x40b84c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b84cf8"/>
        <function-ref name="set" scoped="" ref="0x40b84dd8"/>
        <function-ref name="clr" scoped="" ref="0x40b84eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b820b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b820b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b82288"/>
        <function-ref name="isInput" scoped="" ref="0x40b82368"/>
        <function-ref name="toggle" scoped="" ref="0x40b82448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b82528"/>
        <function-ref name="get" scoped="" ref="0x40b82608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b826e8"/>
        <function-ref name="set" scoped="" ref="0x40b827c8"/>
        <function-ref name="clr" scoped="" ref="0x40b828a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b81a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b81a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b81c60"/>
        <function-ref name="isInput" scoped="" ref="0x40b81d40"/>
        <function-ref name="toggle" scoped="" ref="0x40b81e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b81f00"/>
        <function-ref name="get" scoped="" ref="0x40b80010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b800f0"/>
        <function-ref name="set" scoped="" ref="0x40b801d0"/>
        <function-ref name="clr" scoped="" ref="0x40b802b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7f538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7f710"/>
        <function-ref name="isInput" scoped="" ref="0x40b7f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7f9b0"/>
        <function-ref name="get" scoped="" ref="0x40b7fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7fb70"/>
        <function-ref name="set" scoped="" ref="0x40b7fc50"/>
        <function-ref name="clr" scoped="" ref="0x40b7fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40438170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40438170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438348"/>
        <function-ref name="isInput" scoped="" ref="0x40438428"/>
        <function-ref name="toggle" scoped="" ref="0x40438508"/>
        <function-ref name="isOutput" scoped="" ref="0x404385e8"/>
        <function-ref name="get" scoped="" ref="0x404386c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404387a8"/>
        <function-ref name="set" scoped="" ref="0x40438888"/>
        <function-ref name="clr" scoped="" ref="0x40438968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40437e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40437e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436050"/>
        <function-ref name="isInput" scoped="" ref="0x40436130"/>
        <function-ref name="toggle" scoped="" ref="0x40436210"/>
        <function-ref name="isOutput" scoped="" ref="0x404362f0"/>
        <function-ref name="get" scoped="" ref="0x404363d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404364b0"/>
        <function-ref name="set" scoped="" ref="0x40436590"/>
        <function-ref name="clr" scoped="" ref="0x40436670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4042edc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4042edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439010"/>
        <function-ref name="isInput" scoped="" ref="0x404390f0"/>
        <function-ref name="toggle" scoped="" ref="0x404391d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404392b0"/>
        <function-ref name="get" scoped="" ref="0x40439390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439470"/>
        <function-ref name="set" scoped="" ref="0x40439550"/>
        <function-ref name="clr" scoped="" ref="0x40439630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40438ac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40438ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40438d80"/>
        <function-ref name="toggle" scoped="" ref="0x40438e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40437010"/>
        <function-ref name="get" scoped="" ref="0x404370f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404371d0"/>
        <function-ref name="set" scoped="" ref="0x404372b0"/>
        <function-ref name="clr" scoped="" ref="0x40437390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404367d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404367d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404369a8"/>
        <function-ref name="isInput" scoped="" ref="0x40436a88"/>
        <function-ref name="toggle" scoped="" ref="0x40436b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40436c48"/>
        <function-ref name="get" scoped="" ref="0x40436d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436e08"/>
        <function-ref name="set" scoped="" ref="0x40436ee8"/>
        <function-ref name="clr" scoped="" ref="0x40435010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40439790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40439790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439968"/>
        <function-ref name="isInput" scoped="" ref="0x40439a48"/>
        <function-ref name="toggle" scoped="" ref="0x40439b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40439c08"/>
        <function-ref name="get" scoped="" ref="0x40439ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439dc8"/>
        <function-ref name="set" scoped="" ref="0x40439ea8"/>
        <function-ref name="clr" scoped="" ref="0x40438010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404374f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404374f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404376c8"/>
        <function-ref name="isInput" scoped="" ref="0x404377a8"/>
        <function-ref name="toggle" scoped="" ref="0x40437888"/>
        <function-ref name="isOutput" scoped="" ref="0x40437968"/>
        <function-ref name="get" scoped="" ref="0x40437a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437b28"/>
        <function-ref name="set" scoped="" ref="0x40437c08"/>
        <function-ref name="clr" scoped="" ref="0x40437ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40435170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40435170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435348"/>
        <function-ref name="isInput" scoped="" ref="0x40435428"/>
        <function-ref name="toggle" scoped="" ref="0x40435508"/>
        <function-ref name="isOutput" scoped="" ref="0x404355e8"/>
        <function-ref name="get" scoped="" ref="0x404356c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404357a8"/>
        <function-ref name="set" scoped="" ref="0x40435888"/>
        <function-ref name="clr" scoped="" ref="0x40435968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ba3938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ba3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ba3b10"/>
        <function-ref name="isInput" scoped="" ref="0x40ba3bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40ba3cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ba3db0"/>
        <function-ref name="get" scoped="" ref="0x40ba3e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ba2010"/>
        <function-ref name="set" scoped="" ref="0x40ba20f0"/>
        <function-ref name="clr" scoped="" ref="0x40ba21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ba13b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ba13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ba1588"/>
        <function-ref name="isInput" scoped="" ref="0x40ba1668"/>
        <function-ref name="toggle" scoped="" ref="0x40ba1748"/>
        <function-ref name="isOutput" scoped="" ref="0x40ba1828"/>
        <function-ref name="get" scoped="" ref="0x40ba1908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ba19e8"/>
        <function-ref name="set" scoped="" ref="0x40ba1ac8"/>
        <function-ref name="clr" scoped="" ref="0x40ba1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b9fd70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b9fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b9e010"/>
        <function-ref name="isInput" scoped="" ref="0x40b9e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b9e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b9e2b0"/>
        <function-ref name="get" scoped="" ref="0x40b9e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b9e470"/>
        <function-ref name="set" scoped="" ref="0x40b9e550"/>
        <function-ref name="clr" scoped="" ref="0x40b9e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b9d7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b9d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b9d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b9dab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b9db90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b9dc70"/>
        <function-ref name="get" scoped="" ref="0x40b9dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b9de30"/>
        <function-ref name="set" scoped="" ref="0x40b9df10"/>
        <function-ref name="clr" scoped="" ref="0x40b9c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b9b228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b9b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b9b400"/>
        <function-ref name="isInput" scoped="" ref="0x40b9b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b9b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b9b6a0"/>
        <function-ref name="get" scoped="" ref="0x40b9b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b9b860"/>
        <function-ref name="set" scoped="" ref="0x40b9b940"/>
        <function-ref name="clr" scoped="" ref="0x40b9ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc3c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc3de0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc2010"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc20f0"/>
        <function-ref name="get" scoped="" ref="0x40bc21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc22b0"/>
        <function-ref name="set" scoped="" ref="0x40bc2390"/>
        <function-ref name="clr" scoped="" ref="0x40bc2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc16c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc1898"/>
        <function-ref name="isInput" scoped="" ref="0x40bc1978"/>
        <function-ref name="toggle" scoped="" ref="0x40bc1a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc1b38"/>
        <function-ref name="get" scoped="" ref="0x40bc1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc1cf8"/>
        <function-ref name="set" scoped="" ref="0x40bc1dd8"/>
        <function-ref name="clr" scoped="" ref="0x40bc1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbf0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbf288"/>
        <function-ref name="isInput" scoped="" ref="0x40bbf368"/>
        <function-ref name="toggle" scoped="" ref="0x40bbf448"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbf528"/>
        <function-ref name="get" scoped="" ref="0x40bbf608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbf6e8"/>
        <function-ref name="set" scoped="" ref="0x40bbf7c8"/>
        <function-ref name="clr" scoped="" ref="0x40bbf8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043c9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043cbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4043cca0"/>
        <function-ref name="toggle" scoped="" ref="0x4043cd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ce60"/>
        <function-ref name="get" scoped="" ref="0x4043b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b0f0"/>
        <function-ref name="set" scoped="" ref="0x4043b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4043b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4043a790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4043a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a968"/>
        <function-ref name="isInput" scoped="" ref="0x4043aa48"/>
        <function-ref name="toggle" scoped="" ref="0x4043ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ac08"/>
        <function-ref name="get" scoped="" ref="0x4043ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043adc8"/>
        <function-ref name="set" scoped="" ref="0x4043aea8"/>
        <function-ref name="clr" scoped="" ref="0x40445010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043d6f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4043d9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4043da90"/>
        <function-ref name="isOutput" scoped="" ref="0x4043db70"/>
        <function-ref name="get" scoped="" ref="0x4043dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043dd30"/>
        <function-ref name="set" scoped="" ref="0x4043de10"/>
        <function-ref name="clr" scoped="" ref="0x4043def0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043b410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b888"/>
        <function-ref name="get" scoped="" ref="0x4043b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ba48"/>
        <function-ref name="set" scoped="" ref="0x4043bb28"/>
        <function-ref name="clr" scoped="" ref="0x4043bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40445170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40445170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445348"/>
        <function-ref name="isInput" scoped="" ref="0x40445428"/>
        <function-ref name="toggle" scoped="" ref="0x40445508"/>
        <function-ref name="isOutput" scoped="" ref="0x404455e8"/>
        <function-ref name="get" scoped="" ref="0x404456c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404457a8"/>
        <function-ref name="set" scoped="" ref="0x40445888"/>
        <function-ref name="clr" scoped="" ref="0x40445968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043c090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c268"/>
        <function-ref name="isInput" scoped="" ref="0x4043c348"/>
        <function-ref name="toggle" scoped="" ref="0x4043c428"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c508"/>
        <function-ref name="get" scoped="" ref="0x4043c5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c6c8"/>
        <function-ref name="set" scoped="" ref="0x4043c7a8"/>
        <function-ref name="clr" scoped="" ref="0x4043c888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043bd68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a010"/>
        <function-ref name="isInput" scoped="" ref="0x4043a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4043a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a2b0"/>
        <function-ref name="get" scoped="" ref="0x4043a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a470"/>
        <function-ref name="set" scoped="" ref="0x4043a550"/>
        <function-ref name="clr" scoped="" ref="0x4043a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40445ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40445ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40445d80"/>
        <function-ref name="toggle" scoped="" ref="0x40445e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40444010"/>
        <function-ref name="get" scoped="" ref="0x404440f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404441d0"/>
        <function-ref name="set" scoped="" ref="0x404442b0"/>
        <function-ref name="clr" scoped="" ref="0x40444390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be7538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be7710"/>
        <function-ref name="isInput" scoped="" ref="0x40be77f0"/>
        <function-ref name="toggle" scoped="" ref="0x40be78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40be79b0"/>
        <function-ref name="get" scoped="" ref="0x40be7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be7b70"/>
        <function-ref name="set" scoped="" ref="0x40be7c50"/>
        <function-ref name="clr" scoped="" ref="0x40be7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be5010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be51e8"/>
        <function-ref name="isInput" scoped="" ref="0x40be52c8"/>
        <function-ref name="toggle" scoped="" ref="0x40be53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40be5488"/>
        <function-ref name="get" scoped="" ref="0x40be5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be5648"/>
        <function-ref name="set" scoped="" ref="0x40be5728"/>
        <function-ref name="clr" scoped="" ref="0x40be5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be49e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40be4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40be4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40be4e60"/>
        <function-ref name="get" scoped="" ref="0x40be3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be30f0"/>
        <function-ref name="set" scoped="" ref="0x40be31d0"/>
        <function-ref name="clr" scoped="" ref="0x40be32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be2538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be2710"/>
        <function-ref name="isInput" scoped="" ref="0x40be27f0"/>
        <function-ref name="toggle" scoped="" ref="0x40be28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40be29b0"/>
        <function-ref name="get" scoped="" ref="0x40be2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be2b70"/>
        <function-ref name="set" scoped="" ref="0x40be2c50"/>
        <function-ref name="clr" scoped="" ref="0x40be2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be0010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40be02c8"/>
        <function-ref name="toggle" scoped="" ref="0x40be03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40be0488"/>
        <function-ref name="get" scoped="" ref="0x40be0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be0648"/>
        <function-ref name="set" scoped="" ref="0x40be0728"/>
        <function-ref name="clr" scoped="" ref="0x40be0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdf9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdfbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bdfca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdfd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdfe60"/>
        <function-ref name="get" scoped="" ref="0x40bde010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bde0f0"/>
        <function-ref name="set" scoped="" ref="0x40bde1d0"/>
        <function-ref name="clr" scoped="" ref="0x40bde2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdd538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdd710"/>
        <function-ref name="isInput" scoped="" ref="0x40bdd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdd8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdd9b0"/>
        <function-ref name="get" scoped="" ref="0x40bdda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bddb70"/>
        <function-ref name="set" scoped="" ref="0x40bddc50"/>
        <function-ref name="clr" scoped="" ref="0x40bddd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdb010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdb1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bdb2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bdb3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdb488"/>
        <function-ref name="get" scoped="" ref="0x40bdb568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bdb648"/>
        <function-ref name="set" scoped="" ref="0x40bdb728"/>
        <function-ref name="clr" scoped="" ref="0x40bdb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4044b330" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4044b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044b508"/>
        <function-ref name="isInput" scoped="" ref="0x4044b5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044b6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b7a8"/>
        <function-ref name="get" scoped="" ref="0x4044b888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b968"/>
        <function-ref name="set" scoped="" ref="0x4044ba48"/>
        <function-ref name="clr" scoped="" ref="0x4044bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40449030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40449030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449208"/>
        <function-ref name="isInput" scoped="" ref="0x404492e8"/>
        <function-ref name="toggle" scoped="" ref="0x404493c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404494a8"/>
        <function-ref name="get" scoped="" ref="0x40449588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449668"/>
        <function-ref name="set" scoped="" ref="0x40449748"/>
        <function-ref name="clr" scoped="" ref="0x40449828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40440010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40440010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404401e8"/>
        <function-ref name="isInput" scoped="" ref="0x404402c8"/>
        <function-ref name="toggle" scoped="" ref="0x404403a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40440488"/>
        <function-ref name="get" scoped="" ref="0x40440568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440648"/>
        <function-ref name="set" scoped="" ref="0x40440728"/>
        <function-ref name="clr" scoped="" ref="0x40440808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4044bc88" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4044bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044be60"/>
        <function-ref name="isInput" scoped="" ref="0x4044a010"/>
        <function-ref name="toggle" scoped="" ref="0x4044a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a1d0"/>
        <function-ref name="get" scoped="" ref="0x4044a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a390"/>
        <function-ref name="set" scoped="" ref="0x4044a470"/>
        <function-ref name="clr" scoped="" ref="0x4044a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40449988" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40449988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449b60"/>
        <function-ref name="isInput" scoped="" ref="0x40449c40"/>
        <function-ref name="toggle" scoped="" ref="0x40449d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40449e00"/>
        <function-ref name="get" scoped="" ref="0x40449ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448010"/>
        <function-ref name="set" scoped="" ref="0x404480f0"/>
        <function-ref name="clr" scoped="" ref="0x404481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40440968" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40440968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440b40"/>
        <function-ref name="isInput" scoped="" ref="0x40440c20"/>
        <function-ref name="toggle" scoped="" ref="0x40440d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40440de0"/>
        <function-ref name="get" scoped="" ref="0x40440ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b010"/>
        <function-ref name="set" scoped="" ref="0x4044b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4044b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4044a6b0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4044a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a888"/>
        <function-ref name="isInput" scoped="" ref="0x4044a968"/>
        <function-ref name="toggle" scoped="" ref="0x4044aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ab28"/>
        <function-ref name="get" scoped="" ref="0x4044ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044ace8"/>
        <function-ref name="set" scoped="" ref="0x4044adc8"/>
        <function-ref name="clr" scoped="" ref="0x4044aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40448330" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40448330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448508"/>
        <function-ref name="isInput" scoped="" ref="0x404485e8"/>
        <function-ref name="toggle" scoped="" ref="0x404486c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404487a8"/>
        <function-ref name="get" scoped="" ref="0x40448888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448968"/>
        <function-ref name="set" scoped="" ref="0x40448a48"/>
        <function-ref name="clr" scoped="" ref="0x40448b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c03c20" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c03c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c03df8"/>
        <function-ref name="isInput" scoped="" ref="0x40c03ed8"/>
        <function-ref name="toggle" scoped="" ref="0x40c2b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2b0f0"/>
        <function-ref name="get" scoped="" ref="0x40c2b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2b2b0"/>
        <function-ref name="set" scoped="" ref="0x40c2b390"/>
        <function-ref name="clr" scoped="" ref="0x40c2b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2a6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2a898"/>
        <function-ref name="isInput" scoped="" ref="0x40c2a978"/>
        <function-ref name="toggle" scoped="" ref="0x40c2aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2ab38"/>
        <function-ref name="get" scoped="" ref="0x40c2ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2acf8"/>
        <function-ref name="set" scoped="" ref="0x40c2add8"/>
        <function-ref name="clr" scoped="" ref="0x40c2aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c280b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c280b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c28288"/>
        <function-ref name="isInput" scoped="" ref="0x40c28368"/>
        <function-ref name="toggle" scoped="" ref="0x40c28448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c28528"/>
        <function-ref name="get" scoped="" ref="0x40c28608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c286e8"/>
        <function-ref name="set" scoped="" ref="0x40c287c8"/>
        <function-ref name="clr" scoped="" ref="0x40c288a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c27a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c27a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c27c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c27d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c27e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c27f00"/>
        <function-ref name="get" scoped="" ref="0x40c26010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c260f0"/>
        <function-ref name="set" scoped="" ref="0x40c261d0"/>
        <function-ref name="clr" scoped="" ref="0x40c262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c25538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c25538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c25710"/>
        <function-ref name="isInput" scoped="" ref="0x40c257f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c258d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c259b0"/>
        <function-ref name="get" scoped="" ref="0x40c25a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c25b70"/>
        <function-ref name="set" scoped="" ref="0x40c25c50"/>
        <function-ref name="clr" scoped="" ref="0x40c25d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c23010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c231e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c232c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c233a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c23488"/>
        <function-ref name="get" scoped="" ref="0x40c23568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c23648"/>
        <function-ref name="set" scoped="" ref="0x40c23728"/>
        <function-ref name="clr" scoped="" ref="0x40c23808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c229e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c229e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c22bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c22ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c22d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c22e60"/>
        <function-ref name="get" scoped="" ref="0x40c21010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c210f0"/>
        <function-ref name="set" scoped="" ref="0x40c211d0"/>
        <function-ref name="clr" scoped="" ref="0x40c212b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c20538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c20538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c20710"/>
        <function-ref name="isInput" scoped="" ref="0x40c207f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c208d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c209b0"/>
        <function-ref name="get" scoped="" ref="0x40c20a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c20b70"/>
        <function-ref name="set" scoped="" ref="0x40c20c50"/>
        <function-ref name="clr" scoped="" ref="0x40c20d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404512d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404512d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404514a8"/>
        <function-ref name="isInput" scoped="" ref="0x40451588"/>
        <function-ref name="toggle" scoped="" ref="0x40451668"/>
        <function-ref name="isOutput" scoped="" ref="0x40451748"/>
        <function-ref name="get" scoped="" ref="0x40451828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451908"/>
        <function-ref name="set" scoped="" ref="0x404519e8"/>
        <function-ref name="clr" scoped="" ref="0x40451ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045a8a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045aa78"/>
        <function-ref name="isInput" scoped="" ref="0x4045ab58"/>
        <function-ref name="toggle" scoped="" ref="0x4045ac38"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ad18"/>
        <function-ref name="get" scoped="" ref="0x4045adf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045aed8"/>
        <function-ref name="set" scoped="" ref="0x40459010"/>
        <function-ref name="clr" scoped="" ref="0x404590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40463ec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40463ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404620c0"/>
        <function-ref name="isInput" scoped="" ref="0x404621a0"/>
        <function-ref name="toggle" scoped="" ref="0x40462280"/>
        <function-ref name="isOutput" scoped="" ref="0x40462360"/>
        <function-ref name="get" scoped="" ref="0x40462440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462520"/>
        <function-ref name="set" scoped="" ref="0x40462600"/>
        <function-ref name="clr" scoped="" ref="0x404626e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40460538" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40460538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460710"/>
        <function-ref name="isInput" scoped="" ref="0x404607f0"/>
        <function-ref name="toggle" scoped="" ref="0x404608d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404609b0"/>
        <function-ref name="get" scoped="" ref="0x40460a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460b70"/>
        <function-ref name="set" scoped="" ref="0x40460c50"/>
        <function-ref name="clr" scoped="" ref="0x40460d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40469b68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40469b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469d40"/>
        <function-ref name="isInput" scoped="" ref="0x40469e20"/>
        <function-ref name="toggle" scoped="" ref="0x40469f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40468010"/>
        <function-ref name="get" scoped="" ref="0x404680f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404681d0"/>
        <function-ref name="set" scoped="" ref="0x404682b0"/>
        <function-ref name="clr" scoped="" ref="0x40468390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40466228" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40466228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466400"/>
        <function-ref name="isInput" scoped="" ref="0x404664e0"/>
        <function-ref name="toggle" scoped="" ref="0x404665c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404666a0"/>
        <function-ref name="get" scoped="" ref="0x40466780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466860"/>
        <function-ref name="set" scoped="" ref="0x40466940"/>
        <function-ref name="clr" scoped="" ref="0x40466a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404648f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40464ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40464c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40464d68"/>
        <function-ref name="get" scoped="" ref="0x40464e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464f28"/>
        <function-ref name="set" scoped="" ref="0x4046f018"/>
        <function-ref name="clr" scoped="" ref="0x4046f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046dec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046dec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c360"/>
        <function-ref name="get" scoped="" ref="0x4046c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c520"/>
        <function-ref name="set" scoped="" ref="0x4046c600"/>
        <function-ref name="clr" scoped="" ref="0x4046c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046a3e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a5c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046a6a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046a780"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a860"/>
        <function-ref name="get" scoped="" ref="0x4046a940"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046aa20"/>
        <function-ref name="set" scoped="" ref="0x4046ab00"/>
        <function-ref name="clr" scoped="" ref="0x4046abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404738f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404738f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40473ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40473c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40473d68"/>
        <function-ref name="get" scoped="" ref="0x40473e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473f28"/>
        <function-ref name="set" scoped="" ref="0x40472018"/>
        <function-ref name="clr" scoped="" ref="0x404720f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40471dd8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40471dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470010"/>
        <function-ref name="isInput" scoped="" ref="0x404700f0"/>
        <function-ref name="toggle" scoped="" ref="0x404701d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404702b0"/>
        <function-ref name="get" scoped="" ref="0x40470390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470470"/>
        <function-ref name="set" scoped="" ref="0x40470550"/>
        <function-ref name="clr" scoped="" ref="0x40470630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4047a3b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4047a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a588"/>
        <function-ref name="isInput" scoped="" ref="0x4047a668"/>
        <function-ref name="toggle" scoped="" ref="0x4047a748"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a828"/>
        <function-ref name="get" scoped="" ref="0x4047a908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a9e8"/>
        <function-ref name="set" scoped="" ref="0x4047aac8"/>
        <function-ref name="clr" scoped="" ref="0x4047aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404778a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404778a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477a78"/>
        <function-ref name="isInput" scoped="" ref="0x40477b58"/>
        <function-ref name="toggle" scoped="" ref="0x40477c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40477d18"/>
        <function-ref name="get" scoped="" ref="0x40477df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477ed8"/>
        <function-ref name="set" scoped="" ref="0x40476010"/>
        <function-ref name="clr" scoped="" ref="0x404760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b84d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b84d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404b8888" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404b8a60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404b8b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404b8c20"/>
        <function-ref name="actualMicro" scoped="" ref="0x404b8d00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404b8de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404ce220" loc="60:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404ce220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ce3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404c2090" loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404c2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404c2268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TinyOSBoot" ref="0x404c13f8" loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404c13f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404c15d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404c1e20" loc="59:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404c1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ce010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x404c1798" loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x404c1798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x404c1970"/>
        <function-ref name="init" scoped="" ref="0x404c1a50"/>
        <function-ref name="taskLoop" scoped="" ref="0x404c1b30"/>
        <function-ref name="runNextTask" scoped="" ref="0x404c1c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404ce568" loc="61:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404ce568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404ce740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404ce820"/>
        <function-ref name="led1On" scoped="" ref="0x404ce900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404ce9e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404ceac0"/>
        <function-ref name="get" scoped="" ref="0x404ceba0"/>
        <function-ref name="led1Off" scoped="" ref="0x404cec80"/>
        <function-ref name="led2Off" scoped="" ref="0x404cd018"/>
        <function-ref name="set" scoped="" ref="0x404ced60"/>
        <function-ref name="led0On" scoped="" ref="0x404cee40"/>
        <function-ref name="led2On" scoped="" ref="0x404cef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x404c2ef0" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404c2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404c10e0"/>
        <function-ref name="reset" scoped="" ref="0x404c11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d44e8" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d44e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404a2cb0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a2e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404d40e0" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404d40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d42b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSchedulerBoot" ref="0x404d00f0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/RealMainImplP.nc">
      <component-ref qname="RealMainImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x403112d0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x403112d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x403114a8"/>
        <function-ref name="stopThread" scoped="" ref="0x40311588"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40311668"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40311748"/>
        <function-ref name="startThread" scoped="" ref="0x40311828"/>
        <function-ref name="threadInfo" scoped="" ref="0x40311908"/>
        <function-ref name="initThread" scoped="" ref="0x403119e8"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40311ac8"/>
        <function-ref name="joinThread" scoped="" ref="0x40311ba8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40311c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fed58" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f4010"/>
        <function-ref name="runTask" scoped="" ref="0x402f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x402f64c8" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x402f66a0"/>
        <function-ref name="init" scoped="" ref="0x402f6780"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f6860"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4038c208" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4038c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4038c3e0"/>
        <function-ref name="stopThread" scoped="" ref="0x4038c4c0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4038c5a0"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4038c680"/>
        <function-ref name="startThread" scoped="" ref="0x4038c760"/>
        <function-ref name="threadInfo" scoped="" ref="0x4038c840"/>
        <function-ref name="initThread" scoped="" ref="0x4038c920"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4038ca00"/>
        <function-ref name="joinThread" scoped="" ref="0x4038cae0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4038cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40385c80" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40385c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40385e58"/>
        <function-ref name="runTask" scoped="" ref="0x4038c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x40385368" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x40385368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x40385540"/>
        <function-ref name="init" scoped="" ref="0x40385620"/>
        <function-ref name="taskLoop" scoped="" ref="0x40385700"/>
        <function-ref name="runNextTask" scoped="" ref="0x403857e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4038dd10" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4038dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4038dee8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4038b010"/>
        <function-ref name="led1On" scoped="" ref="0x4038b0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4038b1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4038b2b0"/>
        <function-ref name="get" scoped="" ref="0x4038b390"/>
        <function-ref name="led1Off" scoped="" ref="0x4038b470"/>
        <function-ref name="led2Off" scoped="" ref="0x4038b7f0"/>
        <function-ref name="set" scoped="" ref="0x4038b550"/>
        <function-ref name="led0On" scoped="" ref="0x4038b630"/>
        <function-ref name="led2On" scoped="" ref="0x4038b710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403a9e88" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403a9e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403a3070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4039d9f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4039d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4039dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403a26d8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403a26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403a28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40316b60" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40316b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40316d38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40316e18"/>
        <function-ref name="led1On" scoped="" ref="0x40316ef8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403b0010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403b00f0"/>
        <function-ref name="get" scoped="" ref="0x403b01d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403b02b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403b0630"/>
        <function-ref name="set" scoped="" ref="0x403b0390"/>
        <function-ref name="led0On" scoped="" ref="0x403b0470"/>
        <function-ref name="led2On" scoped="" ref="0x403b0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x403ba9a8" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403ba9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bab80"/>
        <function-ref name="isInput" scoped="" ref="0x403bac60"/>
        <function-ref name="toggle" scoped="" ref="0x403bad40"/>
        <function-ref name="isOutput" scoped="" ref="0x403bae20"/>
        <function-ref name="get" scoped="" ref="0x403baf00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4010"/>
        <function-ref name="set" scoped="" ref="0x403b40f0"/>
        <function-ref name="clr" scoped="" ref="0x403b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b7778" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x403b43c0" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403b43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4598"/>
        <function-ref name="isInput" scoped="" ref="0x403b4678"/>
        <function-ref name="toggle" scoped="" ref="0x403b4758"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4838"/>
        <function-ref name="get" scoped="" ref="0x403b4918"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b49f8"/>
        <function-ref name="set" scoped="" ref="0x403b4ad8"/>
        <function-ref name="clr" scoped="" ref="0x403b4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403b7ac0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403b7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403b7c98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403b7d78"/>
        <function-ref name="led1On" scoped="" ref="0x403b7e58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403b6010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403b60f0"/>
        <function-ref name="get" scoped="" ref="0x403b61d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403b62b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403b6630"/>
        <function-ref name="set" scoped="" ref="0x403b6390"/>
        <function-ref name="led0On" scoped="" ref="0x403b6470"/>
        <function-ref name="led2On" scoped="" ref="0x403b6550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x403b4da8" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403b4da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd010"/>
        <function-ref name="isInput" scoped="" ref="0x403bd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403bd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd2b0"/>
        <function-ref name="get" scoped="" ref="0x403bd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd470"/>
        <function-ref name="set" scoped="" ref="0x403bd550"/>
        <function-ref name="clr" scoped="" ref="0x403bd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x403c9010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c91e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c92c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9488"/>
        <function-ref name="get" scoped="" ref="0x403c9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9648"/>
        <function-ref name="set" scoped="" ref="0x403c9728"/>
        <function-ref name="clr" scoped="" ref="0x403c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x403c9a18" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403c9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9bf0"/>
        <function-ref name="isInput" scoped="" ref="0x403c9cd0"/>
        <function-ref name="toggle" scoped="" ref="0x403c9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9e90"/>
        <function-ref name="get" scoped="" ref="0x403c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c80f0"/>
        <function-ref name="set" scoped="" ref="0x403c81d0"/>
        <function-ref name="clr" scoped="" ref="0x403c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x403c8e48" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403c8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403d0050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x403c84c0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403c84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8698"/>
        <function-ref name="isInput" scoped="" ref="0x403c8778"/>
        <function-ref name="toggle" scoped="" ref="0x403c8858"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8938"/>
        <function-ref name="get" scoped="" ref="0x403c8a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8af8"/>
        <function-ref name="set" scoped="" ref="0x403c8bd8"/>
        <function-ref name="clr" scoped="" ref="0x403c8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404d1040" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404d1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404d1218"/>
        <function-ref name="stopThread" scoped="" ref="0x404d12f8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404d13d8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404d14b8"/>
        <function-ref name="startThread" scoped="" ref="0x404d1598"/>
        <function-ref name="threadInfo" scoped="" ref="0x404d1678"/>
        <function-ref name="initThread" scoped="" ref="0x404d1758"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404d1838"/>
        <function-ref name="joinThread" scoped="" ref="0x404d1918"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404d19f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404da960" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404da960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404dab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404da590" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404da590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404da768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404dadc8" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404dadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404dc498" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404dc498"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404dc670"/>
        <function-ref name="reset" scoped="" ref="0x404dc750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404d7010" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404d71e8"/>
        <function-ref name="stopThread" scoped="" ref="0x404d72c8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404d73a8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404d7488"/>
        <function-ref name="startThread" scoped="" ref="0x404d7568"/>
        <function-ref name="threadInfo" scoped="" ref="0x404d7648"/>
        <function-ref name="initThread" scoped="" ref="0x404d7728"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404d7808"/>
        <function-ref name="joinThread" scoped="" ref="0x404d78e8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404d79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PreemptionAlarm" ref="0x404f0d88" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PreemptionAlarm" scoped="" ref="0x404f0d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404e78a8"/>
        <function-ref name="fired" scoped="" ref="0x404e8b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404e7268"/>
        <function-ref name="isOneShot" scoped="" ref="0x404e7010"/>
        <function-ref name="getdt" scoped="" ref="0x404e7d58"/>
        <function-ref name="gett0" scoped="" ref="0x404e7b00"/>
        <function-ref name="isRunning" scoped="" ref="0x404e8d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404e83c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404e7588"/>
        <function-ref name="startOneShot" scoped="" ref="0x404e8640"/>
        <function-ref name="stop" scoped="" ref="0x404e88c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404d7bc0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404d7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d7d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x404de588" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x404de588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x404de760"/>
        <function-ref name="isEmpty" scoped="" ref="0x404de840"/>
        <function-ref name="init" scoped="" ref="0x404de920"/>
        <function-ref name="remove" scoped="" ref="0x404dea00"/>
        <function-ref name="dequeue" scoped="" ref="0x404deae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="alarmTask" ref="0x404ed2a0" loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="alarmTask" scoped="" ref="0x404ed2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404ed478"/>
        <function-ref name="runTask" scoped="" ref="0x404ed558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitArrayUtils" ref="0x404e9d30" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x404e9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x404e9f08"/>
        <function-ref name="clrArray" scoped="" ref="0x404e2010"/>
        <function-ref name="getBit" scoped="" ref="0x404e20f0"/>
        <function-ref name="setBit" scoped="" ref="0x404e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404d6258" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404d6258"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404d6430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404d66c0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d6898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404e2368" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404e2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x404e2540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e26b0" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e2888"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e2968"/>
        <function-ref name="led1On" scoped="" ref="0x404e2a48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e2b28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e2c08"/>
        <function-ref name="get" scoped="" ref="0x404e2ce8"/>
        <function-ref name="led1Off" scoped="" ref="0x404e2dc8"/>
        <function-ref name="led2Off" scoped="" ref="0x404e11d0"/>
        <function-ref name="set" scoped="" ref="0x404e2ea8"/>
        <function-ref name="led0On" scoped="" ref="0x404e1010"/>
        <function-ref name="led2On" scoped="" ref="0x404e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404d6d20" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404d6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404d6ef8"/>
        <function-ref name="reset" scoped="" ref="0x404e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitArrayUtils" ref="0x40560450" loc="29:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BitArrayUtilsC.nc">
      <component-ref qname="BitArrayUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x40560450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x40560628"/>
        <function-ref name="clrArray" scoped="" ref="0x40560708"/>
        <function-ref name="getBit" scoped="" ref="0x405607e8"/>
        <function-ref name="setBit" scoped="" ref="0x405608c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x4055f518" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueC.nc">
      <component-ref qname="ThreadQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x4055f518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4055f6f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4055f7d0"/>
        <function-ref name="init" scoped="" ref="0x4055f8b0"/>
        <function-ref name="remove" scoped="" ref="0x4055f990"/>
        <function-ref name="dequeue" scoped="" ref="0x4055fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkedList" ref="0x40582178" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/LinkedListC.nc">
      <component-ref qname="LinkedListC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40582178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40582350"/>
        <function-ref name="getLast" scoped="" ref="0x40582430"/>
        <function-ref name="indexOf" scoped="" ref="0x40582510"/>
        <function-ref name="addAfter" scoped="" ref="0x405825f0"/>
        <function-ref name="addLast" scoped="" ref="0x405826d0"/>
        <function-ref name="removeAt" scoped="" ref="0x405827b0"/>
        <function-ref name="init" scoped="" ref="0x40582890"/>
        <function-ref name="addAt" scoped="" ref="0x40582970"/>
        <function-ref name="addFirst" scoped="" ref="0x40582a50"/>
        <function-ref name="remove" scoped="" ref="0x40582b30"/>
        <function-ref name="removeBefore" scoped="" ref="0x40582c10"/>
        <function-ref name="getAfter" scoped="" ref="0x40582cf0"/>
        <function-ref name="getAt" scoped="" ref="0x40582dd0"/>
        <function-ref name="removeLast" scoped="" ref="0x40570010"/>
        <function-ref name="getBefore" scoped="" ref="0x405700f0"/>
        <function-ref name="addBefore" scoped="" ref="0x405701d0"/>
        <function-ref name="removeAfter" scoped="" ref="0x405702b0"/>
        <function-ref name="getFirst" scoped="" ref="0x40570390"/>
        <function-ref name="removeFirst" scoped="" ref="0x40570470"/>
        <function-ref name="size" scoped="" ref="0x40570550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x405632f8" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x405632f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x405634d0"/>
        <function-ref name="isEmpty" scoped="" ref="0x405635b0"/>
        <function-ref name="init" scoped="" ref="0x40563690"/>
        <function-ref name="remove" scoped="" ref="0x40563770"/>
        <function-ref name="dequeue" scoped="" ref="0x40563850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x40563a38" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40563a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40563c10"/>
        <function-ref name="getLast" scoped="" ref="0x40563cf0"/>
        <function-ref name="indexOf" scoped="" ref="0x40563dd0"/>
        <function-ref name="addAfter" scoped="" ref="0x40563eb0"/>
        <function-ref name="addLast" scoped="" ref="0x405ba010"/>
        <function-ref name="removeAt" scoped="" ref="0x405ba0f0"/>
        <function-ref name="init" scoped="" ref="0x405ba1d0"/>
        <function-ref name="addAt" scoped="" ref="0x405ba2b0"/>
        <function-ref name="addFirst" scoped="" ref="0x405ba390"/>
        <function-ref name="remove" scoped="" ref="0x405ba470"/>
        <function-ref name="removeBefore" scoped="" ref="0x405ba550"/>
        <function-ref name="getAfter" scoped="" ref="0x405ba630"/>
        <function-ref name="getAt" scoped="" ref="0x405ba710"/>
        <function-ref name="removeLast" scoped="" ref="0x405ba870"/>
        <function-ref name="getBefore" scoped="" ref="0x405ba950"/>
        <function-ref name="addBefore" scoped="" ref="0x405baa30"/>
        <function-ref name="removeAfter" scoped="" ref="0x405bab10"/>
        <function-ref name="getFirst" scoped="" ref="0x405babf0"/>
        <function-ref name="removeFirst" scoped="" ref="0x405bacd0"/>
        <function-ref name="size" scoped="" ref="0x405badb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405c3010" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="TinyThreadSchedulerC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c8b00"/>
        <function-ref name="fired" scoped="" ref="0x405c3d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c84c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c8268"/>
        <function-ref name="getdt" scoped="" ref="0x406c7010"/>
        <function-ref name="gett0" scoped="" ref="0x406c8d58"/>
        <function-ref name="isRunning" scoped="" ref="0x406c8010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405c3638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c87e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x405c38b8"/>
        <function-ref name="stop" scoped="" ref="0x405c3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405bfa68" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405bfa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405cd570"/>
        <function-ref name="fired" scoped="" ref="0x405ce810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405cef18"/>
        <function-ref name="isOneShot" scoped="" ref="0x405cecc0"/>
        <function-ref name="getdt" scoped="" ref="0x405cda20"/>
        <function-ref name="gett0" scoped="" ref="0x405cd7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405cea68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405ce0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405cd250"/>
        <function-ref name="startOneShot" scoped="" ref="0x405ce338"/>
        <function-ref name="stop" scoped="" ref="0x405ce5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405c9a70" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405c9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c7570"/>
        <function-ref name="fired" scoped="" ref="0x405c8810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405c8f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x405c8cc0"/>
        <function-ref name="getdt" scoped="" ref="0x405c7a20"/>
        <function-ref name="gett0" scoped="" ref="0x405c77c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405c8a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405c80b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c7250"/>
        <function-ref name="startOneShot" scoped="" ref="0x405c8338"/>
        <function-ref name="stop" scoped="" ref="0x405c85b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x405d5af0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x405d5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405d7200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405c92c0" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405c92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405c9498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x405da658" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x405da658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405dada8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405de2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405de048"/>
        <function-ref name="overflow" scoped="" ref="0x405de538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d3240" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d3240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d3418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x405dfcb8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x405dfcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405d1190"/>
        <function-ref name="fired" scoped="" ref="0x405d2938"/>
        <function-ref name="startAt" scoped="" ref="0x405d2e28"/>
        <function-ref name="isRunning" scoped="" ref="0x405d2bb0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405d1408"/>
        <function-ref name="start" scoped="" ref="0x405d2420"/>
        <function-ref name="stop" scoped="" ref="0x405d26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40667578" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40667578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40675ab8"/>
        <function-ref name="fired" scoped="" ref="0x40675288"/>
        <function-ref name="startAt" scoped="" ref="0x40675778"/>
        <function-ref name="isRunning" scoped="" ref="0x40675500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40675d30"/>
        <function-ref name="start" scoped="" ref="0x40667cc8"/>
        <function-ref name="stop" scoped="" ref="0x40675010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40667140" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40667140"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40667318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406730a0" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406730a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406737f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40673ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40673a68"/>
        <function-ref name="overflow" scoped="" ref="0x40672010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40c86158" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40c86158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40c86330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40c86410"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40c864f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40c865d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40c866b0"/>
        <function-ref name="setControl" scoped="" ref="0x40c86790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c8d2b0" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c8d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c8c760"/>
        <function-ref name="fired" scoped="" ref="0x40c8df18"/>
        <function-ref name="startAt" scoped="" ref="0x40c8c420"/>
        <function-ref name="isRunning" scoped="" ref="0x40c8c1a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c8c9d8"/>
        <function-ref name="start" scoped="" ref="0x40c8da00"/>
        <function-ref name="stop" scoped="" ref="0x40c8dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c8fe28" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c8fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c8d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c8cd08" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c8cd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c8a478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c8a968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c8a6f0"/>
        <function-ref name="overflow" scoped="" ref="0x40c8abe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40cb53d0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40cb53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40cb55a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x40cb5688"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40cb5768"/>
        <function-ref name="countBusy" scoped="" ref="0x40cb5848"/>
        <function-ref name="getAssr" scoped="" ref="0x40cb5928"/>
        <function-ref name="setAssr" scoped="" ref="0x40cb5a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40c86980" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40c86980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c85f08"/>
        <function-ref name="fired" scoped="" ref="0x40c85528"/>
        <function-ref name="get" scoped="" ref="0x40c85010"/>
        <function-ref name="reset" scoped="" ref="0x40c857a0"/>
        <function-ref name="isOn" scoped="" ref="0x40cb51a0"/>
        <function-ref name="set" scoped="" ref="0x40c85288"/>
        <function-ref name="start" scoped="" ref="0x40c85a18"/>
        <function-ref name="stop" scoped="" ref="0x40c85c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c8aed0" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c8aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c889f0"/>
        <function-ref name="test" scoped="" ref="0x40c88500"/>
        <function-ref name="get" scoped="" ref="0x40c89578"/>
        <function-ref name="setScale" scoped="" ref="0x40c88c68"/>
        <function-ref name="getScale" scoped="" ref="0x40c88f08"/>
        <function-ref name="reset" scoped="" ref="0x40c89d08"/>
        <function-ref name="overflow" scoped="" ref="0x40c89a90"/>
        <function-ref name="isOn" scoped="" ref="0x40c88778"/>
        <function-ref name="set" scoped="" ref="0x40c897f0"/>
        <function-ref name="start" scoped="" ref="0x40c88010"/>
        <function-ref name="stop" scoped="" ref="0x40c88288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40632760" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40632760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40632938"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40632a18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40632af8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40632bd8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40632cb8"/>
        <function-ref name="setControl" scoped="" ref="0x40632d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4062fc30" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4062fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4062fe08"/>
        <function-ref name="compareBusy" scoped="" ref="0x4062fee8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4062e010"/>
        <function-ref name="countBusy" scoped="" ref="0x4062e0f0"/>
        <function-ref name="getAssr" scoped="" ref="0x4062e1d0"/>
        <function-ref name="setAssr" scoped="" ref="0x4062e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406300f0" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406300f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4062f660"/>
        <function-ref name="fired" scoped="" ref="0x40630c50"/>
        <function-ref name="get" scoped="" ref="0x40630738"/>
        <function-ref name="reset" scoped="" ref="0x40630ec8"/>
        <function-ref name="isOn" scoped="" ref="0x4062f8d8"/>
        <function-ref name="set" scoped="" ref="0x406309b0"/>
        <function-ref name="start" scoped="" ref="0x4062f170"/>
        <function-ref name="stop" scoped="" ref="0x4062f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40621488" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40621488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40633ee0"/>
        <function-ref name="test" scoped="" ref="0x406339f0"/>
        <function-ref name="get" scoped="" ref="0x40621ad0"/>
        <function-ref name="setScale" scoped="" ref="0x40632170"/>
        <function-ref name="getScale" scoped="" ref="0x40632410"/>
        <function-ref name="reset" scoped="" ref="0x40633288"/>
        <function-ref name="overflow" scoped="" ref="0x40633010"/>
        <function-ref name="isOn" scoped="" ref="0x40633c68"/>
        <function-ref name="set" scoped="" ref="0x40621d48"/>
        <function-ref name="start" scoped="" ref="0x40633500"/>
        <function-ref name="stop" scoped="" ref="0x40633778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4063c030" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4063c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x4063c208"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4063c2e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4063c3c8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4063c4a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4063c588"/>
        <function-ref name="setControl" scoped="" ref="0x4063c668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4063a458" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4063a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4063a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x40639828" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x40639828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x40639a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4063a8b8" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4063a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4063aa90"/>
        <function-ref name="compareBusy" scoped="" ref="0x4063ab70"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4063ac50"/>
        <function-ref name="countBusy" scoped="" ref="0x4063ad30"/>
        <function-ref name="getAssr" scoped="" ref="0x4063ae10"/>
        <function-ref name="setAssr" scoped="" ref="0x4063aef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4063c990" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4063c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4063bf08"/>
        <function-ref name="fired" scoped="" ref="0x4063b528"/>
        <function-ref name="get" scoped="" ref="0x4063b010"/>
        <function-ref name="reset" scoped="" ref="0x4063b7a0"/>
        <function-ref name="isOn" scoped="" ref="0x4063a1a0"/>
        <function-ref name="set" scoped="" ref="0x4063b288"/>
        <function-ref name="start" scoped="" ref="0x4063ba18"/>
        <function-ref name="stop" scoped="" ref="0x4063bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4062ed28" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4062ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4063d7b0"/>
        <function-ref name="test" scoped="" ref="0x4063d2c0"/>
        <function-ref name="get" scoped="" ref="0x4062b390"/>
        <function-ref name="setScale" scoped="" ref="0x4063da28"/>
        <function-ref name="getScale" scoped="" ref="0x4063dcc8"/>
        <function-ref name="reset" scoped="" ref="0x4062bb20"/>
        <function-ref name="overflow" scoped="" ref="0x4062b8a8"/>
        <function-ref name="isOn" scoped="" ref="0x4063d538"/>
        <function-ref name="set" scoped="" ref="0x4062b608"/>
        <function-ref name="start" scoped="" ref="0x4062bd98"/>
        <function-ref name="stop" scoped="" ref="0x4063d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x4062c378" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/PlatformInterruptC.nc">
      <component-ref qname="PlatformInterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x4062c378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x4062c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40666b50" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40666b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40666d28"/>
        <function-ref name="stopThread" scoped="" ref="0x40666e08"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40666ee8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40679010"/>
        <function-ref name="startThread" scoped="" ref="0x406790f0"/>
        <function-ref name="threadInfo" scoped="" ref="0x406791d0"/>
        <function-ref name="initThread" scoped="" ref="0x406792b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40679390"/>
        <function-ref name="joinThread" scoped="" ref="0x40679470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40679550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x40666120" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x40666120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x406662f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x40666500" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x40666500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x406666d8"/>
        <function-ref name="init" scoped="" ref="0x406667b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x40666898"/>
        <function-ref name="runNextTask" scoped="" ref="0x40666978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40694298" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40694298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40694470"/>
        <function-ref name="runTask" scoped="" ref="0x40694550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406978d8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406978d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40695d90"/>
        <function-ref name="fired" scoped="" ref="0x40695560"/>
        <function-ref name="startAt" scoped="" ref="0x40695a50"/>
        <function-ref name="isRunning" scoped="" ref="0x406957d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40694048"/>
        <function-ref name="start" scoped="" ref="0x40695048"/>
        <function-ref name="stop" scoped="" ref="0x406952e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406715d8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406715d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406970d8"/>
        <function-ref name="fired" scoped="" ref="0x40684368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40684a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40684818"/>
        <function-ref name="getdt" scoped="" ref="0x40697588"/>
        <function-ref name="gett0" scoped="" ref="0x40697330"/>
        <function-ref name="isRunning" scoped="" ref="0x406845c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40671c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40684d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40671e80"/>
        <function-ref name="stop" scoped="" ref="0x40684110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406bd948" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406bd948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406bdb20"/>
        <function-ref name="runTask" scoped="" ref="0x406bdc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406bf688" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406bf688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bd248"/>
        <function-ref name="fired" scoped="" ref="0x406be4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406bebf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406be998"/>
        <function-ref name="getdt" scoped="" ref="0x406bd6f8"/>
        <function-ref name="gett0" scoped="" ref="0x406bd4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x406be740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406bfcb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406bef10"/>
        <function-ref name="startOneShot" scoped="" ref="0x406be010"/>
        <function-ref name="stop" scoped="" ref="0x406be290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40691338" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40691338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c1ea8"/>
        <function-ref name="fired" scoped="" ref="0x406c1110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c1848"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c15e0"/>
        <function-ref name="getdt" scoped="" ref="0x406bf398"/>
        <function-ref name="gett0" scoped="" ref="0x406bf130"/>
        <function-ref name="isRunning" scoped="" ref="0x406c1378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40691970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c1b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40691c00"/>
        <function-ref name="stop" scoped="" ref="0x40691e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406cbd28" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406cbd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ba390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406ba6e0" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ba6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406bae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b9350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b90d8"/>
        <function-ref name="overflow" scoped="" ref="0x406b95c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x406d81f8" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x406d81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x406d83d0"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x406d84b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x406d5a20" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x406d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x406d5bf8"/>
        <function-ref name="resume" scoped="" ref="0x406d5cd8"/>
        <function-ref name="join" scoped="" ref="0x406d5db8"/>
        <function-ref name="run" scoped="" ref="0x406d5e98"/>
        <function-ref name="start" scoped="" ref="0x406c3010"/>
        <function-ref name="sleep" scoped="" ref="0x406c30f0"/>
        <function-ref name="stop" scoped="" ref="0x406c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x406d4020" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x406d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406d41f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x406d1988" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x406d1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x406d1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x406d8978" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x406d8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406d8b50"/>
        <function-ref name="reset" scoped="" ref="0x406d8c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x406cfc58" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x406cfc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x406cfe30"/>
        <function-ref name="stopThread" scoped="" ref="0x406cff10"/>
        <function-ref name="currentThreadId" scoped="" ref="0x406ce010"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x406ce0f0"/>
        <function-ref name="startThread" scoped="" ref="0x406ce1d0"/>
        <function-ref name="threadInfo" scoped="" ref="0x406ce2b0"/>
        <function-ref name="initThread" scoped="" ref="0x406ce390"/>
        <function-ref name="wakeupThread" scoped="" ref="0x406ce470"/>
        <function-ref name="joinThread" scoped="" ref="0x406ce550"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x406ce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x406cf788" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x406cf788"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x406cf960"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x406cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x406d4b80" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x406d4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x406d4d58"/>
        <function-ref name="resume" scoped="" ref="0x406d4e38"/>
        <function-ref name="join" scoped="" ref="0x406d4f18"/>
        <function-ref name="run" scoped="" ref="0x406cf010"/>
        <function-ref name="start" scoped="" ref="0x406cf0f0"/>
        <function-ref name="sleep" scoped="" ref="0x406cf1d0"/>
        <function-ref name="stop" scoped="" ref="0x406cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x406e14b8" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x406e14b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406e1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x406e3e08" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x406e3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x406e1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSleep" ref="0x406e3040" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x406e3040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x406e3218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x406e36a0" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x406e36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e3878"/>
        <function-ref name="reset" scoped="" ref="0x406e3958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406e1800" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406e1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406e19d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406e1ab8"/>
        <function-ref name="led1On" scoped="" ref="0x406e1b98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406e1c78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406e1d58"/>
        <function-ref name="get" scoped="" ref="0x406e1e38"/>
        <function-ref name="led1Off" scoped="" ref="0x406e1f18"/>
        <function-ref name="led2Off" scoped="" ref="0x406e02b0"/>
        <function-ref name="set" scoped="" ref="0x406e0010"/>
        <function-ref name="led0On" scoped="" ref="0x406e00f0"/>
        <function-ref name="led2On" scoped="" ref="0x406e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x406f63e0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x406f63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406f65b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x406f6b48" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x406f6b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f6d20"/>
        <function-ref name="reset" scoped="" ref="0x406f6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x406d2c30" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406d2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406d2e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x406f53c0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x406f53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f5598"/>
        <function-ref name="reset" scoped="" ref="0x406f5678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x406f1238" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x406f1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406f1410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x406f19a0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x406f19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f1b78"/>
        <function-ref name="reset" scoped="" ref="0x406f1c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x406f0958" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x406f0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406f0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x406f2a78" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x406f2a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406f2c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x406f01f8" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x406f01f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f03d0"/>
        <function-ref name="reset" scoped="" ref="0x406f04b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406f0ca0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406f0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406f0e78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40704010"/>
        <function-ref name="led1On" scoped="" ref="0x407040f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407041d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407042b0"/>
        <function-ref name="get" scoped="" ref="0x40704390"/>
        <function-ref name="led1Off" scoped="" ref="0x40704470"/>
        <function-ref name="led2Off" scoped="" ref="0x407047f0"/>
        <function-ref name="set" scoped="" ref="0x40704550"/>
        <function-ref name="led0On" scoped="" ref="0x40704630"/>
        <function-ref name="led2On" scoped="" ref="0x40704710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x406f2238" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x406f2238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f2410"/>
        <function-ref name="reset" scoped="" ref="0x406f24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x4070d1d0" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepC.nc">
      <component-ref qname="ThreadSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x4070d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4070d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4070dea0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadTimersC.nc">
      <component-ref qname="ThreadTimersC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4070dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40708988"/>
        <function-ref name="fired" scoped="" ref="0x40709c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40708348"/>
        <function-ref name="isOneShot" scoped="" ref="0x407080f0"/>
        <function-ref name="getdt" scoped="" ref="0x40708e38"/>
        <function-ref name="gett0" scoped="" ref="0x40708be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40709e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407094d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40708668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40709758"/>
        <function-ref name="stop" scoped="" ref="0x407099d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407077e8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ThreadTimersC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407077e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4071a330"/>
        <function-ref name="fired" scoped="" ref="0x40705590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40705c98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40705a40"/>
        <function-ref name="getdt" scoped="" ref="0x4071a7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4071a588"/>
        <function-ref name="isRunning" scoped="" ref="0x407057e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40707e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4071a010"/>
        <function-ref name="startOneShot" scoped="" ref="0x407050b8"/>
        <function-ref name="stop" scoped="" ref="0x40705338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40712148" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40712148"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40712320"/>
        <function-ref name="runTask" scoped="" ref="0x40712400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40716ed8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40716ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40713a18"/>
        <function-ref name="fired" scoped="" ref="0x40714cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407133d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40713180"/>
        <function-ref name="getdt" scoped="" ref="0x40713ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40713c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40714f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40714558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407136f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x407147d8"/>
        <function-ref name="stop" scoped="" ref="0x40714a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40719ad8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40719ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40716718"/>
        <function-ref name="fired" scoped="" ref="0x40718968"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407160b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40718e38"/>
        <function-ref name="getdt" scoped="" ref="0x40716be8"/>
        <function-ref name="gett0" scoped="" ref="0x40716980"/>
        <function-ref name="isRunning" scoped="" ref="0x40718bd0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407181e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407163e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40718470"/>
        <function-ref name="stop" scoped="" ref="0x40718700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x407244a0" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x407244a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40724678"/>
        <function-ref name="stopThread" scoped="" ref="0x40724758"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40724838"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40724918"/>
        <function-ref name="startThread" scoped="" ref="0x407249f8"/>
        <function-ref name="threadInfo" scoped="" ref="0x40724ad8"/>
        <function-ref name="initThread" scoped="" ref="0x40724bb8"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40724c98"/>
        <function-ref name="joinThread" scoped="" ref="0x40724d78"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40724e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMilli" ref="0x40723418" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40723418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4071f010"/>
        <function-ref name="fired" scoped="" ref="0x40720268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40720970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40720718"/>
        <function-ref name="getdt" scoped="" ref="0x4071f4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4071f268"/>
        <function-ref name="isRunning" scoped="" ref="0x407204c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40723a40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40720c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40723cc0"/>
        <function-ref name="stop" scoped="" ref="0x40720010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40724010" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40724010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x407241e8"/>
        <function-ref name="start" scoped="" ref="0x407242c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4071f700" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4071f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4071f8d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4071f9b8"/>
        <function-ref name="led1On" scoped="" ref="0x4071fa98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4071fb78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4071fc58"/>
        <function-ref name="get" scoped="" ref="0x4071fd38"/>
        <function-ref name="led1Off" scoped="" ref="0x4071fe18"/>
        <function-ref name="led2Off" scoped="" ref="0x4071d1d0"/>
        <function-ref name="set" scoped="" ref="0x4071fef8"/>
        <function-ref name="led0On" scoped="" ref="0x4071d010"/>
        <function-ref name="led2On" scoped="" ref="0x4071d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x4070b7a0" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x4070b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4070b978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x4070abe0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallC.nc">
      <component-ref qname="SystemCallC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x4070abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x4070adb8"/>
        <function-ref name="start" scoped="" ref="0x4070ae98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4072da28" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4072da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4072dc00"/>
        <function-ref name="stopThread" scoped="" ref="0x4072dce0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4072ddc0"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4072dea0"/>
        <function-ref name="startThread" scoped="" ref="0x4072a010"/>
        <function-ref name="threadInfo" scoped="" ref="0x4072a0f0"/>
        <function-ref name="initThread" scoped="" ref="0x4072a1d0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4072a2b0"/>
        <function-ref name="joinThread" scoped="" ref="0x4072a390"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4072a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x4072d558" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x4072d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x4072d730"/>
        <function-ref name="start" scoped="" ref="0x4072d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="threadTask" ref="0x40729010" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="threadTask" scoped="" ref="0x40729010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407291e8"/>
        <function-ref name="runTask" scoped="" ref="0x407292c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Produtor" ref="0x407356d8" loc="7:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Produtor" scoped="" ref="0x407356d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x407358b0"/>
        <function-ref name="resume" scoped="" ref="0x40735990"/>
        <function-ref name="join" scoped="" ref="0x40735a70"/>
        <function-ref name="run" scoped="" ref="0x40735b50"/>
        <function-ref name="start" scoped="" ref="0x40735c30"/>
        <function-ref name="sleep" scoped="" ref="0x40735d10"/>
        <function-ref name="stop" scoped="" ref="0x40735df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x4077be70" loc="12:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x4077be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40749070"/>
        <function-ref name="stop" scoped="" ref="0x40749150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40735308" loc="6:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40735308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407354e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40772e50" loc="14:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40772e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077a050"/>
        <function-ref name="payloadLength" scoped="" ref="0x4077a130"/>
        <function-ref name="getPayload" scoped="" ref="0x4077a210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077a2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4077a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Consumidor" ref="0x40734010" loc="8:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Consumidor" scoped="" ref="0x40734010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x407341e8"/>
        <function-ref name="resume" scoped="" ref="0x407342c8"/>
        <function-ref name="join" scoped="" ref="0x407343a8"/>
        <function-ref name="run" scoped="" ref="0x40734488"/>
        <function-ref name="start" scoped="" ref="0x40734568"/>
        <function-ref name="sleep" scoped="" ref="0x40734648"/>
        <function-ref name="stop" scoped="" ref="0x40734728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockingAMSend" ref="0x40779bf0" loc="13:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40779bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40779dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x40779ea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40748010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSender" ref="0x40734948" loc="9:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSender" scoped="" ref="0x40734948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x40734b20"/>
        <function-ref name="resume" scoped="" ref="0x40734c00"/>
        <function-ref name="join" scoped="" ref="0x40734ce0"/>
        <function-ref name="run" scoped="" ref="0x40734dc0"/>
        <function-ref name="start" scoped="" ref="0x40734ea0"/>
        <function-ref name="sleep" scoped="" ref="0x40733010"/>
        <function-ref name="stop" scoped="" ref="0x407330f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40733260" loc="10:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40733260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40733438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40733518"/>
        <function-ref name="led1On" scoped="" ref="0x407335f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407336d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407337b8"/>
        <function-ref name="get" scoped="" ref="0x40733898"/>
        <function-ref name="led1Off" scoped="" ref="0x40733978"/>
        <function-ref name="led2Off" scoped="" ref="0x40733cf8"/>
        <function-ref name="set" scoped="" ref="0x40733a58"/>
        <function-ref name="led0On" scoped="" ref="0x40733b38"/>
        <function-ref name="led2On" scoped="" ref="0x40733c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Semaphore" ref="0x40787de8" loc="18:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40787de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40771010"/>
        <function-ref name="reset" scoped="" ref="0x407710f0"/>
        <function-ref name="acquire" scoped="" ref="0x407711d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4077a768" loc="16:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4077a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077aeb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407773c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40777150"/>
        <function-ref name="overflow" scoped="" ref="0x40777640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x40796a50" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x40796a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x40796c28"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x40796d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x407961f8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x407961f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x407963d0"/>
        <function-ref name="resume" scoped="" ref="0x407964b0"/>
        <function-ref name="join" scoped="" ref="0x40796590"/>
        <function-ref name="run" scoped="" ref="0x40796670"/>
        <function-ref name="start" scoped="" ref="0x40796750"/>
        <function-ref name="sleep" scoped="" ref="0x40796830"/>
        <function-ref name="stop" scoped="" ref="0x40796910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40796e48" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40796e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407ac050"/>
        <function-ref name="reset" scoped="" ref="0x407ac130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cf31f8" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cf31f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cf33d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cf3c50" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cf3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cf3e28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cf3f08"/>
        <function-ref name="led1On" scoped="" ref="0x40cf1010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cf10f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cf11d0"/>
        <function-ref name="get" scoped="" ref="0x40cf12b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40cf1390"/>
        <function-ref name="led0On" scoped="" ref="0x40cf1710"/>
        <function-ref name="set" scoped="" ref="0x40cf1550"/>
        <function-ref name="led2On" scoped="" ref="0x40cf1470"/>
        <function-ref name="led2Off" scoped="" ref="0x40cf1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40cf3908" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40cf3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40cf3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40cf3510" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40cf3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf36e8"/>
        <function-ref name="reset" scoped="" ref="0x40cf37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x407ab868" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x407ab868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x407aba40"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x407abb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x407ab010" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x407ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x407ab1e8"/>
        <function-ref name="resume" scoped="" ref="0x407ab2c8"/>
        <function-ref name="join" scoped="" ref="0x407ab3a8"/>
        <function-ref name="run" scoped="" ref="0x407ab488"/>
        <function-ref name="start" scoped="" ref="0x407ab568"/>
        <function-ref name="sleep" scoped="" ref="0x407ab648"/>
        <function-ref name="stop" scoped="" ref="0x407ab728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x407abc60" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x407abc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407abe38"/>
        <function-ref name="reset" scoped="" ref="0x407abf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ce67d8" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ce67d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ce69b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ce5250" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ce5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ce5428"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ce5508"/>
        <function-ref name="led1On" scoped="" ref="0x40ce55e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ce56c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ce57a8"/>
        <function-ref name="get" scoped="" ref="0x40ce5888"/>
        <function-ref name="led1Off" scoped="" ref="0x40ce5968"/>
        <function-ref name="led0On" scoped="" ref="0x40ce5ce8"/>
        <function-ref name="set" scoped="" ref="0x40ce5b28"/>
        <function-ref name="led2On" scoped="" ref="0x40ce5a48"/>
        <function-ref name="led2Off" scoped="" ref="0x40ce5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40ce6ee8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40ce6ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40ce50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40ce6af0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40ce6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ce6cc8"/>
        <function-ref name="reset" scoped="" ref="0x40ce6da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x407a9690" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x407a9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x407a9868"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x407a9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x407aae10" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x407aae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="pause" scoped="" ref="0x407a9010"/>
        <function-ref name="resume" scoped="" ref="0x407a90f0"/>
        <function-ref name="join" scoped="" ref="0x407a91d0"/>
        <function-ref name="run" scoped="" ref="0x407a92b0"/>
        <function-ref name="start" scoped="" ref="0x407a9390"/>
        <function-ref name="sleep" scoped="" ref="0x407a9470"/>
        <function-ref name="stop" scoped="" ref="0x407a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x407a9a88" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x407a9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a9c60"/>
        <function-ref name="reset" scoped="" ref="0x407a9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d09e40" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d09e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d07050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d078d0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d078d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d07aa8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d07b88"/>
        <function-ref name="led1On" scoped="" ref="0x40d07c68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d07d48"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d07e28"/>
        <function-ref name="get" scoped="" ref="0x40d07f08"/>
        <function-ref name="led1Off" scoped="" ref="0x40d06010"/>
        <function-ref name="led0On" scoped="" ref="0x40d06390"/>
        <function-ref name="set" scoped="" ref="0x40d061d0"/>
        <function-ref name="led2On" scoped="" ref="0x40d060f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40d07588" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40d07588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40d07760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40d07190" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40d07190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d07368"/>
        <function-ref name="reset" scoped="" ref="0x40d07448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407a8c20" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407a8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a5380"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a5870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a55f8"/>
        <function-ref name="overflow" scoped="" ref="0x407a5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407a4640" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407a4640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TThree" ref="0x40382bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a4d90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a12c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a1048"/>
        <function-ref name="overflow" scoped="" ref="0x407a1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407b3010" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407b31e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x407b32c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407b33a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x407b3488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407b3568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407b3648"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407b3728"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x407b3808"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407b38e8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x407b39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407c3e68" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407c3e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407ad908"/>
        <function-ref name="test" scoped="" ref="0x407ad418"/>
        <function-ref name="get" scoped="" ref="0x407b24d8"/>
        <function-ref name="captured" scoped="" ref="0x407b29f0"/>
        <function-ref name="reset" scoped="" ref="0x407b2c90"/>
        <function-ref name="isOn" scoped="" ref="0x407ad690"/>
        <function-ref name="set" scoped="" ref="0x407b2750"/>
        <function-ref name="start" scoped="" ref="0x407b2f08"/>
        <function-ref name="stop" scoped="" ref="0x407ad1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407c1028" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407c1028"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407c0578"/>
        <function-ref name="fired" scoped="" ref="0x407c1b88"/>
        <function-ref name="get" scoped="" ref="0x407c1670"/>
        <function-ref name="reset" scoped="" ref="0x407c1e00"/>
        <function-ref name="isOn" scoped="" ref="0x407c07f0"/>
        <function-ref name="set" scoped="" ref="0x407c18e8"/>
        <function-ref name="start" scoped="" ref="0x407c0088"/>
        <function-ref name="stop" scoped="" ref="0x407c0300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407b6010" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407b5a68"/>
        <function-ref name="test" scoped="" ref="0x407b5578"/>
        <function-ref name="get" scoped="" ref="0x407b6658"/>
        <function-ref name="setScale" scoped="" ref="0x407b5ce0"/>
        <function-ref name="getScale" scoped="" ref="0x407b4010"/>
        <function-ref name="reset" scoped="" ref="0x407b6de8"/>
        <function-ref name="overflow" scoped="" ref="0x407b6b70"/>
        <function-ref name="isOn" scoped="" ref="0x407b57f0"/>
        <function-ref name="set" scoped="" ref="0x407b68d0"/>
        <function-ref name="start" scoped="" ref="0x407b5088"/>
        <function-ref name="stop" scoped="" ref="0x407b5300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407ba530" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407ba530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407ba708"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x407ba7e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407ba8c8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x407ba9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407baa88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407bab68"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407bac48"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x407bad28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407bae08"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x407baee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x407d0128" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x407d0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407cf690"/>
        <function-ref name="fired" scoped="" ref="0x407d0c88"/>
        <function-ref name="get" scoped="" ref="0x407d0770"/>
        <function-ref name="reset" scoped="" ref="0x407d0f00"/>
        <function-ref name="isOn" scoped="" ref="0x407cf908"/>
        <function-ref name="set" scoped="" ref="0x407d09e8"/>
        <function-ref name="start" scoped="" ref="0x407cf1a0"/>
        <function-ref name="stop" scoped="" ref="0x407cf418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407d3258" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407d3258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407d2cc0"/>
        <function-ref name="test" scoped="" ref="0x407d27d0"/>
        <function-ref name="get" scoped="" ref="0x407d38a0"/>
        <function-ref name="captured" scoped="" ref="0x407d3db8"/>
        <function-ref name="reset" scoped="" ref="0x407d2068"/>
        <function-ref name="isOn" scoped="" ref="0x407d2a48"/>
        <function-ref name="set" scoped="" ref="0x407d3b18"/>
        <function-ref name="start" scoped="" ref="0x407d22e0"/>
        <function-ref name="stop" scoped="" ref="0x407d2558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x407ca490" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x407ca490"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x407ca668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407cfd20" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407cfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407cc2c0"/>
        <function-ref name="fired" scoped="" ref="0x407ce8a8"/>
        <function-ref name="get" scoped="" ref="0x407ce390"/>
        <function-ref name="reset" scoped="" ref="0x407ceb20"/>
        <function-ref name="isOn" scoped="" ref="0x407cc538"/>
        <function-ref name="set" scoped="" ref="0x407ce608"/>
        <function-ref name="start" scoped="" ref="0x407ced98"/>
        <function-ref name="stop" scoped="" ref="0x407cc048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x407cc950" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x407cc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407cbf08"/>
        <function-ref name="fired" scoped="" ref="0x407cb528"/>
        <function-ref name="get" scoped="" ref="0x407cb010"/>
        <function-ref name="reset" scoped="" ref="0x407cb7a0"/>
        <function-ref name="isOn" scoped="" ref="0x407ca1a0"/>
        <function-ref name="set" scoped="" ref="0x407cb288"/>
        <function-ref name="start" scoped="" ref="0x407cba18"/>
        <function-ref name="stop" scoped="" ref="0x407cbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407bd230" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407bd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407bbca0"/>
        <function-ref name="test" scoped="" ref="0x407bb7b0"/>
        <function-ref name="get" scoped="" ref="0x407bd878"/>
        <function-ref name="setScale" scoped="" ref="0x407bbf18"/>
        <function-ref name="getScale" scoped="" ref="0x407ba1d0"/>
        <function-ref name="reset" scoped="" ref="0x407bb048"/>
        <function-ref name="overflow" scoped="" ref="0x407bdd90"/>
        <function-ref name="isOn" scoped="" ref="0x407bba28"/>
        <function-ref name="set" scoped="" ref="0x407bdaf0"/>
        <function-ref name="start" scoped="" ref="0x407bb2c0"/>
        <function-ref name="stop" scoped="" ref="0x407bb538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40819a40" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40819a40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40819c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40819e28" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40819e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4082c898"/>
        <function-ref name="test" scoped="" ref="0x4082c3a8"/>
        <function-ref name="get" scoped="" ref="0x40818488"/>
        <function-ref name="setScale" scoped="" ref="0x4082cb10"/>
        <function-ref name="getScale" scoped="" ref="0x4082cdb0"/>
        <function-ref name="reset" scoped="" ref="0x40818c18"/>
        <function-ref name="overflow" scoped="" ref="0x408189a0"/>
        <function-ref name="isOn" scoped="" ref="0x4082c620"/>
        <function-ref name="set" scoped="" ref="0x40818700"/>
        <function-ref name="start" scoped="" ref="0x40818e90"/>
        <function-ref name="stop" scoped="" ref="0x4082c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4081c618" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4081c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TThree" ref="0x40382bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4081cd68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40829288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40829010"/>
        <function-ref name="overflow" scoped="" ref="0x40829500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408297e0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40839288"/>
        <function-ref name="test" scoped="" ref="0x4083ad38"/>
        <function-ref name="get" scoped="" ref="0x40829e28"/>
        <function-ref name="setScale" scoped="" ref="0x40839500"/>
        <function-ref name="getScale" scoped="" ref="0x408397a0"/>
        <function-ref name="reset" scoped="" ref="0x4083a5d0"/>
        <function-ref name="overflow" scoped="" ref="0x4083a358"/>
        <function-ref name="isOn" scoped="" ref="0x40839010"/>
        <function-ref name="set" scoped="" ref="0x4083a0b8"/>
        <function-ref name="start" scoped="" ref="0x4083a848"/>
        <function-ref name="stop" scoped="" ref="0x4083aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40837cd8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40837cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TThree" ref="0x40382bc8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40842478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40842968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408426f0"/>
        <function-ref name="overflow" scoped="" ref="0x40842be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407a29f0" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407a29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40837200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408376f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40837478"/>
        <function-ref name="overflow" scoped="" ref="0x40837968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40858de8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40858de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4083e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4083eab8" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4083eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083ec90"/>
        <function-ref name="payloadLength" scoped="" ref="0x4083ed70"/>
        <function-ref name="getPayload" scoped="" ref="0x4083ee50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40859010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x4083e5a0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x4083e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4083e778"/>
        <function-ref name="getPayload" scoped="" ref="0x4083e858"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083e938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40858880" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40858880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40858a58"/>
        <function-ref name="getPayload" scoped="" ref="0x40858b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40864b10" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40864b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40864ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40864dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40864ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x407a7908" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x407a7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407a7ae0"/>
        <function-ref name="stop" scoped="" ref="0x407a7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4084c990" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4084c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4084cb68"/>
        <function-ref name="source" scoped="" ref="0x4084cc48"/>
        <function-ref name="address" scoped="" ref="0x4084cd28"/>
        <function-ref name="destination" scoped="" ref="0x4084ce08"/>
        <function-ref name="setSource" scoped="" ref="0x4084cee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40856010"/>
        <function-ref name="type" scoped="" ref="0x408560f0"/>
        <function-ref name="setType" scoped="" ref="0x408561d0"/>
        <function-ref name="isForMe" scoped="" ref="0x408562b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40856390"/>
        <function-ref name="localGroup" scoped="" ref="0x40856470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4085e980" loc="35:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4085e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4085eb58"/>
        <function-ref name="stopDone" scoped="" ref="0x4085ec38"/>
        <function-ref name="start" scoped="" ref="0x4085ed18"/>
        <function-ref name="stop" scoped="" ref="0x4085edf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40874388" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40874388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40874560"/>
        <function-ref name="getPayload" scoped="" ref="0x40874640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40874720"/>
        <function-ref name="cancel" scoped="" ref="0x40874800"/>
        <function-ref name="sendDone" scoped="" ref="0x408748e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4085d200" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4085d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085d3d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4085d4b8"/>
        <function-ref name="getPayload" scoped="" ref="0x4085d598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085d678"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4085d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40870e90" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40870e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4085d080"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40873af0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40873af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40873cc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40873da8"/>
        <function-ref name="led1On" scoped="" ref="0x40873e88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40871010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408710f0"/>
        <function-ref name="get" scoped="" ref="0x408711d0"/>
        <function-ref name="led1Off" scoped="" ref="0x408712b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40871630"/>
        <function-ref name="set" scoped="" ref="0x40871390"/>
        <function-ref name="led0On" scoped="" ref="0x40871470"/>
        <function-ref name="led2On" scoped="" ref="0x40871550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408735b8" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408735b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40873790"/>
        <function-ref name="noAck" scoped="" ref="0x40873870"/>
        <function-ref name="wasAcked" scoped="" ref="0x40873950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40870850" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40870850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40870a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4085d8f0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4085d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4085dac8"/>
        <function-ref name="source" scoped="" ref="0x4085dba8"/>
        <function-ref name="address" scoped="" ref="0x4085dc88"/>
        <function-ref name="destination" scoped="" ref="0x4085dd68"/>
        <function-ref name="setSource" scoped="" ref="0x4085de48"/>
        <function-ref name="setDestination" scoped="" ref="0x4085df28"/>
        <function-ref name="type" scoped="" ref="0x40873018"/>
        <function-ref name="setType" scoped="" ref="0x408730f8"/>
        <function-ref name="isForMe" scoped="" ref="0x408731d8"/>
        <function-ref name="setGroup" scoped="" ref="0x408732b8"/>
        <function-ref name="localGroup" scoped="" ref="0x40873398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a5c00" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a5dd8"/>
        <function-ref name="getPayload" scoped="" ref="0x408a5eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a4010"/>
        <function-ref name="cancel" scoped="" ref="0x408a40f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408a41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408a4330" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408a4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4086f5c8" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4086f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086f7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4086f890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4086f970"/>
        <function-ref name="cancel" scoped="" ref="0x4086fa50"/>
        <function-ref name="sendDone" scoped="" ref="0x4086fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408a5040" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408a5040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408a5218"/>
        <function-ref name="payloadLength" scoped="" ref="0x408a52f8"/>
        <function-ref name="getPayload" scoped="" ref="0x408a53d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a54b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408a5598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4086fd08" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4086fd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4086fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408a56d8" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408a56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408a58b0"/>
        <function-ref name="noAck" scoped="" ref="0x408a5990"/>
        <function-ref name="wasAcked" scoped="" ref="0x408a5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4086e128" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4086e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4086e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4086e450" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4086e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4086e628"/>
        <function-ref name="source" scoped="" ref="0x4086e708"/>
        <function-ref name="address" scoped="" ref="0x4086e7e8"/>
        <function-ref name="destination" scoped="" ref="0x4086e8c8"/>
        <function-ref name="setSource" scoped="" ref="0x4086e9a8"/>
        <function-ref name="setDestination" scoped="" ref="0x4086ea88"/>
        <function-ref name="type" scoped="" ref="0x4086eb68"/>
        <function-ref name="setType" scoped="" ref="0x4086ec48"/>
        <function-ref name="isForMe" scoped="" ref="0x4086ed28"/>
        <function-ref name="setGroup" scoped="" ref="0x4086ee08"/>
        <function-ref name="localGroup" scoped="" ref="0x4086eee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408a3b00" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408a3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408a3cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x408a3db8"/>
        <function-ref name="start" scoped="" ref="0x408a3e98"/>
        <function-ref name="stop" scoped="" ref="0x408a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408a0a60" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408a0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a0c38"/>
        <function-ref name="getPayload" scoped="" ref="0x408a0d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a0df8"/>
        <function-ref name="cancel" scoped="" ref="0x408a0ed8"/>
        <function-ref name="sendDone" scoped="" ref="0x408bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408a3768" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a3768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a3940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408a0458" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408a0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a0630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408bb660" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408bb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408bb838"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408bb918"/>
        <function-ref name="led1On" scoped="" ref="0x408bb9f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408bbad8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408bbbb8"/>
        <function-ref name="get" scoped="" ref="0x408bbc98"/>
        <function-ref name="led1Off" scoped="" ref="0x408bbd78"/>
        <function-ref name="led2Off" scoped="" ref="0x408ba1d0"/>
        <function-ref name="set" scoped="" ref="0x408bbe58"/>
        <function-ref name="led0On" scoped="" ref="0x408ba010"/>
        <function-ref name="led2On" scoped="" ref="0x408ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x408bb158" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x408bb158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x408bb330"/>
        <function-ref name="offset" scoped="" ref="0x408bb410"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x408bb4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408c5b88" loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408c5b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408c5d60"/>
        <function-ref name="stopDone" scoped="" ref="0x408c5e40"/>
        <function-ref name="start" scoped="" ref="0x408c5f20"/>
        <function-ref name="stop" scoped="" ref="0x408c4018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x409018b0" loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x409018b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40901a88"/>
        <function-ref name="runTask" scoped="" ref="0x40901b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x408d5d38" loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x408d5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408d5f10"/>
        <function-ref name="stop" scoped="" ref="0x408c2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x408e3300" loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x408e3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e34d8"/>
        <function-ref name="runTask" scoped="" ref="0x408e35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c57f0" loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c59c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x408c2d58" loc="73:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x408c2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x408d6010"/>
        <function-ref name="flush" scoped="" ref="0x408d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x409026a8" loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x409026a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40902880"/>
        <function-ref name="runTask" scoped="" ref="0x40902960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x408d7790" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x408d7790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x408d7968"/>
        <function-ref name="resetSend" scoped="" ref="0x408d7a48"/>
        <function-ref name="dataReceived" scoped="" ref="0x408d7b28"/>
        <function-ref name="resetReceive" scoped="" ref="0x408d7c08"/>
        <function-ref name="putData" scoped="" ref="0x408d7ce8"/>
        <function-ref name="putDone" scoped="" ref="0x408d7dc8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x408d7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408c3040" loc="71:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408c3040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408c3218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408c32f8"/>
        <function-ref name="led1On" scoped="" ref="0x408c33d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408c34b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408c3598"/>
        <function-ref name="get" scoped="" ref="0x408c3678"/>
        <function-ref name="led1Off" scoped="" ref="0x408c3758"/>
        <function-ref name="led2Off" scoped="" ref="0x408c3ad8"/>
        <function-ref name="set" scoped="" ref="0x408c3838"/>
        <function-ref name="led0On" scoped="" ref="0x408c3918"/>
        <function-ref name="led2On" scoped="" ref="0x408c39f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x408ff550" loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x408ff550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ff728"/>
        <function-ref name="runTask" scoped="" ref="0x408ff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x408bf348" loc="65:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x408bf348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x408bf520"/>
        <function-ref name="nextByte" scoped="" ref="0x408bf600"/>
        <function-ref name="startSend" scoped="" ref="0x408bf6e0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x408bf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x408bd430" loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x408bd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x408bd608"/>
        <function-ref name="byteReceived" scoped="" ref="0x408bd6e8"/>
        <function-ref name="endPacket" scoped="" ref="0x408bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4096a970" loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4096a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4096ab48"/>
        <function-ref name="runTask" scoped="" ref="0x4096ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4096c4f8" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4096c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096c6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4096c7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096c8a0"/>
        <function-ref name="cancel" scoped="" ref="0x4096c980"/>
        <function-ref name="sendDone" scoped="" ref="0x4096ca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4096ada8" loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4096ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40968010"/>
        <function-ref name="runTask" scoped="" ref="0x409680f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4096c138" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4096c138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4096c320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4096cc88" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4096cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076ae50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4096ce70"/>
        <function-ref name="offset" scoped="" ref="0x4096b010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4096b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4096bcc0" loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4096bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4096be98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4096a010"/>
        <function-ref name="led1On" scoped="" ref="0x4096a0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4096a1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4096a2b0"/>
        <function-ref name="get" scoped="" ref="0x4096a390"/>
        <function-ref name="led1Off" scoped="" ref="0x4096a470"/>
        <function-ref name="led2On" scoped="" ref="0x4096a7f0"/>
        <function-ref name="set" scoped="" ref="0x4096a630"/>
        <function-ref name="led2Off" scoped="" ref="0x4096a550"/>
        <function-ref name="led0On" scoped="" ref="0x4096a710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4096b708" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4096b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4096b8e0"/>
        <function-ref name="nextByte" scoped="" ref="0x4096b9c0"/>
        <function-ref name="startSend" scoped="" ref="0x4096baa0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4096bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4096b230" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4096b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4096b408"/>
        <function-ref name="byteReceived" scoped="" ref="0x4096b4e8"/>
        <function-ref name="endPacket" scoped="" ref="0x4096b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4097d630" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4097d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097d808"/>
        <function-ref name="receivedByte" scoped="" ref="0x4097d8e8"/>
        <function-ref name="receive" scoped="" ref="0x4097d9c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4097daa8"/>
        <function-ref name="receiveDone" scoped="" ref="0x4097db88"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4097dc68"/>
        <function-ref name="sendDone" scoped="" ref="0x4097dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40985238" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40985238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40985410"/>
        <function-ref name="resetSend" scoped="" ref="0x409854f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x409855d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x409856b0"/>
        <function-ref name="putData" scoped="" ref="0x40985790"/>
        <function-ref name="putDone" scoped="" ref="0x40985870"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40985950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4097deb8" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4097deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409840c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409841a0"/>
        <function-ref name="led1On" scoped="" ref="0x40984280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40984360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40984440"/>
        <function-ref name="get" scoped="" ref="0x40984520"/>
        <function-ref name="led1Off" scoped="" ref="0x40984600"/>
        <function-ref name="led2Off" scoped="" ref="0x40984980"/>
        <function-ref name="set" scoped="" ref="0x409846e0"/>
        <function-ref name="led0On" scoped="" ref="0x409847c0"/>
        <function-ref name="led2On" scoped="" ref="0x409848a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4098be20" loc="42:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4098be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098d010"/>
        <function-ref name="receive" scoped="" ref="0x4098d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4098f010" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4098f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098f1e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4098f2c8"/>
        <function-ref name="receive" scoped="" ref="0x4098f3a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4098f488"/>
        <function-ref name="receiveDone" scoped="" ref="0x4098f568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4098f648"/>
        <function-ref name="sendDone" scoped="" ref="0x4098f728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40967ae8" loc="40:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40967ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40967cc0"/>
        <function-ref name="stop" scoped="" ref="0x40967da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4098dca8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4098dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098de80"/>
        <function-ref name="receive" scoped="" ref="0x40989010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x409891d8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409891d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409893b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40989490"/>
        <function-ref name="receive" scoped="" ref="0x40989570"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40989650"/>
        <function-ref name="receiveDone" scoped="" ref="0x40989730"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40989810"/>
        <function-ref name="sendDone" scoped="" ref="0x409898f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40989c50" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40989c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409883f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409888e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40988668"/>
        <function-ref name="overflow" scoped="" ref="0x40988b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4098d838" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4098d838"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4098da10"/>
        <function-ref name="stop" scoped="" ref="0x4098daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x409a45c8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x409a45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a47a0"/>
        <function-ref name="receive" scoped="" ref="0x409a4880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x409c1350" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x409c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c1528"/>
        <function-ref name="stop" scoped="" ref="0x409c1608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40986e68" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40986e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409a4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x409a49e0" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409a49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a4bb8"/>
        <function-ref name="receivedByte" scoped="" ref="0x409a4c98"/>
        <function-ref name="receive" scoped="" ref="0x409a4d78"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409a4e58"/>
        <function-ref name="receiveDone" scoped="" ref="0x409c1010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x409c10f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409c08b0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409c08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361450"/>
            <typename><typedef-ref name="TMicro" ref="0x40361618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409bf010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409bf500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409bf288"/>
        <function-ref name="overflow" scoped="" ref="0x409bf778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x409c1bc0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x409c1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409c1d98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409c1e78"/>
        <function-ref name="rxDone" scoped="" ref="0x409c0010"/>
        <function-ref name="txDone" scoped="" ref="0x409c00f0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409c01d0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409c02b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409c0390"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409c0470"/>
        <function-ref name="tx" scoped="" ref="0x409c0550"/>
        <function-ref name="rx" scoped="" ref="0x409c0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409a41b0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409a41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409a4388"/>
        <function-ref name="stop" scoped="" ref="0x409a4468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x409c1788" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x409c1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c1960"/>
        <function-ref name="stop" scoped="" ref="0x409c1a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x409cfd40" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x409cfd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409cff18"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409ce010"/>
        <function-ref name="rxDone" scoped="" ref="0x409ce0f0"/>
        <function-ref name="txDone" scoped="" ref="0x409ce1d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409ce2b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409ce390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409ce470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409ce550"/>
        <function-ref name="tx" scoped="" ref="0x409ce630"/>
        <function-ref name="rx" scoped="" ref="0x409ce710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x409cd390" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x409cd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409cd568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409cd648"/>
        <function-ref name="rxDone" scoped="" ref="0x409cd728"/>
        <function-ref name="txDone" scoped="" ref="0x409cd808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409cd8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409cd9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409cdaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409cdb88"/>
        <function-ref name="tx" scoped="" ref="0x409cdc68"/>
        <function-ref name="rx" scoped="" ref="0x409cdd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x409cf848" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x409cf848"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cfa20"/>
        <function-ref name="stop" scoped="" ref="0x409cfb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x409ce968" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x409ce968"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409ceb40"/>
        <function-ref name="stop" scoped="" ref="0x409cec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x409cee78" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x409cee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cd070"/>
        <function-ref name="stop" scoped="" ref="0x409cd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x409cf338" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x409cf338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cf510"/>
        <function-ref name="stop" scoped="" ref="0x409cf5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x409cc580" loc="71:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x409cc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409cc758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x409c9430" loc="74:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x409c9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409c9608"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409c96e8"/>
        <function-ref name="rxDone" scoped="" ref="0x409c97c8"/>
        <function-ref name="txDone" scoped="" ref="0x409c98a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409c9988"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409c9a68"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409c9b48"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409c9c28"/>
        <function-ref name="tx" scoped="" ref="0x409c9d08"/>
        <function-ref name="rx" scoped="" ref="0x409c9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x409e85e0" loc="83:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x409e85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x409e87b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x409c8010" loc="76:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x409c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x409c8ea8" loc="79:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x409c8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409e90c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409e91a0"/>
        <function-ref name="rxDone" scoped="" ref="0x409e9280"/>
        <function-ref name="txDone" scoped="" ref="0x409e9360"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409e9440"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409e9520"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409e9600"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409e96e0"/>
        <function-ref name="tx" scoped="" ref="0x409e97c0"/>
        <function-ref name="rx" scoped="" ref="0x409e98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x409ccf00" loc="73:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x409ccf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c90f0"/>
        <function-ref name="stop" scoped="" ref="0x409c91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x409c8460" loc="77:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x409c8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c8638"/>
        <function-ref name="stop" scoped="" ref="0x409c8718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x409c8990" loc="78:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x409c8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c8b68"/>
        <function-ref name="stop" scoped="" ref="0x409c8c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x409e9a98" loc="81:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x409e9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x409e9c70"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x409e9d50"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x409e9e30"/>
        <function-ref name="actualMicro" scoped="" ref="0x409e9f10"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x409e8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x409e81f8" loc="82:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x409e81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x409e83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x409cc9d0" loc="72:/opt/tinyos-2.1.1/tos/lib/tosthreads/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x409cc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409ccba8"/>
        <function-ref name="stop" scoped="" ref="0x409ccc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40a16728" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40a16728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a16900"/>
        <function-ref name="offset" scoped="" ref="0x40a169e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a16ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a0dbf0" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingSerialActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a0dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a0ddc8"/>
        <function-ref name="stopDone" scoped="" ref="0x40a0dea8"/>
        <function-ref name="start" scoped="" ref="0x40a0c010"/>
        <function-ref name="stop" scoped="" ref="0x40a0c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a0d7c8" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingSerialActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a0d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0d9a0"/>
        <function-ref name="stop" scoped="" ref="0x40a0da80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a29320" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a29320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a294f8"/>
        <function-ref name="stopDone" scoped="" ref="0x40a295d8"/>
        <function-ref name="start" scoped="" ref="0x40a296b8"/>
        <function-ref name="stop" scoped="" ref="0x40a29798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a2cb48" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a2cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a2cd20"/>
        <function-ref name="stop" scoped="" ref="0x40a2ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a26ed8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a26ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a250c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40a251a0"/>
        <function-ref name="start" scoped="" ref="0x40a25280"/>
        <function-ref name="stop" scoped="" ref="0x40a25360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a25508" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a25508"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a256e0"/>
        <function-ref name="start" scoped="" ref="0x40a257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a26090" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a26090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a26268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a24420" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a24420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a245f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a246d8"/>
        <function-ref name="led1On" scoped="" ref="0x40a247b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a24898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a24978"/>
        <function-ref name="get" scoped="" ref="0x40a24a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40a24b38"/>
        <function-ref name="led2Off" scoped="" ref="0x40a24eb8"/>
        <function-ref name="set" scoped="" ref="0x40a24c18"/>
        <function-ref name="led0On" scoped="" ref="0x40a24cf8"/>
        <function-ref name="led2On" scoped="" ref="0x40a24dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a26740" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a26740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a26918"/>
        <function-ref name="stop" scoped="" ref="0x40a269f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40a1fc20" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a1fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a1fdf8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a1fed8"/>
        <function-ref name="init" scoped="" ref="0x40a24010"/>
        <function-ref name="remove" scoped="" ref="0x40a240f0"/>
        <function-ref name="find" scoped="" ref="0x40a241d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40a242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40a27448" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueC.nc">
      <component-ref qname="SystemCallQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a27448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a27620"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a27700"/>
        <function-ref name="init" scoped="" ref="0x40a277e0"/>
        <function-ref name="remove" scoped="" ref="0x40a278c0"/>
        <function-ref name="find" scoped="" ref="0x40a279a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40a27a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a4b180" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a4b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a4b358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a4b438"/>
        <function-ref name="led1On" scoped="" ref="0x40a4b518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a4b5f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a4b6d8"/>
        <function-ref name="get" scoped="" ref="0x40a4b7b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a4b898"/>
        <function-ref name="led2Off" scoped="" ref="0x40a4bc18"/>
        <function-ref name="set" scoped="" ref="0x40a4b978"/>
        <function-ref name="led0On" scoped="" ref="0x40a4ba58"/>
        <function-ref name="led2On" scoped="" ref="0x40a4bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40a4f390" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a4f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a4f568"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a4f648"/>
        <function-ref name="init" scoped="" ref="0x40a4f728"/>
        <function-ref name="remove" scoped="" ref="0x40a4f808"/>
        <function-ref name="find" scoped="" ref="0x40a4f8e8"/>
        <function-ref name="dequeue" scoped="" ref="0x40a4f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x40a4fbb0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40a4fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4fd88"/>
        <function-ref name="getLast" scoped="" ref="0x40a4fe68"/>
        <function-ref name="indexOf" scoped="" ref="0x40a4c010"/>
        <function-ref name="addAfter" scoped="" ref="0x40a4c0f0"/>
        <function-ref name="addLast" scoped="" ref="0x40a4c1d0"/>
        <function-ref name="removeAt" scoped="" ref="0x40a4c2b0"/>
        <function-ref name="init" scoped="" ref="0x40a4c390"/>
        <function-ref name="addAt" scoped="" ref="0x40a4c470"/>
        <function-ref name="addFirst" scoped="" ref="0x40a4c550"/>
        <function-ref name="remove" scoped="" ref="0x40a4c630"/>
        <function-ref name="removeBefore" scoped="" ref="0x40a4c710"/>
        <function-ref name="getAfter" scoped="" ref="0x40a4c7f0"/>
        <function-ref name="getAt" scoped="" ref="0x40a4c8d0"/>
        <function-ref name="removeLast" scoped="" ref="0x40a4ca30"/>
        <function-ref name="getBefore" scoped="" ref="0x40a4cb10"/>
        <function-ref name="addBefore" scoped="" ref="0x40a4cbf0"/>
        <function-ref name="removeAfter" scoped="" ref="0x40a4ccd0"/>
        <function-ref name="getFirst" scoped="" ref="0x40a4cdb0"/>
        <function-ref name="removeFirst" scoped="" ref="0x40a4ce90"/>
        <function-ref name="size" scoped="" ref="0x40a4b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40a61578" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a61578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a61750"/>
        <function-ref name="getPayload" scoped="" ref="0x40a61830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40a61cd8" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a61cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a61eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40a61010" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40a61010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a611e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a612c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40a80be0" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40a80be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40a80db8"/>
        <function-ref name="stopThread" scoped="" ref="0x40a80e98"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40a7f010"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40a7f0f0"/>
        <function-ref name="startThread" scoped="" ref="0x40a7f1d0"/>
        <function-ref name="threadInfo" scoped="" ref="0x40a7f2b0"/>
        <function-ref name="initThread" scoped="" ref="0x40a7f390"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40a7f470"/>
        <function-ref name="joinThread" scoped="" ref="0x40a7f550"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40a7f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40a5eda0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a5eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a84010"/>
        <function-ref name="getPayload" scoped="" ref="0x40a840f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40a84260" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a84260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a84438"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a84518"/>
        <function-ref name="getPayload" scoped="" ref="0x40a845f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a846d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a847b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a80070" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a80070"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a80248"/>
        <function-ref name="start" scoped="" ref="0x40a80328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a5e5c8" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a5e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a5e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40a81d20" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a81d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a81f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40a5e978" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40a5e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a5eb60"/>
        <function-ref name="getPayload" scoped="" ref="0x40a5ec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a7f770" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a7f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a7f948"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a7fa28"/>
        <function-ref name="led1On" scoped="" ref="0x40a7fb08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a7fbe8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a7fcc8"/>
        <function-ref name="get" scoped="" ref="0x40a7fda8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a7fe88"/>
        <function-ref name="led2On" scoped="" ref="0x40a7e2b0"/>
        <function-ref name="set" scoped="" ref="0x40a7e0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a7e010"/>
        <function-ref name="led0On" scoped="" ref="0x40a7e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40a80468" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a80468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a80640"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a80720"/>
        <function-ref name="init" scoped="" ref="0x40a80800"/>
        <function-ref name="remove" scoped="" ref="0x40a808e0"/>
        <function-ref name="find" scoped="" ref="0x40a809c0"/>
        <function-ref name="dequeue" scoped="" ref="0x40a80aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a84a20" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a84a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40362ba0"/>
            <typename><typedef-ref name="TMilli" ref="0x40362d68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a81598"/>
        <function-ref name="fired" scoped="" ref="0x40a837f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a83f28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a83cc0"/>
        <function-ref name="getdt" scoped="" ref="0x40a81a68"/>
        <function-ref name="gett0" scoped="" ref="0x40a81800"/>
        <function-ref name="isRunning" scoped="" ref="0x40a83a58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a83068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a81268"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a832f8"/>
        <function-ref name="stop" scoped="" ref="0x40a83588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40a99860" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <component-ref qname="BlockingSerialAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a99860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a99a38"/>
        <function-ref name="getPayload" scoped="" ref="0x40a99b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a99bf8"/>
        <function-ref name="cancel" scoped="" ref="0x40a99cd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a99db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40a99010" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderP.nc">
      <component-ref qname="BlockingSerialAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40a99010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a991e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a992c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a993a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a96528" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a96528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a96700"/>
        <function-ref name="start" scoped="" ref="0x40a967e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40a96e90" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a96e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aa30c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40aa31a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aa3280"/>
        <function-ref name="cancel" scoped="" ref="0x40aa3360"/>
        <function-ref name="sendDone" scoped="" ref="0x40aa3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aa3580" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aa3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aa3758"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aa3838"/>
        <function-ref name="getPayload" scoped="" ref="0x40aa3918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aa39f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40aa3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a97be8" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a97be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a97dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40a96010" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40a96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a961f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a962d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a963b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40a96920" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40a96920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40a96af8"/>
        <function-ref name="lock" scoped="" ref="0x40a96bd8"/>
        <function-ref name="init" scoped="" ref="0x40a96cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aa3c18" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aa3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aa3df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aa3ed0"/>
        <function-ref name="led1On" scoped="" ref="0x40aa2010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aa20f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aa21d0"/>
        <function-ref name="get" scoped="" ref="0x40aa22b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40aa2390"/>
        <function-ref name="led2On" scoped="" ref="0x40aa2710"/>
        <function-ref name="set" scoped="" ref="0x40aa2550"/>
        <function-ref name="led2Off" scoped="" ref="0x40aa2470"/>
        <function-ref name="led0On" scoped="" ref="0x40aa2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40aa1698" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexC.nc">
      <component-ref qname="MutexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40aa1698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40aa1870"/>
        <function-ref name="lock" scoped="" ref="0x40aa1950"/>
        <function-ref name="init" scoped="" ref="0x40aa1a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40a9a1e8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40a9a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40a9a3c0"/>
        <function-ref name="stopThread" scoped="" ref="0x40a9a4a0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40a9a580"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40a9a660"/>
        <function-ref name="startThread" scoped="" ref="0x40a9a740"/>
        <function-ref name="threadInfo" scoped="" ref="0x40a9a820"/>
        <function-ref name="initThread" scoped="" ref="0x40a9a900"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40a9a9e0"/>
        <function-ref name="joinThread" scoped="" ref="0x40a9aac0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40a9aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40a9ea20" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40a9ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a9ebf8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a9ecd8"/>
        <function-ref name="init" scoped="" ref="0x40a9edb8"/>
        <function-ref name="remove" scoped="" ref="0x40a9ee98"/>
        <function-ref name="dequeue" scoped="" ref="0x40a9a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40a9e498" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40a9e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40a9e670"/>
        <function-ref name="lock" scoped="" ref="0x40a9e750"/>
        <function-ref name="init" scoped="" ref="0x40a9e830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ab56e0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ab56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab58b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ab5998"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab5a78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab5b58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ab5c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40ab5208" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40ab5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab53e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab54c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ab5d78" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ab5d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ab0010"/>
        <function-ref name="source" scoped="" ref="0x40ab00f0"/>
        <function-ref name="address" scoped="" ref="0x40ab01d0"/>
        <function-ref name="destination" scoped="" ref="0x40ab02b0"/>
        <function-ref name="setSource" scoped="" ref="0x40ab0390"/>
        <function-ref name="setDestination" scoped="" ref="0x40ab0470"/>
        <function-ref name="type" scoped="" ref="0x40ab0550"/>
        <function-ref name="setType" scoped="" ref="0x40ab0630"/>
        <function-ref name="isForMe" scoped="" ref="0x40ab0710"/>
        <function-ref name="setGroup" scoped="" ref="0x40ab07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ab08d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ab0a30" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ab0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ab0c08"/>
        <function-ref name="noAck" scoped="" ref="0x40ab0ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ab0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Semaphore" ref="0x40ad1010" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreC.nc">
      <component-ref qname="SemaphoreC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40ad1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad11e8"/>
        <function-ref name="reset" scoped="" ref="0x40ad12c8"/>
        <function-ref name="acquire" scoped="" ref="0x40ad13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConditionVariable" ref="0x40ac9508" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableC.nc">
      <component-ref qname="ConditionVariableC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40ac9508"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40ac96e0"/>
        <function-ref name="isBlocking" scoped="" ref="0x40ac97c0"/>
        <function-ref name="wait" scoped="" ref="0x40ac98a0"/>
        <function-ref name="init" scoped="" ref="0x40ac9980"/>
        <function-ref name="signalNext" scoped="" ref="0x40ac9a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40ac70f8" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40ac70f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40ac72d0"/>
        <function-ref name="stopThread" scoped="" ref="0x40ac73b0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40ac7490"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40ac7570"/>
        <function-ref name="startThread" scoped="" ref="0x40ac7650"/>
        <function-ref name="threadInfo" scoped="" ref="0x40ac7730"/>
        <function-ref name="initThread" scoped="" ref="0x40ac7810"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40ac78f0"/>
        <function-ref name="joinThread" scoped="" ref="0x40ac79d0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40ac7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConditionVariable" ref="0x40acd918" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40acd918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40acdaf0"/>
        <function-ref name="isBlocking" scoped="" ref="0x40acdbd0"/>
        <function-ref name="wait" scoped="" ref="0x40acdcb0"/>
        <function-ref name="init" scoped="" ref="0x40acdd90"/>
        <function-ref name="signalNext" scoped="" ref="0x40acde70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40ac7c60" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40ac7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ac7e38"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ac7f18"/>
        <function-ref name="init" scoped="" ref="0x40ac6010"/>
        <function-ref name="remove" scoped="" ref="0x40ac60f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40ac61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40ac6348" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40ac6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40ac6520"/>
        <function-ref name="lock" scoped="" ref="0x40ac6600"/>
        <function-ref name="init" scoped="" ref="0x40ac66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ac6850" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ac6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ac6a28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ac6b08"/>
        <function-ref name="led1On" scoped="" ref="0x40ac6be8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ac6cc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ac6da8"/>
        <function-ref name="get" scoped="" ref="0x40ac6e88"/>
        <function-ref name="led1Off" scoped="" ref="0x40ac5010"/>
        <function-ref name="led2Off" scoped="" ref="0x40ac5390"/>
        <function-ref name="set" scoped="" ref="0x40ac50f0"/>
        <function-ref name="led0On" scoped="" ref="0x40ac51d0"/>
        <function-ref name="led2On" scoped="" ref="0x40ac52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40ae0308" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40ae0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40ae04e0"/>
        <function-ref name="stopThread" scoped="" ref="0x40ae05c0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40ae06a0"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40ae0780"/>
        <function-ref name="startThread" scoped="" ref="0x40ae0860"/>
        <function-ref name="threadInfo" scoped="" ref="0x40ae0940"/>
        <function-ref name="initThread" scoped="" ref="0x40ae0a20"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40ae0b00"/>
        <function-ref name="joinThread" scoped="" ref="0x40ae0be0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40ae0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConditionVariable" ref="0x40adf400" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40adf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40adf5d8"/>
        <function-ref name="isBlocking" scoped="" ref="0x40adf6b8"/>
        <function-ref name="wait" scoped="" ref="0x40adf798"/>
        <function-ref name="init" scoped="" ref="0x40adf878"/>
        <function-ref name="signalNext" scoped="" ref="0x40adf958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Semaphore" ref="0x40acfd20" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40acfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40acfef8"/>
        <function-ref name="reset" scoped="" ref="0x40ae0010"/>
        <function-ref name="acquire" scoped="" ref="0x40ae00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40ae0e38" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40ae0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40adf050"/>
        <function-ref name="lock" scoped="" ref="0x40adf130"/>
        <function-ref name="init" scoped="" ref="0x40adf210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40adfac8" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40adfac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40adfca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40adfd80"/>
        <function-ref name="led1On" scoped="" ref="0x40adfe60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ade010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ade0f0"/>
        <function-ref name="get" scoped="" ref="0x40ade1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ade2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ade630"/>
        <function-ref name="set" scoped="" ref="0x40ade390"/>
        <function-ref name="led0On" scoped="" ref="0x40ade470"/>
        <function-ref name="led2On" scoped="" ref="0x40ade550"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b74e0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404a3e10" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a7010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a8dd8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404a95c0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404a9bf8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a9aa0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404a82d8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a8180" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a8830" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403bcbd0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403ba010" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403bc440" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403ba7e0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403bc800" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403ba3e8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b6ce8" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403bc090" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskScheduler" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasTasks" ref="0x402f8de0" loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
          <short> &#10; Check to see if there are any pending tasks in the task queue.</short>
          <long> &#10; Check to see if there are any pending tasks in the task queue. &#10;&#10; @return        whether there are any tasks waiting to run&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x402f8488" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f6288" loc="69:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f88c8" loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/TaskScheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40390ee0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4038f360" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4038f7e0" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4038e070" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4038ed60" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4038d230" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4038fc08" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4038d970" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4038d818" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40390ab8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4038e4f0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4038e918" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadInfo" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadInfo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x404c2d88" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x404c2980" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadScheduler" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
      <function command="" provided="0" name="suspendCurrentThread" ref="0x40313138" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopThread" ref="0x4030ec90" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030eb38" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadId" ref="0x4030f090" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadInfo" ref="0x4030f528" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startThread" ref="0x4030e700" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030e5a8" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="threadInfo" ref="0x4030fb08" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030f990" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initThread" ref="0x4030e168" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030e010" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wakeupThread" ref="0x40313b98" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40313a40" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="joinThread" ref="0x40311168" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40311010" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptCurrentThread" ref="0x403135d0" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fe2d0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fe7e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403a9b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40352798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4039d818" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403a2460" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadCleanup" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadCleanup.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadCleanup.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="cleanup" ref="0x404da138" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadCleanup.nc">
        <interfacedef-ref qname="ThreadCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404e18a8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404e18a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404f0038" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404e6e60" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404f1010" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404e5c78" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404e5e60" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404e57d0" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404f09b0" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404f0480" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404e5310" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404e1f00" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e1da8" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404f19f8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404f16b0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404f1898" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404e65c8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404e6470" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e6a98" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadQueue" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x404df060" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e3cd8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404e3ed8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x404de420" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404de2c8" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x404e38b0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e3758" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x404dfe50" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404dfad0" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404dfcd0" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404df658" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404df4e0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitArrayUtils" loc="28:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
      <function command="" provided="0" name="clrBit" ref="0x404e9bc8" loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e9888" loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e9a68" loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrArray" ref="0x404dd590" loc="29:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404dd218" loc="29:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numBytes" ref="0x404dd430" loc="29:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBit" ref="0x404ddd00" loc="30:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404dd9c0" loc="30:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404ddba0" loc="30:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBit" ref="0x404e9488" loc="31:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e9148" loc="31:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e9328" loc="31:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkedList" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40571d80" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40571c28" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLast" ref="0x405797b0" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40579638" loc="49:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="indexOf" ref="0x40576190" loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40577dc8" loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40576030" loc="52:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAfter" ref="0x4056b840" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056b210" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x4056b470" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x4056b6d8" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addLast" ref="0x4056dd58" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056d9c0" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056dbf8" loc="44:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAt" ref="0x40575218" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40576eb0" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x40575098" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40571818" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405716c0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAt" ref="0x4056ed30" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056e7c0" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056e9f8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x4056ebc8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addFirst" ref="0x4056d558" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056d1c0" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056d3f8" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x405769f0" loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40576638" loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40576870" loc="53:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeBefore" ref="0x40573760" loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405733a8" loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x405735e0" loc="57:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAfter" ref="0x40577060" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40579c70" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40579ea8" loc="50:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAt" ref="0x4057aaf8" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4057a7a8" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x4057a978" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeLast" ref="0x40575eb0" loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40575d38" loc="56:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBefore" ref="0x405778e0" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40577528" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40577760" loc="51:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addBefore" ref="0x4057a308" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056bcc0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x4056bf20" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x4057a1a0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAfter" ref="0x40582010" loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40573c38" loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40573e70" loc="58:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFirst" ref="0x40579188" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40579010" loc="48:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeFirst" ref="0x40575868" loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405756f0" loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4056e368" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056e210" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d5310" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d5310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405d57f0" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d1cc8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d1cc8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405d1e30" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d1e30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405dc360" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d1e30"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405dcd88" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x405dc888" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405da1c8" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d3dd0" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d3dd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405d0010" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405df350" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405e1010" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405e1cd8" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405e1988" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          </variable>
          <variable name="dt" ref="0x405e1b78" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405e1480" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405df7e0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405d0640" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405d04e8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405d0010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405d0b20" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x405f7440" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036cd58"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405f69e8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036ddc8"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405f7f18" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f6b8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036f8e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405f6538" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f6b8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036f8e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405f63e0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f6b8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036f8e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405f5010" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036ddc8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405f6e98" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036ddc8"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405f7a60" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036cd58"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405f7908" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036cd58"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x405ff4a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x405ff978" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x405ff090" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405ffe38" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406025a0" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40369f50"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40370188"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40602b90" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40369f50"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40370188"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40602a38" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40369f50"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40370188"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405f5de0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40604d20" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405f4cb8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405f42f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406040f8" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406031a8" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405f4878" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405f4720" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40604500" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406048f8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405ed4e8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405ed4e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405fcd28" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405fc498" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405ed9d8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405ed4e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405fb2e0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405fb188" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x405fb770" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405ec860" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405ec440" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405fc900" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405ec010" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405ed4e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405eddf8" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405ed4e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405ecc68" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405fc070" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PlatformInterrupt" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/PlatformInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/PlatformInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="postAmble" ref="0x406396c0" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/PlatformInterrupt.nc">
        <interfacedef-ref qname="PlatformInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadNotification" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadNotification.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadNotification.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="justCreated" ref="0x406c3960" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToDestroy" ref="0x406c3d60" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Thread" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="pause" ref="0x406d63e0" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x406d67b8" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="join" ref="0x406d55c8" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x406d5200" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x406d50a8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406c6b88" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x406c6a30" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x406d6d20" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x406d6bc8" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d6010" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadFunction" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadFunction.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadFunction.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="signalThreadRun" ref="0x406d1530" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadFunction.nc">
        <interfacedef-ref qname="ThreadFunction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x406d13d8" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadFunction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadSleep" loc="36:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadSleep.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadSleep.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x406ceeb0" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadSleep.nc">
        <interfacedef-ref qname="ThreadSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x406ced58" loc="37:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ThreadSleep.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCall" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="finish" ref="0x40722e48" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40722cf0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407228d8" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="syscall_ptr" ref="0x40722178" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="s" ref="0x40722380" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40722590" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </variable>
          <variable name="params" ref="0x40722768" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingStdControl" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingStdControl.nc">
      <function command="" provided="0" name="start" ref="0x4077b8b0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4077bc78" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407488d8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40748780" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x407752e0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40775188" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40772370" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40772010" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407721f0" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407749a8" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40774010" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40775c00" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40775de0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingAMSend" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40749e90" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40749930" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40749b48" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40749d28" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40779a88" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40779728" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40779908" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40779320" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Semaphore" loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/semaphore.h">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40787c80" loc="35:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40787b28" loc="35:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40787170" loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40777e10" loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="v" ref="0x40787010" loc="33:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="acquire" ref="0x407876f8" loc="34:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x407875a0" loc="34:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40737900"/>
                <typename><typedef-ref name="semaphore_t" ref="0x407350d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407ae780" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403838e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40383b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x407af188" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40375cf8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40375f20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407af030" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40375cf8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40375f20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407afc68" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037d398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037d5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x407b4a80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40372bb0"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40372dd8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407ae2c8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037d398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037d5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407ae170" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037d398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037d5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407aed90" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403838e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40383b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407aec38" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403838e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40383b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x407b04e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b360"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037b588"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x407b0010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40375cf8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40375f20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x407b0b28" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40372bb0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40372dd8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407b09d0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40372bb0"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40372dd8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x407af7a8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b360"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037b588"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407af650" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b360"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037b588"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407c6010" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x407c3b20" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x407c39c8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407c3138" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407c6508" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407c4088" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407c6f00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407c44c8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407c3598" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407c6a80" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407c6928" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407c6010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407c48d0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407c4cc8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingReceive" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x4083fc90" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x4083f918" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4083fb30" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40858428" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408580c8" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408582a8" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40856f28" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40856dd0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40866a30" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408668d8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408644e0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40864388" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4084f230" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4076a0d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4084f0d8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40854b68" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40854a10" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40859a10" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40854168" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40854010" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408534c0" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40853158" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40853360" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40852780" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40852418" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40852620" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40850bc0" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40850a68" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4084e720" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4084e3f0" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4084e5c0" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4076be40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40850088" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40853f08" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4084feb0" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4076a0d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4084fb50" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4084fd50" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4076a0d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4084c780" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4076a0d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4085f770" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4085f618" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4085e730" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4085e5d8" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40855f00" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4085fc80" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40861ac8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40861568" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076a330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40861780" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40861960" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408757a0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40875440" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40875620" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4085cde8" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4085b7b0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085b658" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4085c4e0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085c188" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4085c380" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408725f0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
              <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408720a8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40872288" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40872468" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40869948" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40869608" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408697e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4087f4a8" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087f148" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4087f328" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40882bb0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408815e0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881488" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40882290" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881f20" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40882130" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x408b9b68" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b97d8" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x408b9a08" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x408bc8c0" loc="15:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x408b91c8" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bce18" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4077c640"/>
                <typename><typedef-ref name="message_t" ref="0x4077b3e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x408b9068" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x408d54d0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408d5998" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x408c2b60" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x408c2728" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x408da1a8" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x408dae08" loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x408d7010" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408d9e50" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x408d93f0" loc="68:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x408da8d8" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408da780" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x408d7518" loc="89:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x408d9950" loc="74:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x408c0290" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x408c0858" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x408c4c10" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x408c4ab8" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x408bf010" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408c0e38" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x408be1a8" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x408be990" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408be838" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x408bd058" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x408beed0" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40982480" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40982130" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40982320" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40980908" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x409807b0" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4097f170" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40980dc0" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4097f010" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40981cc0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4097d010" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4097fa98" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4097fc88" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4097fe80" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x409802f8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40981370" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40982d90" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40981010" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40981208" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4098b010" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4098fe70" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4098b8a8" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4098b540" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4098b748" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x4099d010" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x4099e738" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x4099c5f8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4099c4a0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x4099dcc8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x409a2e68" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x4099e300" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x4099eb78" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x4099d410" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x4099d918" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4099d7c0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x4099c0c8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCallQueue" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
      <function command="" provided="0" name="enqueue" ref="0x40a22e78" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a22b10" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40a22d18" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a1fab8" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a1f960" loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40a226e0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a22588" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40a20cd8" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a20950" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40a20b58" loc="43:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="find" ref="0x40a1f500" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a1f170" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40a1f380" loc="45:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a204c8" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a20350" loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a25c90"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a22068"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mutex" loc="38:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="unlock" ref="0x40a91c08" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a91ab0" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lock" ref="0x40a916b0" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a91558" loc="40:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40a91168" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a91010" loc="39:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ConditionVariable" loc="41:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/tosthreads/types/condvar.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="signalAll" ref="0x40acbb48" loc="70:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
          <short>&#10; Signal all threads waiting on this condition variable &#10; to continue execution.</short>
          <long>&#10; Signal all threads waiting on this condition variable &#10; to continue execution.  To unblock just the next thread&#10; waiting on this condition vairable use signalNext().&#10; @param c The condition variable associated with the thread &#10;          you would like to signal.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40acb9f0" loc="70:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isBlocking" ref="0x40ac9290" loc="77:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
          <short>&#10; Query whether a condition variable is currently blocking &#10; any threads from executing.</short>
          <long>&#10; Query whether a condition variable is currently blocking &#10; any threads from executing.&#10; @param c The cndition variable you would like to query.&#10; @return  TRUE or FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40ac9138" loc="77:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40acedd8" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
          <short>&#10; Wait on a condition variable until one of the signal&#10; calls unbocks me.</short>
          <long>&#10; Wait on a condition variable until one of the signal&#10; calls unbocks me.  In the process, unlock the mutex &#10; passed in to me.&#10; @param c The condition variable you would like to wait on.&#10; @param m The mutex you would like to unlock&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40acea88" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x40acec78" loc="54:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40499a20"/>
                <typename><typedef-ref name="mutex_t" ref="0x40737010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40ace628" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
          <short>&#10; Reset a condition variable for use.</short>
          <long>&#10; Reset a condition variable for use.&#10; @param c The condition variable you would like to reset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40ace4d0" loc="46:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="signalNext" ref="0x40acb490" loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
          <short>&#10; Signal the next thread waiting on this condition variable &#10; to continue execution.</short>
          <long>&#10; Signal the next thread waiting on this condition variable &#10; to continue execution.  To unblock all threads waiting on &#10; this condition vairable use signalAll().&#10; @param c The condition variable associated with the thread &#10;          you would like to signal.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40acb338" loc="62:/opt/tinyos-2.1.1/tos/lib/tosthreads/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x407372f8"/>
                <typename><typedef-ref name="condvar_t" ref="0x407376e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
