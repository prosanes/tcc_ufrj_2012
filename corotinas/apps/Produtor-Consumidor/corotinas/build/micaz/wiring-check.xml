<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:BenchmarkAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40734488"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407963c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407963c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40822320"/></to>
    </wire>
    <wire loc="15:BenchmarkAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x40763b50"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40847118"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40847118"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a15d98"/></to>
    </wire>
    <wire loc="16:BenchmarkAppC.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x4077b8e0"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40abb208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40abb208"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40846938"/>
      <arguments>
        <value cst="I:228">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:BenchmarkAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40777af0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40abb6e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40abb6e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40846e50"/></to>
    </wire>
    <wire loc="19:BenchmarkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a3c68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4049e188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4049e188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404b0090"/></to>
    </wire>
    <wire loc="21:BenchmarkAppC.nc">
      <from><interface-ref name="Produtor" scoped="" ref="0x40738088"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x407814d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Coroutine" scoped="" ref="0x407814d0"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x405c4720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:BenchmarkAppC.nc">
      <from><interface-ref name="Consumidor" scoped="" ref="0x40738aa8"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x4079c428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Coroutine" scoped="" ref="0x4079c428"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x405c4720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:BenchmarkAppC.nc">
      <from><interface-ref name="SerialSender" scoped="" ref="0x407374f8"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x4079a448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Coroutine" scoped="" ref="0x4079a448"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x405c4720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:BenchmarkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40737e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40315b60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403b5ac0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a7ab78"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a43d58"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a0e348"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x409d59c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x409d04c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4098d398"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a8060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cd7a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cb5370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cc3a48"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40605890"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404d14e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404d10e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404aa868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404aa868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049c010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x404cd798"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f54c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x402f54c8"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x40384c68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x403109e0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404d5010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404b0ef0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404cd3f8"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404d8a38"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404d8a38"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404d5ca0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d8ea0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404ce0f0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40820040"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b6888"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4049c7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b64d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049c3f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403cfe48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049c3f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404af4c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404af8f0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403d3210"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403d3210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4041f7d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ad2f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403f24b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404743e8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403e4a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40437790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40437790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7a3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403e60a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40439410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40439410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb7538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403eb210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40449c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40449c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bfd228"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403d2670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041eac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ae1538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403edce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4044a968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4044a968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c01de0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403d1a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40424b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40424b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40aff418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403de210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404326b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404326b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b38228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403e28e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404354f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404354f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b75228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403e5ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40443170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40443170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb2538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403d52f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40417b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40417b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ac0010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403d98e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404227d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404227d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b20228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403dc0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40430330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40430330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b5b0b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403e0750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4043e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4043e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b970b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403f30a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40447988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40447988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bf70b0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403f0590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404783b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403e9c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043a090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043a090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bba010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4041f7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ae4010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403d7830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042c4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b1b0b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403f10c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404718f0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403d6ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404283d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404283d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b40de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403e34b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40436170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40436170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b79d70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403e6a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40439d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40439d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb5010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403ebc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bfcc08"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403d10a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40adf010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403da4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404234f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404234f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40afede0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403dec08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40431030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40431030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b37c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403e12f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40435e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40435e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b74c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403ee8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40443ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40443ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb0010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403d5cf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404204f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404204f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ae89e8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403d82f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40421170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40421170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b1fc08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403dca98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40430c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40430c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b5aa88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403f3a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40446330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40446330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bf6a88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403dbea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40438dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40438dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7c938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403e8670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043a9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043a9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb99e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403ec750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40449330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40449330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bff7f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403ef010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404758a0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403d3c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041e170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ae39e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403d62f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042ce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b1aa88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ed2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4044a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4044a010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bd8418"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403df750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40428d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40428d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b3a7f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403e3ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40436ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40436ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b777f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403e54b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40444790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40444790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bb49e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403ea670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40447030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40447030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bf96c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403ce8f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40417228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40417228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ac25c0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403daea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40423e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40423e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40afc7f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403dd670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40431988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40431988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b5d6c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403e1ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404347d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404347d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b996c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403f1ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046fdd8"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403e9210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043b6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043b6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbc538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403db4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b58538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403d4750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40420e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40420e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ae6538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403d8d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40421ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40421ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b1d6c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038b598"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4038ba48"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x403109e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403926d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403a7e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40682ce0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403cfe48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b5778"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403b89a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x403d0010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403d0010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403d5cf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403bc3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x403d0a18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403d0a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403d52f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403bcda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x403cf4c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403cf4c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403ce8f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x404d8668"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404e2340"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404da548"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405e6238"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404e27a8"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d8ea0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404e2e08"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404da548"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404e04f8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403a1440"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="BitArrayUtils" scoped="" ref="0x404e7ec8"/></from>
      <to><interface-ref name="BitArrayUtils" scoped="" ref="0x404d6730"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x404dc728"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x4055a700"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e0840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x4055ae40"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x405b6f18"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405be5c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="Coroutine" scoped="" ref="0x405c4720"/></from>
      <to><interface-ref name="Coroutine" scoped="" ref="0x405c2898"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405cc4b8"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cf8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405ce670"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x405d8b48"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405cedd8"/></from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x405c0678"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x405ce010"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x405f7698"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x405bea98"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405d83e0"/></from>
      <to><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405e4238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1c00"/></from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405e6a78"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x405e49a0"/></from>
      <to><interface-ref name="StaticThreadInfo" scoped="" ref="0x405d8b48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e31f8"/></from>
      <to><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e93c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405e3958"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404d8668"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407243f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40704918"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40723ea0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4072e4b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4070f378"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407205e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40717d28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405fe660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405fe660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e2a60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40605890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4060e7d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406100d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406f9460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4060e7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40623998"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406fee30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406bbcb0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406d1010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406f9df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40c5a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40623998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c5d8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c5dd18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c58950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406755d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40c87b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40665010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40665010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406718b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40c863c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40665970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40665970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4066f248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40c84dc0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406811a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x4067e178"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x406b3aa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x406b04e8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x406b3e88"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f54c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406af180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406cf9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406fa050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40713010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4072e980"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <from><interface-ref name="threadTask" scoped="" ref="0x4072a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x40781e08"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405b6f18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x4079d230"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cc3d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405c0678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40cc1230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cc3d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40cc1578"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x4079cd60"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405b6f18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x4079b230"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cb5688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405c0678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40cb5a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1c00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cb5688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40cb5dc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x4079ad80"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405b6f18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x40799230"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cd7da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405c0678"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x40cd6230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1c00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x40cd7da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40cd6578"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4084a5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40795dd0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40795dd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40808d48"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40826010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407a8740"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407a8740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407ad950"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407b55d8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407c2c90"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407b04b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407c1a48"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407af720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x407be940"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407af720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407bc5b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407af720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x407b91c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x407d2ce0"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40820428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407a8740"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x408461d0"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a45ac0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a45ac0"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a42610"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40846e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40866ab8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40866ab8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40891930"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40846938"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40a80ee8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40a80ee8"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40a7af28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40843bd0"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40a45558"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40a45558"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40a421e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084e308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4085c010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4085c010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ac010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40a15d98"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a12df8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40853140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4085d288"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4085d288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40874cb0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a13260"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4084d010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4084d010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408a83f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a44238"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40866120"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40866120"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40874988"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a7d758"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40860ac0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40860ac0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4085ae38"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408a83f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408ad3d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40866760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408745a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408a8060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408ad040"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408a2ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4085c548"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ac538"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a7300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408acbf0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408a8cb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x408a2998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x409fd928"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408a7300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4092cc60"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408a8cb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4092c8a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40973400"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x408a2998"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408c67b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408a2ea0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409713f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408a2ea0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4096b420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408a2ea0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409738e8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x408c5c30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40973dc0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x408c7b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x408c1f10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x4096f868"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x408be498"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409760c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409760c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40991d80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40965b80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40976548"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40976548"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40992728"/></to>
    </wire>
    <wire loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x408ea1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x408cda18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x408eb010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40906e08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x40970030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40970468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40991380"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x409922a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x409922a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4098dae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40992728"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4098df00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40991d80"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4098d6d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409901b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407963c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409a7c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409901b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x4098c7b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x409b6688"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x409b6688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x409d5e10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x4098cbe8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x409b6b98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x409b6b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x409d2368"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x409a7050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x409d70b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x409d70b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x409d2880"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x409d6760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x409cf390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x409d7cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x409d0910"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x409d6268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x409d0e40"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x409ce010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x409ce750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a8148"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x409ceb38"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a0f5d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a13260"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40a12df8"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40a0e9f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a0b1b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a0f5d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a2b7b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a2b010"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a0c980"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a0c980"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a33900"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a0b7d0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x40a301f8"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a2f6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a64588"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a44238"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a42a38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40866ab8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40a64ca8"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40a0c980"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a648b0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40a634d0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a67278"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a85150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a79db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a7d758"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40a79848"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40aa85b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40aa85b8"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40aa5348"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40a79450"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aaa4d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40866ab8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aaab68"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40315b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40aa58d0"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40aa2040"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40abbd78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40853140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ab7a30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084e308"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyOSMainP" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu> &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyTaskSchedulerC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @author  Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitArrayUtilsC" loc="28:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BitArrayUtilsC.nc">
      <module/>
    </component>
    <component qname="ThreadQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LinkedListC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/LinkedListC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="StaticThreadC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StaticThreadP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadMapC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadMapP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadSleepC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC.TimerMilliC" loc="36(ThreadTimersC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406258f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformInterruptC" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TOSThreadsInterruptP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ThreadTimersC.VirtualizeTimerC" loc="35(ThreadTimersC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <value cst="I:33">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ThreadSleepP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BenchmarkC" loc="1:BenchmarkC.nc">
      <module/>
    </component>
    <component qname="BenchmarkAppC.Produtor" loc="38(BenchmarkAppC.Produtor):/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CoroutineC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.Produtor.ThreadInfoP" loc="36(BenchmarkAppC.Produtor.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BenchmarkAppC.Consumidor" loc="38(BenchmarkAppC.Consumidor):/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CoroutineC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.Consumidor.ThreadInfoP" loc="36(BenchmarkAppC.Consumidor.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BenchmarkAppC.SerialSender" loc="38(BenchmarkAppC.SerialSender):/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CoroutineC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BenchmarkAppC.SerialSender.ThreadInfoP" loc="36(BenchmarkAppC.SerialSender.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TThree" ref="0x40380460"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TThree" ref="0x40380460"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40380a38"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockingSerialActiveMessageC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingSerialActiveMessageC.BlockingStdControlC" loc="37(BlockingSerialActiveMessageC.BlockingStdControlC):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingStdControlC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockingStdControlP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingStdControlImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/syscall_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingSerialAMReceiverP" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP" loc="36(BlockingSerialAMReceiverP.BlockingAMReceiverImplP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMReceiverImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="BlockingSerialAMSenderP" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <configuration/>
    </component>
    <component qname="BlockingSerialAMSenderP.BlockingAMSenderImplP" loc="37(BlockingSerialAMSenderP.BlockingAMSenderImplP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMSenderImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="MutexC" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MutexP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BenchmarkAppC.BlockingSerialAMSenderC" loc="38(BenchmarkAppC.BlockingSerialAMSenderC):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingSerialAMSenderC"/>
        <arguments>
          <value cst="I:228">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f8dc8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f5010" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f5228" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40400238" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40400460" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40400688" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40400878" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4044d3d0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4044d5f8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4044d820" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4044da10" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x406258f8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406258f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40625ab8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40631bf8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40631bf8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40631db8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061f838" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061f838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ced00" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ced00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406ceee0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4070d3e8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4070d3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CoroutineC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x40739a80" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
          <component-ref qname="CoroutineC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ThreadInfoP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x4077feb0" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </constant>
        <constant name="thread_id" ref="0x407930e8" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x408077d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x408077d8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x408079f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40815318" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40815318"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40815760" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40815760"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40823878" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40823878"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40823cd8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40823cd8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4083c010" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4083c010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4083c480" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4083c480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4083c6e8" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4083cb70" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4083cb70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/tinyos-2.1.1/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingStdControlC" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockingAMReceiverImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingAMSenderImplP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingSerialAMSenderC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40a99cb0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
          <component-ref qname="BlockingSerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4049e5a0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4049e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4049e188" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4049e188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4049e360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a59c8" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404aa868" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404aa868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404aaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a5268" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a5440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a5520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a5600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a56e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4049c3f0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4049c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049c010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4049c7f8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4049c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a9908" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404a9538" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a9710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404ad2f0" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ad4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404af8f0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404af8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404afac8"/>
        <function-ref name="isInput" scoped="" ref="0x404afba8"/>
        <function-ref name="toggle" scoped="" ref="0x404afc88"/>
        <function-ref name="isOutput" scoped="" ref="0x404afd68"/>
        <function-ref name="get" scoped="" ref="0x404afe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aff28"/>
        <function-ref name="set" scoped="" ref="0x404ad018"/>
        <function-ref name="clr" scoped="" ref="0x404ad0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404af4c8" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404af4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404af6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403f24b0" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403f24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2888"/>
        <function-ref name="isInput" scoped="" ref="0x403f2968"/>
        <function-ref name="toggle" scoped="" ref="0x403f2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2b28"/>
        <function-ref name="get" scoped="" ref="0x403f2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f2ce8"/>
        <function-ref name="set" scoped="" ref="0x403f2dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403e4a28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403e4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4c00"/>
        <function-ref name="isInput" scoped="" ref="0x403e4ce0"/>
        <function-ref name="toggle" scoped="" ref="0x403e4dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4ea0"/>
        <function-ref name="get" scoped="" ref="0x403e3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e30f0"/>
        <function-ref name="set" scoped="" ref="0x403e31d0"/>
        <function-ref name="clr" scoped="" ref="0x403e32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403e60a0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403e60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6278"/>
        <function-ref name="isInput" scoped="" ref="0x403e6358"/>
        <function-ref name="toggle" scoped="" ref="0x403e6438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6518"/>
        <function-ref name="get" scoped="" ref="0x403e65f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e66d8"/>
        <function-ref name="set" scoped="" ref="0x403e67b8"/>
        <function-ref name="clr" scoped="" ref="0x403e6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403eb210" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403eb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403eb4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403eb5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb688"/>
        <function-ref name="get" scoped="" ref="0x403eb768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb848"/>
        <function-ref name="set" scoped="" ref="0x403eb928"/>
        <function-ref name="clr" scoped="" ref="0x403eba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403d2670" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2848"/>
        <function-ref name="isInput" scoped="" ref="0x403d2928"/>
        <function-ref name="toggle" scoped="" ref="0x403d2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2ae8"/>
        <function-ref name="get" scoped="" ref="0x403d2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2ca8"/>
        <function-ref name="set" scoped="" ref="0x403d2d88"/>
        <function-ref name="clr" scoped="" ref="0x403d2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403edce8" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403edce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403edec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ec010"/>
        <function-ref name="toggle" scoped="" ref="0x403ec0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ec1d0"/>
        <function-ref name="get" scoped="" ref="0x403ec2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ec390"/>
        <function-ref name="set" scoped="" ref="0x403ec470"/>
        <function-ref name="clr" scoped="" ref="0x403ec550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403d1a98" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403d1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d1d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d1e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1f10"/>
        <function-ref name="get" scoped="" ref="0x403da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da0f0"/>
        <function-ref name="set" scoped="" ref="0x403da1d0"/>
        <function-ref name="clr" scoped="" ref="0x403da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403de210" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403de210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403de4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403de5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403de688"/>
        <function-ref name="get" scoped="" ref="0x403de768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de848"/>
        <function-ref name="set" scoped="" ref="0x403de928"/>
        <function-ref name="clr" scoped="" ref="0x403dea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403e28e0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403e28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e2b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2d58"/>
        <function-ref name="get" scoped="" ref="0x403e2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2f18"/>
        <function-ref name="set" scoped="" ref="0x403e1010"/>
        <function-ref name="clr" scoped="" ref="0x403e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403e5ea8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403e5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ee1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ee280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee360"/>
        <function-ref name="get" scoped="" ref="0x403ee440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee520"/>
        <function-ref name="set" scoped="" ref="0x403ee600"/>
        <function-ref name="clr" scoped="" ref="0x403ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403d52f8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403d52f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d54d0"/>
        <function-ref name="isInput" scoped="" ref="0x403d55b0"/>
        <function-ref name="toggle" scoped="" ref="0x403d5690"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5770"/>
        <function-ref name="get" scoped="" ref="0x403d5850"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5930"/>
        <function-ref name="set" scoped="" ref="0x403d5a10"/>
        <function-ref name="clr" scoped="" ref="0x403d5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403d98e0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d9b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9d58"/>
        <function-ref name="get" scoped="" ref="0x403d9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9f18"/>
        <function-ref name="set" scoped="" ref="0x403d8010"/>
        <function-ref name="clr" scoped="" ref="0x403d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403dc0a0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403dc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc278"/>
        <function-ref name="isInput" scoped="" ref="0x403dc358"/>
        <function-ref name="toggle" scoped="" ref="0x403dc438"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc518"/>
        <function-ref name="get" scoped="" ref="0x403dc5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc6d8"/>
        <function-ref name="set" scoped="" ref="0x403dc7b8"/>
        <function-ref name="clr" scoped="" ref="0x403dc898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403e0750" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403e0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0928"/>
        <function-ref name="isInput" scoped="" ref="0x403e0a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0bc8"/>
        <function-ref name="get" scoped="" ref="0x403e0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0d88"/>
        <function-ref name="set" scoped="" ref="0x403e0e68"/>
        <function-ref name="clr" scoped="" ref="0x403e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403f30a0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403f30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3278"/>
        <function-ref name="isInput" scoped="" ref="0x403f3358"/>
        <function-ref name="toggle" scoped="" ref="0x403f3438"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3518"/>
        <function-ref name="get" scoped="" ref="0x403f35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f36d8"/>
        <function-ref name="set" scoped="" ref="0x403f37b8"/>
        <function-ref name="clr" scoped="" ref="0x403f3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403f0590" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403f0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0768"/>
        <function-ref name="isInput" scoped="" ref="0x403f0848"/>
        <function-ref name="toggle" scoped="" ref="0x403f0928"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0a08"/>
        <function-ref name="get" scoped="" ref="0x403f0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f0bc8"/>
        <function-ref name="set" scoped="" ref="0x403f0ca8"/>
        <function-ref name="clr" scoped="" ref="0x403f0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403e9c08" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403e9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403e8010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e80f0"/>
        <function-ref name="get" scoped="" ref="0x403e81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e82b0"/>
        <function-ref name="set" scoped="" ref="0x403e8390"/>
        <function-ref name="clr" scoped="" ref="0x403e8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403d3210" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d33e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d34c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3688"/>
        <function-ref name="get" scoped="" ref="0x403d3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3848"/>
        <function-ref name="set" scoped="" ref="0x403d3928"/>
        <function-ref name="clr" scoped="" ref="0x403d3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403d7830" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403d7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7a08"/>
        <function-ref name="isInput" scoped="" ref="0x403d7ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403d7bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7ca8"/>
        <function-ref name="get" scoped="" ref="0x403d7d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7e68"/>
        <function-ref name="set" scoped="" ref="0x403d6010"/>
        <function-ref name="clr" scoped="" ref="0x403d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403f10c0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403f10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1298"/>
        <function-ref name="isInput" scoped="" ref="0x403f1378"/>
        <function-ref name="toggle" scoped="" ref="0x403f1458"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1538"/>
        <function-ref name="get" scoped="" ref="0x403f1618"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f16f8"/>
        <function-ref name="set" scoped="" ref="0x403f17d8"/>
        <function-ref name="clr" scoped="" ref="0x403f18b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403d6ce8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403d6ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403df010"/>
        <function-ref name="toggle" scoped="" ref="0x403df0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403df1d0"/>
        <function-ref name="get" scoped="" ref="0x403df2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df390"/>
        <function-ref name="set" scoped="" ref="0x403df470"/>
        <function-ref name="clr" scoped="" ref="0x403df550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403e34b0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403e34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3688"/>
        <function-ref name="isInput" scoped="" ref="0x403e3768"/>
        <function-ref name="toggle" scoped="" ref="0x403e3848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3928"/>
        <function-ref name="get" scoped="" ref="0x403e3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3ae8"/>
        <function-ref name="set" scoped="" ref="0x403e3bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403e6a98" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403e6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e6d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6f10"/>
        <function-ref name="get" scoped="" ref="0x403e5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e50f0"/>
        <function-ref name="set" scoped="" ref="0x403e51d0"/>
        <function-ref name="clr" scoped="" ref="0x403e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403ebc08" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403ebc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ebde0"/>
        <function-ref name="isInput" scoped="" ref="0x403ebec0"/>
        <function-ref name="toggle" scoped="" ref="0x403ea010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea0f0"/>
        <function-ref name="get" scoped="" ref="0x403ea1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea2b0"/>
        <function-ref name="set" scoped="" ref="0x403ea390"/>
        <function-ref name="clr" scoped="" ref="0x403ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403d10a0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1278"/>
        <function-ref name="isInput" scoped="" ref="0x403d1358"/>
        <function-ref name="toggle" scoped="" ref="0x403d1438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1518"/>
        <function-ref name="get" scoped="" ref="0x403d15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d16d8"/>
        <function-ref name="set" scoped="" ref="0x403d17b8"/>
        <function-ref name="clr" scoped="" ref="0x403d1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403da4b0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da688"/>
        <function-ref name="isInput" scoped="" ref="0x403da768"/>
        <function-ref name="toggle" scoped="" ref="0x403da848"/>
        <function-ref name="isOutput" scoped="" ref="0x403da928"/>
        <function-ref name="get" scoped="" ref="0x403daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daae8"/>
        <function-ref name="set" scoped="" ref="0x403dabc8"/>
        <function-ref name="clr" scoped="" ref="0x403daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403dec08" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403dec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dede0"/>
        <function-ref name="isInput" scoped="" ref="0x403deec0"/>
        <function-ref name="toggle" scoped="" ref="0x403dd010"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd0f0"/>
        <function-ref name="get" scoped="" ref="0x403dd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd2b0"/>
        <function-ref name="set" scoped="" ref="0x403dd390"/>
        <function-ref name="clr" scoped="" ref="0x403dd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403e12f0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e14c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e15a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e1688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1768"/>
        <function-ref name="get" scoped="" ref="0x403e1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1928"/>
        <function-ref name="set" scoped="" ref="0x403e1a08"/>
        <function-ref name="clr" scoped="" ref="0x403e1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403ee8e0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403ee8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eeab8"/>
        <function-ref name="isInput" scoped="" ref="0x403eeb98"/>
        <function-ref name="toggle" scoped="" ref="0x403eec78"/>
        <function-ref name="isOutput" scoped="" ref="0x403eed58"/>
        <function-ref name="get" scoped="" ref="0x403eee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eef18"/>
        <function-ref name="set" scoped="" ref="0x403ed010"/>
        <function-ref name="clr" scoped="" ref="0x403ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403d5cf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403d5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5ec8"/>
        <function-ref name="isInput" scoped="" ref="0x403d4010"/>
        <function-ref name="toggle" scoped="" ref="0x403d40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d41d0"/>
        <function-ref name="get" scoped="" ref="0x403d42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4390"/>
        <function-ref name="set" scoped="" ref="0x403d4470"/>
        <function-ref name="clr" scoped="" ref="0x403d4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403d82f0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8548"/>
        <function-ref name="isInput" scoped="" ref="0x403d8628"/>
        <function-ref name="toggle" scoped="" ref="0x403d8708"/>
        <function-ref name="isOutput" scoped="" ref="0x403d87e8"/>
        <function-ref name="get" scoped="" ref="0x403d88c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d89a8"/>
        <function-ref name="set" scoped="" ref="0x403d8a88"/>
        <function-ref name="clr" scoped="" ref="0x403d8b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403dca98" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403dca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dcc70"/>
        <function-ref name="isInput" scoped="" ref="0x403dcd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dce30"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcf10"/>
        <function-ref name="get" scoped="" ref="0x403db010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db0f0"/>
        <function-ref name="set" scoped="" ref="0x403db1d0"/>
        <function-ref name="clr" scoped="" ref="0x403db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403f3a98" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403f3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3c70"/>
        <function-ref name="isInput" scoped="" ref="0x403f3d50"/>
        <function-ref name="toggle" scoped="" ref="0x403f3e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3f10"/>
        <function-ref name="get" scoped="" ref="0x403f2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f20f0"/>
        <function-ref name="set" scoped="" ref="0x403f21d0"/>
        <function-ref name="clr" scoped="" ref="0x403f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403dbea8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403dbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4208"/>
        <function-ref name="isInput" scoped="" ref="0x403e42e8"/>
        <function-ref name="toggle" scoped="" ref="0x403e43c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e44a8"/>
        <function-ref name="get" scoped="" ref="0x403e4588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4668"/>
        <function-ref name="set" scoped="" ref="0x403e4748"/>
        <function-ref name="clr" scoped="" ref="0x403e4828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403e8670" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8848"/>
        <function-ref name="isInput" scoped="" ref="0x403e8928"/>
        <function-ref name="toggle" scoped="" ref="0x403e8a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8ae8"/>
        <function-ref name="get" scoped="" ref="0x403e8bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8ca8"/>
        <function-ref name="set" scoped="" ref="0x403e8d88"/>
        <function-ref name="clr" scoped="" ref="0x403e8e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403ec750" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403ec750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ec928"/>
        <function-ref name="isInput" scoped="" ref="0x403eca08"/>
        <function-ref name="toggle" scoped="" ref="0x403ecae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ecbc8"/>
        <function-ref name="get" scoped="" ref="0x403ecca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ecd88"/>
        <function-ref name="set" scoped="" ref="0x403ece68"/>
        <function-ref name="clr" scoped="" ref="0x403eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403ef010" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403ef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ef2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ef3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef488"/>
        <function-ref name="get" scoped="" ref="0x403ef568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef648"/>
        <function-ref name="set" scoped="" ref="0x403ef728"/>
        <function-ref name="clr" scoped="" ref="0x403ef808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403d3c08" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d2010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d20f0"/>
        <function-ref name="get" scoped="" ref="0x403d21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d22b0"/>
        <function-ref name="set" scoped="" ref="0x403d2390"/>
        <function-ref name="clr" scoped="" ref="0x403d2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403d62f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403d62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d64c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d65a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d6688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6768"/>
        <function-ref name="get" scoped="" ref="0x403d6848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6928"/>
        <function-ref name="set" scoped="" ref="0x403d6a08"/>
        <function-ref name="clr" scoped="" ref="0x403d6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ed2f0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ed2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ed5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ed688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed768"/>
        <function-ref name="get" scoped="" ref="0x403ed848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed928"/>
        <function-ref name="set" scoped="" ref="0x403eda08"/>
        <function-ref name="clr" scoped="" ref="0x403edae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403df750" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403df750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df928"/>
        <function-ref name="isInput" scoped="" ref="0x403dfa08"/>
        <function-ref name="toggle" scoped="" ref="0x403dfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfbc8"/>
        <function-ref name="get" scoped="" ref="0x403dfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfd88"/>
        <function-ref name="set" scoped="" ref="0x403dfe68"/>
        <function-ref name="clr" scoped="" ref="0x403de010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403e3ea8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403e3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e20c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e21a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e2280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2360"/>
        <function-ref name="get" scoped="" ref="0x403e2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2520"/>
        <function-ref name="set" scoped="" ref="0x403e2600"/>
        <function-ref name="clr" scoped="" ref="0x403e26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403e54b0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403e54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5688"/>
        <function-ref name="isInput" scoped="" ref="0x403e5768"/>
        <function-ref name="toggle" scoped="" ref="0x403e5848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5928"/>
        <function-ref name="get" scoped="" ref="0x403e5a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5ae8"/>
        <function-ref name="set" scoped="" ref="0x403e5bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403ea670" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea848"/>
        <function-ref name="isInput" scoped="" ref="0x403ea928"/>
        <function-ref name="toggle" scoped="" ref="0x403eaa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403eaae8"/>
        <function-ref name="get" scoped="" ref="0x403eabc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eaca8"/>
        <function-ref name="set" scoped="" ref="0x403ead88"/>
        <function-ref name="clr" scoped="" ref="0x403eae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403ce8f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403ce8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ceac8"/>
        <function-ref name="isInput" scoped="" ref="0x403ceba8"/>
        <function-ref name="toggle" scoped="" ref="0x403cec88"/>
        <function-ref name="isOutput" scoped="" ref="0x403ced68"/>
        <function-ref name="get" scoped="" ref="0x403cee48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cef28"/>
        <function-ref name="set" scoped="" ref="0x403d5018"/>
        <function-ref name="clr" scoped="" ref="0x403d50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403daea8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d90c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d91a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d9280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9360"/>
        <function-ref name="get" scoped="" ref="0x403d9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9520"/>
        <function-ref name="set" scoped="" ref="0x403d9600"/>
        <function-ref name="clr" scoped="" ref="0x403d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403dd670" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd848"/>
        <function-ref name="isInput" scoped="" ref="0x403dd928"/>
        <function-ref name="toggle" scoped="" ref="0x403dda08"/>
        <function-ref name="isOutput" scoped="" ref="0x403ddae8"/>
        <function-ref name="get" scoped="" ref="0x403ddbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ddca8"/>
        <function-ref name="set" scoped="" ref="0x403ddd88"/>
        <function-ref name="clr" scoped="" ref="0x403dde68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403e1ce8" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403e1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e0010"/>
        <function-ref name="toggle" scoped="" ref="0x403e00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e01d0"/>
        <function-ref name="get" scoped="" ref="0x403e02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0390"/>
        <function-ref name="set" scoped="" ref="0x403e0470"/>
        <function-ref name="clr" scoped="" ref="0x403e0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403f1ab8" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403f1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1c90"/>
        <function-ref name="isInput" scoped="" ref="0x403f1d70"/>
        <function-ref name="toggle" scoped="" ref="0x403f1e50"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0010"/>
        <function-ref name="get" scoped="" ref="0x403f00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f01d0"/>
        <function-ref name="set" scoped="" ref="0x403f02b0"/>
        <function-ref name="clr" scoped="" ref="0x403f0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403e9210" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403e9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e93e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e94c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e95a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9688"/>
        <function-ref name="get" scoped="" ref="0x403e9768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9848"/>
        <function-ref name="set" scoped="" ref="0x403e9928"/>
        <function-ref name="clr" scoped="" ref="0x403e9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403db4b0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db688"/>
        <function-ref name="isInput" scoped="" ref="0x403db768"/>
        <function-ref name="toggle" scoped="" ref="0x403db848"/>
        <function-ref name="isOutput" scoped="" ref="0x403db928"/>
        <function-ref name="get" scoped="" ref="0x403dba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dbae8"/>
        <function-ref name="set" scoped="" ref="0x403dbbc8"/>
        <function-ref name="clr" scoped="" ref="0x403dbca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403d4750" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403d4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4928"/>
        <function-ref name="isInput" scoped="" ref="0x403d4a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4bc8"/>
        <function-ref name="get" scoped="" ref="0x403d4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4d88"/>
        <function-ref name="set" scoped="" ref="0x403d4e68"/>
        <function-ref name="clr" scoped="" ref="0x403d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403d8d68" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403d8d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7010"/>
        <function-ref name="isInput" scoped="" ref="0x403d70f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d71d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d72b0"/>
        <function-ref name="get" scoped="" ref="0x403d7390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7470"/>
        <function-ref name="set" scoped="" ref="0x403d7550"/>
        <function-ref name="clr" scoped="" ref="0x403d7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404204f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404204f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404206c8"/>
        <function-ref name="isInput" scoped="" ref="0x404207a8"/>
        <function-ref name="toggle" scoped="" ref="0x40420888"/>
        <function-ref name="isOutput" scoped="" ref="0x40420968"/>
        <function-ref name="get" scoped="" ref="0x40420a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420b28"/>
        <function-ref name="set" scoped="" ref="0x40420c08"/>
        <function-ref name="clr" scoped="" ref="0x40420ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041e170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e348"/>
        <function-ref name="isInput" scoped="" ref="0x4041e428"/>
        <function-ref name="toggle" scoped="" ref="0x4041e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e5e8"/>
        <function-ref name="get" scoped="" ref="0x4041e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e7a8"/>
        <function-ref name="set" scoped="" ref="0x4041e888"/>
        <function-ref name="clr" scoped="" ref="0x4041e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40417228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40417228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417400"/>
        <function-ref name="isInput" scoped="" ref="0x404174e0"/>
        <function-ref name="toggle" scoped="" ref="0x404175c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404176a0"/>
        <function-ref name="get" scoped="" ref="0x40417780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417860"/>
        <function-ref name="set" scoped="" ref="0x40417940"/>
        <function-ref name="clr" scoped="" ref="0x40417a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40420e48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40420e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f050"/>
        <function-ref name="isInput" scoped="" ref="0x4041f130"/>
        <function-ref name="toggle" scoped="" ref="0x4041f210"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f2f0"/>
        <function-ref name="get" scoped="" ref="0x4041f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f4b0"/>
        <function-ref name="set" scoped="" ref="0x4041f590"/>
        <function-ref name="clr" scoped="" ref="0x4041f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041eac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4041ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d010"/>
        <function-ref name="get" scoped="" ref="0x4041d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d1d0"/>
        <function-ref name="set" scoped="" ref="0x4041d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40417b80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40417b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417d58"/>
        <function-ref name="isInput" scoped="" ref="0x40417e38"/>
        <function-ref name="toggle" scoped="" ref="0x40417f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40420010"/>
        <function-ref name="get" scoped="" ref="0x404200f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404201d0"/>
        <function-ref name="set" scoped="" ref="0x404202b0"/>
        <function-ref name="clr" scoped="" ref="0x40420390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4041f7d0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4041f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4041fa88"/>
        <function-ref name="toggle" scoped="" ref="0x4041fb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fc48"/>
        <function-ref name="get" scoped="" ref="0x4041fd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fe08"/>
        <function-ref name="set" scoped="" ref="0x4041fee8"/>
        <function-ref name="clr" scoped="" ref="0x4041e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041d4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d968"/>
        <function-ref name="get" scoped="" ref="0x4041da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041db28"/>
        <function-ref name="set" scoped="" ref="0x4041dc08"/>
        <function-ref name="clr" scoped="" ref="0x4041dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ac25c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ac25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac2798"/>
        <function-ref name="isInput" scoped="" ref="0x40ac2878"/>
        <function-ref name="toggle" scoped="" ref="0x40ac2958"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac2a38"/>
        <function-ref name="get" scoped="" ref="0x40ac2b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac2bf8"/>
        <function-ref name="set" scoped="" ref="0x40ac2cd8"/>
        <function-ref name="clr" scoped="" ref="0x40ac2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ac0010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ac0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac02c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac0488"/>
        <function-ref name="get" scoped="" ref="0x40ac0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac0648"/>
        <function-ref name="set" scoped="" ref="0x40ac0728"/>
        <function-ref name="clr" scoped="" ref="0x40ac0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ae89e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ae89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ae8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae8e60"/>
        <function-ref name="get" scoped="" ref="0x40ae7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae70f0"/>
        <function-ref name="set" scoped="" ref="0x40ae71d0"/>
        <function-ref name="clr" scoped="" ref="0x40ae72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ae6538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ae6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae6710"/>
        <function-ref name="isInput" scoped="" ref="0x40ae67f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae69b0"/>
        <function-ref name="get" scoped="" ref="0x40ae6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae6b70"/>
        <function-ref name="set" scoped="" ref="0x40ae6c50"/>
        <function-ref name="clr" scoped="" ref="0x40ae6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ae4010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ae4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae41e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ae42c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ae43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae4488"/>
        <function-ref name="get" scoped="" ref="0x40ae4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae4648"/>
        <function-ref name="set" scoped="" ref="0x40ae4728"/>
        <function-ref name="clr" scoped="" ref="0x40ae4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ae39e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ae39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ae3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae3e60"/>
        <function-ref name="get" scoped="" ref="0x40ae2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae20f0"/>
        <function-ref name="set" scoped="" ref="0x40ae21d0"/>
        <function-ref name="clr" scoped="" ref="0x40ae22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ae1538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ae1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ae1710"/>
        <function-ref name="isInput" scoped="" ref="0x40ae17f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ae18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ae19b0"/>
        <function-ref name="get" scoped="" ref="0x40ae1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ae1b70"/>
        <function-ref name="set" scoped="" ref="0x40ae1c50"/>
        <function-ref name="clr" scoped="" ref="0x40ae1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40adf010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40adf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40adf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40adf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40adf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40adf488"/>
        <function-ref name="get" scoped="" ref="0x40adf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40adf648"/>
        <function-ref name="set" scoped="" ref="0x40adf728"/>
        <function-ref name="clr" scoped="" ref="0x40adf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40423e48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40423e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422050"/>
        <function-ref name="isInput" scoped="" ref="0x40422130"/>
        <function-ref name="toggle" scoped="" ref="0x40422210"/>
        <function-ref name="isOutput" scoped="" ref="0x404222f0"/>
        <function-ref name="get" scoped="" ref="0x404223d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404224b0"/>
        <function-ref name="set" scoped="" ref="0x40422590"/>
        <function-ref name="clr" scoped="" ref="0x40422670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40421ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40421ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40421d80"/>
        <function-ref name="toggle" scoped="" ref="0x40421e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c010"/>
        <function-ref name="get" scoped="" ref="0x4042c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c1d0"/>
        <function-ref name="set" scoped="" ref="0x4042c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40424b00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40424b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40424db8"/>
        <function-ref name="toggle" scoped="" ref="0x40424e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40423010"/>
        <function-ref name="get" scoped="" ref="0x404230f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404231d0"/>
        <function-ref name="set" scoped="" ref="0x404232b0"/>
        <function-ref name="clr" scoped="" ref="0x40423390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404227d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404227d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404229a8"/>
        <function-ref name="isInput" scoped="" ref="0x40422a88"/>
        <function-ref name="toggle" scoped="" ref="0x40422b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40422c48"/>
        <function-ref name="get" scoped="" ref="0x40422d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422e08"/>
        <function-ref name="set" scoped="" ref="0x40422ee8"/>
        <function-ref name="clr" scoped="" ref="0x40421010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042c4f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c968"/>
        <function-ref name="get" scoped="" ref="0x4042ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042cb28"/>
        <function-ref name="set" scoped="" ref="0x4042cc08"/>
        <function-ref name="clr" scoped="" ref="0x4042cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404234f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404234f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404236c8"/>
        <function-ref name="isInput" scoped="" ref="0x404237a8"/>
        <function-ref name="toggle" scoped="" ref="0x40423888"/>
        <function-ref name="isOutput" scoped="" ref="0x40423968"/>
        <function-ref name="get" scoped="" ref="0x40423a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423b28"/>
        <function-ref name="set" scoped="" ref="0x40423c08"/>
        <function-ref name="clr" scoped="" ref="0x40423ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40421170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40421170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421348"/>
        <function-ref name="isInput" scoped="" ref="0x40421428"/>
        <function-ref name="toggle" scoped="" ref="0x40421508"/>
        <function-ref name="isOutput" scoped="" ref="0x404215e8"/>
        <function-ref name="get" scoped="" ref="0x404216c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404217a8"/>
        <function-ref name="set" scoped="" ref="0x40421888"/>
        <function-ref name="clr" scoped="" ref="0x40421968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042ce48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b050"/>
        <function-ref name="isInput" scoped="" ref="0x4042b130"/>
        <function-ref name="toggle" scoped="" ref="0x4042b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b2f0"/>
        <function-ref name="get" scoped="" ref="0x4042b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b4b0"/>
        <function-ref name="set" scoped="" ref="0x4042b590"/>
        <function-ref name="clr" scoped="" ref="0x4042b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40aff418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40aff418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aff5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40aff6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40aff7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40aff890"/>
        <function-ref name="get" scoped="" ref="0x40aff970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40affa50"/>
        <function-ref name="set" scoped="" ref="0x40affb30"/>
        <function-ref name="clr" scoped="" ref="0x40affc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40afede0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40afede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40afd010"/>
        <function-ref name="isInput" scoped="" ref="0x40afd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40afd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40afd2b0"/>
        <function-ref name="get" scoped="" ref="0x40afd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40afd470"/>
        <function-ref name="set" scoped="" ref="0x40afd550"/>
        <function-ref name="clr" scoped="" ref="0x40afd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40afc7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40afc7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40afc9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40afcab0"/>
        <function-ref name="toggle" scoped="" ref="0x40afcb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40afcc70"/>
        <function-ref name="get" scoped="" ref="0x40afcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40afce30"/>
        <function-ref name="set" scoped="" ref="0x40afcf10"/>
        <function-ref name="clr" scoped="" ref="0x40b21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b20228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b20228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b20400"/>
        <function-ref name="isInput" scoped="" ref="0x40b204e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b205c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b206a0"/>
        <function-ref name="get" scoped="" ref="0x40b20780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b20860"/>
        <function-ref name="set" scoped="" ref="0x40b20940"/>
        <function-ref name="clr" scoped="" ref="0x40b20a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b1fc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b1fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b1fde0"/>
        <function-ref name="isInput" scoped="" ref="0x40b1fec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b1e010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b1e0f0"/>
        <function-ref name="get" scoped="" ref="0x40b1e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b1e2b0"/>
        <function-ref name="set" scoped="" ref="0x40b1e390"/>
        <function-ref name="clr" scoped="" ref="0x40b1e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b1d6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b1d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b1d898"/>
        <function-ref name="isInput" scoped="" ref="0x40b1d978"/>
        <function-ref name="toggle" scoped="" ref="0x40b1da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b1db38"/>
        <function-ref name="get" scoped="" ref="0x40b1dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b1dcf8"/>
        <function-ref name="set" scoped="" ref="0x40b1ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40b1deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b1b0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b1b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b1b288"/>
        <function-ref name="isInput" scoped="" ref="0x40b1b368"/>
        <function-ref name="toggle" scoped="" ref="0x40b1b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b1b528"/>
        <function-ref name="get" scoped="" ref="0x40b1b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b1b6e8"/>
        <function-ref name="set" scoped="" ref="0x40b1b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40b1b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b1aa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b1aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b1ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40b1ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40b1ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b1af00"/>
        <function-ref name="get" scoped="" ref="0x40b18010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b180f0"/>
        <function-ref name="set" scoped="" ref="0x40b181d0"/>
        <function-ref name="clr" scoped="" ref="0x40b182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404326b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432888"/>
        <function-ref name="isInput" scoped="" ref="0x40432968"/>
        <function-ref name="toggle" scoped="" ref="0x40432a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40432b28"/>
        <function-ref name="get" scoped="" ref="0x40432c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432ce8"/>
        <function-ref name="set" scoped="" ref="0x40432dc8"/>
        <function-ref name="clr" scoped="" ref="0x40432ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40430330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40430330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430508"/>
        <function-ref name="isInput" scoped="" ref="0x404305e8"/>
        <function-ref name="toggle" scoped="" ref="0x404306c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404307a8"/>
        <function-ref name="get" scoped="" ref="0x40430888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430968"/>
        <function-ref name="set" scoped="" ref="0x40430a48"/>
        <function-ref name="clr" scoped="" ref="0x40430b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404283d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404283d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404285b0"/>
        <function-ref name="isInput" scoped="" ref="0x40428690"/>
        <function-ref name="toggle" scoped="" ref="0x40428770"/>
        <function-ref name="isOutput" scoped="" ref="0x40428850"/>
        <function-ref name="get" scoped="" ref="0x40428930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428a10"/>
        <function-ref name="set" scoped="" ref="0x40428af0"/>
        <function-ref name="clr" scoped="" ref="0x40428bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40431030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40431030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431208"/>
        <function-ref name="isInput" scoped="" ref="0x404312e8"/>
        <function-ref name="toggle" scoped="" ref="0x404313c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404314a8"/>
        <function-ref name="get" scoped="" ref="0x40431588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431668"/>
        <function-ref name="set" scoped="" ref="0x40431748"/>
        <function-ref name="clr" scoped="" ref="0x40431828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40430c88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40430c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430e60"/>
        <function-ref name="isInput" scoped="" ref="0x4042f010"/>
        <function-ref name="toggle" scoped="" ref="0x4042f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f1d0"/>
        <function-ref name="get" scoped="" ref="0x4042f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f390"/>
        <function-ref name="set" scoped="" ref="0x4042f470"/>
        <function-ref name="clr" scoped="" ref="0x4042f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40428d30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40428d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428f08"/>
        <function-ref name="isInput" scoped="" ref="0x40432010"/>
        <function-ref name="toggle" scoped="" ref="0x404320f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404321d0"/>
        <function-ref name="get" scoped="" ref="0x404322b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432390"/>
        <function-ref name="set" scoped="" ref="0x40432470"/>
        <function-ref name="clr" scoped="" ref="0x40432550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40431988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40431988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431b60"/>
        <function-ref name="isInput" scoped="" ref="0x40431c40"/>
        <function-ref name="toggle" scoped="" ref="0x40431d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40431e00"/>
        <function-ref name="get" scoped="" ref="0x40431ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430010"/>
        <function-ref name="set" scoped="" ref="0x404300f0"/>
        <function-ref name="clr" scoped="" ref="0x404301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042f6b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f888"/>
        <function-ref name="isInput" scoped="" ref="0x4042f968"/>
        <function-ref name="toggle" scoped="" ref="0x4042fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4042fb28"/>
        <function-ref name="get" scoped="" ref="0x4042fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fce8"/>
        <function-ref name="set" scoped="" ref="0x4042fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4042fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b40de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b40de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3b010"/>
        <function-ref name="isInput" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3b2b0"/>
        <function-ref name="get" scoped="" ref="0x40b3b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3b470"/>
        <function-ref name="set" scoped="" ref="0x40b3b550"/>
        <function-ref name="clr" scoped="" ref="0x40b3b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b3a7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b3a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b3a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b3aab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b3ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b3ac70"/>
        <function-ref name="get" scoped="" ref="0x40b3ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b3ae30"/>
        <function-ref name="set" scoped="" ref="0x40b3af10"/>
        <function-ref name="clr" scoped="" ref="0x40b39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b38228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b38228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b38400"/>
        <function-ref name="isInput" scoped="" ref="0x40b384e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b385c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b386a0"/>
        <function-ref name="get" scoped="" ref="0x40b38780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b38860"/>
        <function-ref name="set" scoped="" ref="0x40b38940"/>
        <function-ref name="clr" scoped="" ref="0x40b38a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b37c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b37c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b37de0"/>
        <function-ref name="isInput" scoped="" ref="0x40b37ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b36010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b360f0"/>
        <function-ref name="get" scoped="" ref="0x40b361d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b362b0"/>
        <function-ref name="set" scoped="" ref="0x40b36390"/>
        <function-ref name="clr" scoped="" ref="0x40b36470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b5d6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b5d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5d898"/>
        <function-ref name="isInput" scoped="" ref="0x40b5d978"/>
        <function-ref name="toggle" scoped="" ref="0x40b5da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5db38"/>
        <function-ref name="get" scoped="" ref="0x40b5dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5dcf8"/>
        <function-ref name="set" scoped="" ref="0x40b5ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40b5deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b5b0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b5b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5b288"/>
        <function-ref name="isInput" scoped="" ref="0x40b5b368"/>
        <function-ref name="toggle" scoped="" ref="0x40b5b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5b528"/>
        <function-ref name="get" scoped="" ref="0x40b5b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5b6e8"/>
        <function-ref name="set" scoped="" ref="0x40b5b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40b5b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b5aa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b5aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40b5ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40b5ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5af00"/>
        <function-ref name="get" scoped="" ref="0x40b59010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b590f0"/>
        <function-ref name="set" scoped="" ref="0x40b591d0"/>
        <function-ref name="clr" scoped="" ref="0x40b592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b58538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b58538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b58710"/>
        <function-ref name="isInput" scoped="" ref="0x40b587f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b588d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b589b0"/>
        <function-ref name="get" scoped="" ref="0x40b58a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b58b70"/>
        <function-ref name="set" scoped="" ref="0x40b58c50"/>
        <function-ref name="clr" scoped="" ref="0x40b58d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40436170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40436170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436348"/>
        <function-ref name="isInput" scoped="" ref="0x40436428"/>
        <function-ref name="toggle" scoped="" ref="0x40436508"/>
        <function-ref name="isOutput" scoped="" ref="0x404365e8"/>
        <function-ref name="get" scoped="" ref="0x404366c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404367a8"/>
        <function-ref name="set" scoped="" ref="0x40436888"/>
        <function-ref name="clr" scoped="" ref="0x40436968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40435e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40435e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434050"/>
        <function-ref name="isInput" scoped="" ref="0x40434130"/>
        <function-ref name="toggle" scoped="" ref="0x40434210"/>
        <function-ref name="isOutput" scoped="" ref="0x404342f0"/>
        <function-ref name="get" scoped="" ref="0x404343d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404344b0"/>
        <function-ref name="set" scoped="" ref="0x40434590"/>
        <function-ref name="clr" scoped="" ref="0x40434670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40438dc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40438dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437010"/>
        <function-ref name="isInput" scoped="" ref="0x404370f0"/>
        <function-ref name="toggle" scoped="" ref="0x404371d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404372b0"/>
        <function-ref name="get" scoped="" ref="0x40437390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437470"/>
        <function-ref name="set" scoped="" ref="0x40437550"/>
        <function-ref name="clr" scoped="" ref="0x40437630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40436ac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40436ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40436d80"/>
        <function-ref name="toggle" scoped="" ref="0x40436e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40435010"/>
        <function-ref name="get" scoped="" ref="0x404350f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404351d0"/>
        <function-ref name="set" scoped="" ref="0x404352b0"/>
        <function-ref name="clr" scoped="" ref="0x40435390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404347d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404349a8"/>
        <function-ref name="isInput" scoped="" ref="0x40434a88"/>
        <function-ref name="toggle" scoped="" ref="0x40434b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40434c48"/>
        <function-ref name="get" scoped="" ref="0x40434d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434e08"/>
        <function-ref name="set" scoped="" ref="0x40434ee8"/>
        <function-ref name="clr" scoped="" ref="0x4043e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40437790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40437790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437968"/>
        <function-ref name="isInput" scoped="" ref="0x40437a48"/>
        <function-ref name="toggle" scoped="" ref="0x40437b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40437c08"/>
        <function-ref name="get" scoped="" ref="0x40437ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437dc8"/>
        <function-ref name="set" scoped="" ref="0x40437ea8"/>
        <function-ref name="clr" scoped="" ref="0x40436010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404354f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404354f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404356c8"/>
        <function-ref name="isInput" scoped="" ref="0x404357a8"/>
        <function-ref name="toggle" scoped="" ref="0x40435888"/>
        <function-ref name="isOutput" scoped="" ref="0x40435968"/>
        <function-ref name="get" scoped="" ref="0x40435a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435b28"/>
        <function-ref name="set" scoped="" ref="0x40435c08"/>
        <function-ref name="clr" scoped="" ref="0x40435ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4043e170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4043e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e348"/>
        <function-ref name="isInput" scoped="" ref="0x4043e428"/>
        <function-ref name="toggle" scoped="" ref="0x4043e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e5e8"/>
        <function-ref name="get" scoped="" ref="0x4043e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e7a8"/>
        <function-ref name="set" scoped="" ref="0x4043e888"/>
        <function-ref name="clr" scoped="" ref="0x4043e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7c938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7cb10"/>
        <function-ref name="isInput" scoped="" ref="0x40b7cbf0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7ccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7cdb0"/>
        <function-ref name="get" scoped="" ref="0x40b7ce90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7b010"/>
        <function-ref name="set" scoped="" ref="0x40b7b0f0"/>
        <function-ref name="clr" scoped="" ref="0x40b7b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7a3b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7a588"/>
        <function-ref name="isInput" scoped="" ref="0x40b7a668"/>
        <function-ref name="toggle" scoped="" ref="0x40b7a748"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7a828"/>
        <function-ref name="get" scoped="" ref="0x40b7a908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7a9e8"/>
        <function-ref name="set" scoped="" ref="0x40b7aac8"/>
        <function-ref name="clr" scoped="" ref="0x40b7aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b79d70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b79d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b78010"/>
        <function-ref name="isInput" scoped="" ref="0x40b780f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b781d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b782b0"/>
        <function-ref name="get" scoped="" ref="0x40b78390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b78470"/>
        <function-ref name="set" scoped="" ref="0x40b78550"/>
        <function-ref name="clr" scoped="" ref="0x40b78630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b777f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b777f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b779d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b77ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40b77b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40b77c70"/>
        <function-ref name="get" scoped="" ref="0x40b77d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b77e30"/>
        <function-ref name="set" scoped="" ref="0x40b77f10"/>
        <function-ref name="clr" scoped="" ref="0x40b76010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b75228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b75228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b75400"/>
        <function-ref name="isInput" scoped="" ref="0x40b754e0"/>
        <function-ref name="toggle" scoped="" ref="0x40b755c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b756a0"/>
        <function-ref name="get" scoped="" ref="0x40b75780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b75860"/>
        <function-ref name="set" scoped="" ref="0x40b75940"/>
        <function-ref name="clr" scoped="" ref="0x40b75a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b74c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b74c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b74de0"/>
        <function-ref name="isInput" scoped="" ref="0x40b74ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40b72010"/>
        <function-ref name="isOutput" scoped="" ref="0x40b720f0"/>
        <function-ref name="get" scoped="" ref="0x40b721d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b722b0"/>
        <function-ref name="set" scoped="" ref="0x40b72390"/>
        <function-ref name="clr" scoped="" ref="0x40b72470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b996c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b99898"/>
        <function-ref name="isInput" scoped="" ref="0x40b99978"/>
        <function-ref name="toggle" scoped="" ref="0x40b99a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40b99b38"/>
        <function-ref name="get" scoped="" ref="0x40b99c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b99cf8"/>
        <function-ref name="set" scoped="" ref="0x40b99dd8"/>
        <function-ref name="clr" scoped="" ref="0x40b99eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b970b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b970b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b97288"/>
        <function-ref name="isInput" scoped="" ref="0x40b97368"/>
        <function-ref name="toggle" scoped="" ref="0x40b97448"/>
        <function-ref name="isOutput" scoped="" ref="0x40b97528"/>
        <function-ref name="get" scoped="" ref="0x40b97608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b976e8"/>
        <function-ref name="set" scoped="" ref="0x40b977c8"/>
        <function-ref name="clr" scoped="" ref="0x40b978a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043a9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4043aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4043ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ae60"/>
        <function-ref name="get" scoped="" ref="0x40439010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404390f0"/>
        <function-ref name="set" scoped="" ref="0x404391d0"/>
        <function-ref name="clr" scoped="" ref="0x404392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40444790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40444790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444968"/>
        <function-ref name="isInput" scoped="" ref="0x40444a48"/>
        <function-ref name="toggle" scoped="" ref="0x40444b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40444c08"/>
        <function-ref name="get" scoped="" ref="0x40444ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444dc8"/>
        <function-ref name="set" scoped="" ref="0x40444ea8"/>
        <function-ref name="clr" scoped="" ref="0x40443010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043b6f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4043b9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4043ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x4043bb70"/>
        <function-ref name="get" scoped="" ref="0x4043bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043bd30"/>
        <function-ref name="set" scoped="" ref="0x4043be10"/>
        <function-ref name="clr" scoped="" ref="0x4043bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40439410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40439410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404395e8"/>
        <function-ref name="isInput" scoped="" ref="0x404396c8"/>
        <function-ref name="toggle" scoped="" ref="0x404397a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40439888"/>
        <function-ref name="get" scoped="" ref="0x40439968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40439a48"/>
        <function-ref name="set" scoped="" ref="0x40439b28"/>
        <function-ref name="clr" scoped="" ref="0x40439c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40443170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40443170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443348"/>
        <function-ref name="isInput" scoped="" ref="0x40443428"/>
        <function-ref name="toggle" scoped="" ref="0x40443508"/>
        <function-ref name="isOutput" scoped="" ref="0x404435e8"/>
        <function-ref name="get" scoped="" ref="0x404436c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404437a8"/>
        <function-ref name="set" scoped="" ref="0x40443888"/>
        <function-ref name="clr" scoped="" ref="0x40443968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043a090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a268"/>
        <function-ref name="isInput" scoped="" ref="0x4043a348"/>
        <function-ref name="toggle" scoped="" ref="0x4043a428"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a508"/>
        <function-ref name="get" scoped="" ref="0x4043a5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a6c8"/>
        <function-ref name="set" scoped="" ref="0x4043a7a8"/>
        <function-ref name="clr" scoped="" ref="0x4043a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40439d68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40439d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444010"/>
        <function-ref name="isInput" scoped="" ref="0x404440f0"/>
        <function-ref name="toggle" scoped="" ref="0x404441d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404442b0"/>
        <function-ref name="get" scoped="" ref="0x40444390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444470"/>
        <function-ref name="set" scoped="" ref="0x40444550"/>
        <function-ref name="clr" scoped="" ref="0x40444630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40443ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40443ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40443ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40443d80"/>
        <function-ref name="toggle" scoped="" ref="0x40443e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40442010"/>
        <function-ref name="get" scoped="" ref="0x404420f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404421d0"/>
        <function-ref name="set" scoped="" ref="0x404422b0"/>
        <function-ref name="clr" scoped="" ref="0x40442390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbc538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbc710"/>
        <function-ref name="isInput" scoped="" ref="0x40bbc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bbc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbc9b0"/>
        <function-ref name="get" scoped="" ref="0x40bbca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbcb70"/>
        <function-ref name="set" scoped="" ref="0x40bbcc50"/>
        <function-ref name="clr" scoped="" ref="0x40bbcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bba010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bba1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bba2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bba3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bba488"/>
        <function-ref name="get" scoped="" ref="0x40bba568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bba648"/>
        <function-ref name="set" scoped="" ref="0x40bba728"/>
        <function-ref name="clr" scoped="" ref="0x40bba808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb99e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb9bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bb9ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bb9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb9e60"/>
        <function-ref name="get" scoped="" ref="0x40bb8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb80f0"/>
        <function-ref name="set" scoped="" ref="0x40bb81d0"/>
        <function-ref name="clr" scoped="" ref="0x40bb82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb7538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb7710"/>
        <function-ref name="isInput" scoped="" ref="0x40bb77f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bb78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb79b0"/>
        <function-ref name="get" scoped="" ref="0x40bb7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb7b70"/>
        <function-ref name="set" scoped="" ref="0x40bb7c50"/>
        <function-ref name="clr" scoped="" ref="0x40bb7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb5010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb51e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bb52c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bb53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb5488"/>
        <function-ref name="get" scoped="" ref="0x40bb5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb5648"/>
        <function-ref name="set" scoped="" ref="0x40bb5728"/>
        <function-ref name="clr" scoped="" ref="0x40bb5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb49e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bb4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bb4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb4e60"/>
        <function-ref name="get" scoped="" ref="0x40bb3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb30f0"/>
        <function-ref name="set" scoped="" ref="0x40bb31d0"/>
        <function-ref name="clr" scoped="" ref="0x40bb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb2538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb2710"/>
        <function-ref name="isInput" scoped="" ref="0x40bb27f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bb28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb29b0"/>
        <function-ref name="get" scoped="" ref="0x40bb2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb2b70"/>
        <function-ref name="set" scoped="" ref="0x40bb2c50"/>
        <function-ref name="clr" scoped="" ref="0x40bb2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bb0010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bb0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb01e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bb02c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bb03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb0488"/>
        <function-ref name="get" scoped="" ref="0x40bb0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb0648"/>
        <function-ref name="set" scoped="" ref="0x40bb0728"/>
        <function-ref name="clr" scoped="" ref="0x40bb0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40449330" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40449330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449508"/>
        <function-ref name="isInput" scoped="" ref="0x404495e8"/>
        <function-ref name="toggle" scoped="" ref="0x404496c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404497a8"/>
        <function-ref name="get" scoped="" ref="0x40449888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449968"/>
        <function-ref name="set" scoped="" ref="0x40449a48"/>
        <function-ref name="clr" scoped="" ref="0x40449b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40447030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40447030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447208"/>
        <function-ref name="isInput" scoped="" ref="0x404472e8"/>
        <function-ref name="toggle" scoped="" ref="0x404473c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404474a8"/>
        <function-ref name="get" scoped="" ref="0x40447588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447668"/>
        <function-ref name="set" scoped="" ref="0x40447748"/>
        <function-ref name="clr" scoped="" ref="0x40447828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4044a010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4044a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4044a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4044a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a488"/>
        <function-ref name="get" scoped="" ref="0x4044a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a648"/>
        <function-ref name="set" scoped="" ref="0x4044a728"/>
        <function-ref name="clr" scoped="" ref="0x4044a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40449c88" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40449c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449e60"/>
        <function-ref name="isInput" scoped="" ref="0x40448010"/>
        <function-ref name="toggle" scoped="" ref="0x404480f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404481d0"/>
        <function-ref name="get" scoped="" ref="0x404482b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448390"/>
        <function-ref name="set" scoped="" ref="0x40448470"/>
        <function-ref name="clr" scoped="" ref="0x40448550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40447988" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40447988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447b60"/>
        <function-ref name="isInput" scoped="" ref="0x40447c40"/>
        <function-ref name="toggle" scoped="" ref="0x40447d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40447e00"/>
        <function-ref name="get" scoped="" ref="0x40447ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446010"/>
        <function-ref name="set" scoped="" ref="0x404460f0"/>
        <function-ref name="clr" scoped="" ref="0x404461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4044a968" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4044a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044ab40"/>
        <function-ref name="isInput" scoped="" ref="0x4044ac20"/>
        <function-ref name="toggle" scoped="" ref="0x4044ad00"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ade0"/>
        <function-ref name="get" scoped="" ref="0x4044aec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449010"/>
        <function-ref name="set" scoped="" ref="0x404490f0"/>
        <function-ref name="clr" scoped="" ref="0x404491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404486b0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404486b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448888"/>
        <function-ref name="isInput" scoped="" ref="0x40448968"/>
        <function-ref name="toggle" scoped="" ref="0x40448a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40448b28"/>
        <function-ref name="get" scoped="" ref="0x40448c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448ce8"/>
        <function-ref name="set" scoped="" ref="0x40448dc8"/>
        <function-ref name="clr" scoped="" ref="0x40448ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40446330" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40446330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446508"/>
        <function-ref name="isInput" scoped="" ref="0x404465e8"/>
        <function-ref name="toggle" scoped="" ref="0x404466c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404467a8"/>
        <function-ref name="get" scoped="" ref="0x40446888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40446968"/>
        <function-ref name="set" scoped="" ref="0x40446a48"/>
        <function-ref name="clr" scoped="" ref="0x40446b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bd8418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bd8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd85f0"/>
        <function-ref name="isInput" scoped="" ref="0x40bd86d0"/>
        <function-ref name="toggle" scoped="" ref="0x40bd87b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd8890"/>
        <function-ref name="get" scoped="" ref="0x40bd8970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bd8a50"/>
        <function-ref name="set" scoped="" ref="0x40bd8b30"/>
        <function-ref name="clr" scoped="" ref="0x40bd8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c01de0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c01de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c00010"/>
        <function-ref name="isInput" scoped="" ref="0x40c000f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c001d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c002b0"/>
        <function-ref name="get" scoped="" ref="0x40c00390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c00470"/>
        <function-ref name="set" scoped="" ref="0x40c00550"/>
        <function-ref name="clr" scoped="" ref="0x40c00630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bff7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bff7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bff9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40bffab0"/>
        <function-ref name="toggle" scoped="" ref="0x40bffb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40bffc70"/>
        <function-ref name="get" scoped="" ref="0x40bffd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bffe30"/>
        <function-ref name="set" scoped="" ref="0x40bfff10"/>
        <function-ref name="clr" scoped="" ref="0x40bfe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bfd228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bfd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bfd400"/>
        <function-ref name="isInput" scoped="" ref="0x40bfd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40bfd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bfd6a0"/>
        <function-ref name="get" scoped="" ref="0x40bfd780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bfd860"/>
        <function-ref name="set" scoped="" ref="0x40bfd940"/>
        <function-ref name="clr" scoped="" ref="0x40bfda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bfcc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bfcc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bfcde0"/>
        <function-ref name="isInput" scoped="" ref="0x40bfcec0"/>
        <function-ref name="toggle" scoped="" ref="0x40bfa010"/>
        <function-ref name="isOutput" scoped="" ref="0x40bfa0f0"/>
        <function-ref name="get" scoped="" ref="0x40bfa1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bfa2b0"/>
        <function-ref name="set" scoped="" ref="0x40bfa390"/>
        <function-ref name="clr" scoped="" ref="0x40bfa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bf96c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bf96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bf9898"/>
        <function-ref name="isInput" scoped="" ref="0x40bf9978"/>
        <function-ref name="toggle" scoped="" ref="0x40bf9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40bf9b38"/>
        <function-ref name="get" scoped="" ref="0x40bf9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bf9cf8"/>
        <function-ref name="set" scoped="" ref="0x40bf9dd8"/>
        <function-ref name="clr" scoped="" ref="0x40bf9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bf70b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bf70b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bf7288"/>
        <function-ref name="isInput" scoped="" ref="0x40bf7368"/>
        <function-ref name="toggle" scoped="" ref="0x40bf7448"/>
        <function-ref name="isOutput" scoped="" ref="0x40bf7528"/>
        <function-ref name="get" scoped="" ref="0x40bf7608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bf76e8"/>
        <function-ref name="set" scoped="" ref="0x40bf77c8"/>
        <function-ref name="clr" scoped="" ref="0x40bf78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bf6a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bf6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bf6c60"/>
        <function-ref name="isInput" scoped="" ref="0x40bf6d40"/>
        <function-ref name="toggle" scoped="" ref="0x40bf6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40bf6f00"/>
        <function-ref name="get" scoped="" ref="0x40bf5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bf50f0"/>
        <function-ref name="set" scoped="" ref="0x40bf51d0"/>
        <function-ref name="clr" scoped="" ref="0x40bf52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044f2d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4044f588"/>
        <function-ref name="toggle" scoped="" ref="0x4044f668"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f748"/>
        <function-ref name="get" scoped="" ref="0x4044f828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f908"/>
        <function-ref name="set" scoped="" ref="0x4044f9e8"/>
        <function-ref name="clr" scoped="" ref="0x4044fac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404578a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404578a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457a78"/>
        <function-ref name="isInput" scoped="" ref="0x40457b58"/>
        <function-ref name="toggle" scoped="" ref="0x40457c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40457d18"/>
        <function-ref name="get" scoped="" ref="0x40457df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457ed8"/>
        <function-ref name="set" scoped="" ref="0x40462010"/>
        <function-ref name="clr" scoped="" ref="0x404620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40461ec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40461ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404600c0"/>
        <function-ref name="isInput" scoped="" ref="0x404601a0"/>
        <function-ref name="toggle" scoped="" ref="0x40460280"/>
        <function-ref name="isOutput" scoped="" ref="0x40460360"/>
        <function-ref name="get" scoped="" ref="0x40460440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460520"/>
        <function-ref name="set" scoped="" ref="0x40460600"/>
        <function-ref name="clr" scoped="" ref="0x404606e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045e538" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e710"/>
        <function-ref name="isInput" scoped="" ref="0x4045e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4045e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045e9b0"/>
        <function-ref name="get" scoped="" ref="0x4045ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045eb70"/>
        <function-ref name="set" scoped="" ref="0x4045ec50"/>
        <function-ref name="clr" scoped="" ref="0x4045ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40467b68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40467b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467d40"/>
        <function-ref name="isInput" scoped="" ref="0x40467e20"/>
        <function-ref name="toggle" scoped="" ref="0x40467f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40466010"/>
        <function-ref name="get" scoped="" ref="0x404660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404661d0"/>
        <function-ref name="set" scoped="" ref="0x404662b0"/>
        <function-ref name="clr" scoped="" ref="0x40466390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40464228" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40464228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464400"/>
        <function-ref name="isInput" scoped="" ref="0x404644e0"/>
        <function-ref name="toggle" scoped="" ref="0x404645c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404646a0"/>
        <function-ref name="get" scoped="" ref="0x40464780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40464860"/>
        <function-ref name="set" scoped="" ref="0x40464940"/>
        <function-ref name="clr" scoped="" ref="0x40464a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046e8f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046eac8"/>
        <function-ref name="isInput" scoped="" ref="0x4046eba8"/>
        <function-ref name="toggle" scoped="" ref="0x4046ec88"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ed68"/>
        <function-ref name="get" scoped="" ref="0x4046ee48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ef28"/>
        <function-ref name="set" scoped="" ref="0x4046d018"/>
        <function-ref name="clr" scoped="" ref="0x4046d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046bec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046bec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a360"/>
        <function-ref name="get" scoped="" ref="0x4046a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a520"/>
        <function-ref name="set" scoped="" ref="0x4046a600"/>
        <function-ref name="clr" scoped="" ref="0x4046a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404743e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404743e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404745c0"/>
        <function-ref name="isInput" scoped="" ref="0x404746a0"/>
        <function-ref name="toggle" scoped="" ref="0x40474780"/>
        <function-ref name="isOutput" scoped="" ref="0x40474860"/>
        <function-ref name="get" scoped="" ref="0x40474940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474a20"/>
        <function-ref name="set" scoped="" ref="0x40474b00"/>
        <function-ref name="clr" scoped="" ref="0x40474be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404718f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404718f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40471ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40471c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40471d68"/>
        <function-ref name="get" scoped="" ref="0x40471e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471f28"/>
        <function-ref name="set" scoped="" ref="0x40470018"/>
        <function-ref name="clr" scoped="" ref="0x404700f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046fdd8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a010"/>
        <function-ref name="isInput" scoped="" ref="0x4047a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a2b0"/>
        <function-ref name="get" scoped="" ref="0x4047a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a470"/>
        <function-ref name="set" scoped="" ref="0x4047a550"/>
        <function-ref name="clr" scoped="" ref="0x4047a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404783b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404783b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478588"/>
        <function-ref name="isInput" scoped="" ref="0x40478668"/>
        <function-ref name="toggle" scoped="" ref="0x40478748"/>
        <function-ref name="isOutput" scoped="" ref="0x40478828"/>
        <function-ref name="get" scoped="" ref="0x40478908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404789e8"/>
        <function-ref name="set" scoped="" ref="0x40478ac8"/>
        <function-ref name="clr" scoped="" ref="0x40478ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404758a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475a78"/>
        <function-ref name="isInput" scoped="" ref="0x40475b58"/>
        <function-ref name="toggle" scoped="" ref="0x40475c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40475d18"/>
        <function-ref name="get" scoped="" ref="0x40475df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475ed8"/>
        <function-ref name="set" scoped="" ref="0x40480010"/>
        <function-ref name="clr" scoped="" ref="0x404800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b64d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b64d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f47d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f47d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404b6888" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404b6a60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404b6b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404b6c20"/>
        <function-ref name="actualMicro" scoped="" ref="0x404b6d00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404b6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404cc220" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404b0090" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b0268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TinyOSBoot" ref="0x404cd3f8" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404cd3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404cde20" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x404cd798" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x404cd798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x404cd970"/>
        <function-ref name="init" scoped="" ref="0x404cda50"/>
        <function-ref name="taskLoop" scoped="" ref="0x404cdb30"/>
        <function-ref name="runNextTask" scoped="" ref="0x404cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404cc568" loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404cc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404cc740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404cc820"/>
        <function-ref name="led1On" scoped="" ref="0x404cc900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404cc9e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404ccac0"/>
        <function-ref name="get" scoped="" ref="0x404ccba0"/>
        <function-ref name="led1Off" scoped="" ref="0x404ccc80"/>
        <function-ref name="led2Off" scoped="" ref="0x404cb018"/>
        <function-ref name="set" scoped="" ref="0x404ccd60"/>
        <function-ref name="led0On" scoped="" ref="0x404cce40"/>
        <function-ref name="led2On" scoped="" ref="0x404ccf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x404b0ef0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404b0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404cd0e0"/>
        <function-ref name="reset" scoped="" ref="0x404cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d14e8" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404a0cb0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a0e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404d10e0" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404d10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d12b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSchedulerBoot" ref="0x404ce0f0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
      <component-ref qname="RealMainImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404ce0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404ce2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x403109e0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x403109e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40310bb8"/>
        <function-ref name="stopThread" scoped="" ref="0x40310c98"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40310d78"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40310e58"/>
        <function-ref name="startThread" scoped="" ref="0x402fc010"/>
        <function-ref name="threadInfo" scoped="" ref="0x402fc0f0"/>
        <function-ref name="initThread" scoped="" ref="0x402fc1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x402fc2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x402fc390"/>
        <function-ref name="joinThread" scoped="" ref="0x402fc470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x402fc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fdd58" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fdd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f3010"/>
        <function-ref name="runTask" scoped="" ref="0x402f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x402f54c8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x402f54c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x402f56a0"/>
        <function-ref name="init" scoped="" ref="0x402f5780"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f5860"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f5940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4038ba48" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4038ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4038bc20"/>
        <function-ref name="stopThread" scoped="" ref="0x4038bd00"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4038bde0"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4038bec0"/>
        <function-ref name="startThread" scoped="" ref="0x4038a010"/>
        <function-ref name="threadInfo" scoped="" ref="0x4038a0f0"/>
        <function-ref name="initThread" scoped="" ref="0x4038a1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x4038a2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4038a390"/>
        <function-ref name="joinThread" scoped="" ref="0x4038a470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4038a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038b598" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038b770"/>
        <function-ref name="runTask" scoped="" ref="0x4038b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x40384c68" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x40384c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x40384e40"/>
        <function-ref name="init" scoped="" ref="0x40384f20"/>
        <function-ref name="taskLoop" scoped="" ref="0x4038b018"/>
        <function-ref name="runNextTask" scoped="" ref="0x4038b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403926d8" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403926d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403928b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40392990"/>
        <function-ref name="led1On" scoped="" ref="0x40392a70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40392b50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40392c30"/>
        <function-ref name="get" scoped="" ref="0x40392d10"/>
        <function-ref name="led1Off" scoped="" ref="0x40392df0"/>
        <function-ref name="led2Off" scoped="" ref="0x403891d0"/>
        <function-ref name="set" scoped="" ref="0x40392ed0"/>
        <function-ref name="led0On" scoped="" ref="0x40389010"/>
        <function-ref name="led2On" scoped="" ref="0x403890f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403a7e88" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403a7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403a3070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403a1440" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403a1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403a1618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403a8148" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403a8148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403a8320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40315b60" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40315b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40315d38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40315e18"/>
        <function-ref name="led1On" scoped="" ref="0x40315ef8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403ae010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403ae0f0"/>
        <function-ref name="get" scoped="" ref="0x403ae1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403ae2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403ae630"/>
        <function-ref name="set" scoped="" ref="0x403ae390"/>
        <function-ref name="led0On" scoped="" ref="0x403ae470"/>
        <function-ref name="led2On" scoped="" ref="0x403ae550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x403b89a8" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403b89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8b80"/>
        <function-ref name="isInput" scoped="" ref="0x403b8c60"/>
        <function-ref name="toggle" scoped="" ref="0x403b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x403b8e20"/>
        <function-ref name="get" scoped="" ref="0x403b8f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc010"/>
        <function-ref name="set" scoped="" ref="0x403bc0f0"/>
        <function-ref name="clr" scoped="" ref="0x403bc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b5778" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b5778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x403bc3c0" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403bc3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc598"/>
        <function-ref name="isInput" scoped="" ref="0x403bc678"/>
        <function-ref name="toggle" scoped="" ref="0x403bc758"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc838"/>
        <function-ref name="get" scoped="" ref="0x403bc918"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc9f8"/>
        <function-ref name="set" scoped="" ref="0x403bcad8"/>
        <function-ref name="clr" scoped="" ref="0x403bcbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403b5ac0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403b5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403b5c98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403b5d78"/>
        <function-ref name="led1On" scoped="" ref="0x403b5e58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403b4010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403b40f0"/>
        <function-ref name="get" scoped="" ref="0x403b41d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403b42b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403b4630"/>
        <function-ref name="set" scoped="" ref="0x403b4390"/>
        <function-ref name="led0On" scoped="" ref="0x403b4470"/>
        <function-ref name="led2On" scoped="" ref="0x403b4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x403bcda8" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403bcda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb010"/>
        <function-ref name="isInput" scoped="" ref="0x403bb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403bb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb2b0"/>
        <function-ref name="get" scoped="" ref="0x403bb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb470"/>
        <function-ref name="set" scoped="" ref="0x403bb550"/>
        <function-ref name="clr" scoped="" ref="0x403bb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x403d0010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403d0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d01e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d02c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0488"/>
        <function-ref name="get" scoped="" ref="0x403d0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0648"/>
        <function-ref name="set" scoped="" ref="0x403d0728"/>
        <function-ref name="clr" scoped="" ref="0x403d0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x403d0a18" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403d0a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0bf0"/>
        <function-ref name="isInput" scoped="" ref="0x403d0cd0"/>
        <function-ref name="toggle" scoped="" ref="0x403d0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0e90"/>
        <function-ref name="get" scoped="" ref="0x403cf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf0f0"/>
        <function-ref name="set" scoped="" ref="0x403cf1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x403cfe48" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403cfe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ce050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x403cf4c0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403cf4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf698"/>
        <function-ref name="isInput" scoped="" ref="0x403cf778"/>
        <function-ref name="toggle" scoped="" ref="0x403cf858"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf938"/>
        <function-ref name="get" scoped="" ref="0x403cfa18"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cfaf8"/>
        <function-ref name="set" scoped="" ref="0x403cfbd8"/>
        <function-ref name="clr" scoped="" ref="0x403cfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404cf040" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404cf040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404cf218"/>
        <function-ref name="stopThread" scoped="" ref="0x404cf2f8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404cf3d8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404cf4b8"/>
        <function-ref name="startThread" scoped="" ref="0x404cf598"/>
        <function-ref name="threadInfo" scoped="" ref="0x404cf678"/>
        <function-ref name="initThread" scoped="" ref="0x404cf758"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x404cf838"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404cf918"/>
        <function-ref name="joinThread" scoped="" ref="0x404cf9f8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404cfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404d8a38" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404d8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404d8668" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404d8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404d8840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404d8ea0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d8ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404da0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404da548" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404da548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404da720"/>
        <function-ref name="reset" scoped="" ref="0x404da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404d5010" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404d51e8"/>
        <function-ref name="stopThread" scoped="" ref="0x404d52c8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404d53a8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404d5488"/>
        <function-ref name="startThread" scoped="" ref="0x404d5568"/>
        <function-ref name="threadInfo" scoped="" ref="0x404d5648"/>
        <function-ref name="initThread" scoped="" ref="0x404d5728"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x404d5808"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404d58e8"/>
        <function-ref name="joinThread" scoped="" ref="0x404d59c8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404d5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404d5ca0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404d5ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d5e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x404dc728" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x404dc728"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x404dc900"/>
        <function-ref name="isEmpty" scoped="" ref="0x404dc9e0"/>
        <function-ref name="init" scoped="" ref="0x404dcac0"/>
        <function-ref name="remove" scoped="" ref="0x404dcba0"/>
        <function-ref name="dequeue" scoped="" ref="0x404dcc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitArrayUtils" ref="0x404e7ec8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x404e7ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x404e00c0"/>
        <function-ref name="clrArray" scoped="" ref="0x404e01a0"/>
        <function-ref name="getBit" scoped="" ref="0x404e0280"/>
        <function-ref name="setBit" scoped="" ref="0x404e0360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404e2340" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404e2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404e2518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404e27a8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404e27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404e2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404e04f8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404e04f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x404e06d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e0840" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e0a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e0af8"/>
        <function-ref name="led1On" scoped="" ref="0x404e0bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e0cb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e0d98"/>
        <function-ref name="get" scoped="" ref="0x404e0e78"/>
        <function-ref name="led1Off" scoped="" ref="0x404df010"/>
        <function-ref name="led2Off" scoped="" ref="0x404df390"/>
        <function-ref name="set" scoped="" ref="0x404df0f0"/>
        <function-ref name="led0On" scoped="" ref="0x404df1d0"/>
        <function-ref name="led2On" scoped="" ref="0x404df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404e2e08" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404e2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404e1010"/>
        <function-ref name="reset" scoped="" ref="0x404e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitArrayUtils" ref="0x404d6730" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BitArrayUtilsC.nc">
      <component-ref qname="BitArrayUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x404d6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x404d6908"/>
        <function-ref name="clrArray" scoped="" ref="0x404d69e8"/>
        <function-ref name="getBit" scoped="" ref="0x404d6ac8"/>
        <function-ref name="setBit" scoped="" ref="0x404d6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x40556838" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <component-ref qname="ThreadQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40556a10"/>
        <function-ref name="isEmpty" scoped="" ref="0x40556af0"/>
        <function-ref name="init" scoped="" ref="0x40556bd0"/>
        <function-ref name="remove" scoped="" ref="0x40556cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x40556d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkedList" ref="0x40579680" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/LinkedListC.nc">
      <component-ref qname="LinkedListC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40579858"/>
        <function-ref name="getLast" scoped="" ref="0x40579938"/>
        <function-ref name="indexOf" scoped="" ref="0x40579a18"/>
        <function-ref name="addAfter" scoped="" ref="0x40579af8"/>
        <function-ref name="addLast" scoped="" ref="0x40579bd8"/>
        <function-ref name="removeAt" scoped="" ref="0x40579cb8"/>
        <function-ref name="init" scoped="" ref="0x40579d98"/>
        <function-ref name="addAt" scoped="" ref="0x40579e78"/>
        <function-ref name="addFirst" scoped="" ref="0x40568010"/>
        <function-ref name="remove" scoped="" ref="0x405680f0"/>
        <function-ref name="removeBefore" scoped="" ref="0x405681d0"/>
        <function-ref name="getAfter" scoped="" ref="0x405682b0"/>
        <function-ref name="getAt" scoped="" ref="0x40568390"/>
        <function-ref name="removeLast" scoped="" ref="0x405684f0"/>
        <function-ref name="getBefore" scoped="" ref="0x405685d0"/>
        <function-ref name="addBefore" scoped="" ref="0x405686b0"/>
        <function-ref name="removeAfter" scoped="" ref="0x40568790"/>
        <function-ref name="getFirst" scoped="" ref="0x40568870"/>
        <function-ref name="removeFirst" scoped="" ref="0x40568950"/>
        <function-ref name="size" scoped="" ref="0x40568a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x4055a700" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x4055a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4055a8d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4055a9b8"/>
        <function-ref name="init" scoped="" ref="0x4055aa98"/>
        <function-ref name="remove" scoped="" ref="0x4055ab78"/>
        <function-ref name="dequeue" scoped="" ref="0x4055ac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x4055ae40" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x4055ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405af050"/>
        <function-ref name="getLast" scoped="" ref="0x405af130"/>
        <function-ref name="indexOf" scoped="" ref="0x405af210"/>
        <function-ref name="addAfter" scoped="" ref="0x405af2f0"/>
        <function-ref name="addLast" scoped="" ref="0x405af3d0"/>
        <function-ref name="removeAt" scoped="" ref="0x405af4b0"/>
        <function-ref name="init" scoped="" ref="0x405af590"/>
        <function-ref name="addAt" scoped="" ref="0x405af670"/>
        <function-ref name="addFirst" scoped="" ref="0x405af750"/>
        <function-ref name="remove" scoped="" ref="0x405af830"/>
        <function-ref name="removeBefore" scoped="" ref="0x405af910"/>
        <function-ref name="getAfter" scoped="" ref="0x405af9f0"/>
        <function-ref name="getAt" scoped="" ref="0x405afad0"/>
        <function-ref name="removeLast" scoped="" ref="0x405afc30"/>
        <function-ref name="getBefore" scoped="" ref="0x405afd10"/>
        <function-ref name="addBefore" scoped="" ref="0x405afdf0"/>
        <function-ref name="removeAfter" scoped="" ref="0x405afed0"/>
        <function-ref name="getFirst" scoped="" ref="0x405ae010"/>
        <function-ref name="removeFirst" scoped="" ref="0x405ae0f0"/>
        <function-ref name="size" scoped="" ref="0x405ae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x405b6f18" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x405b6f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x405b5108"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x405b51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Coroutine" ref="0x405c4720" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Coroutine" scoped="" ref="0x405c4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x405c48f8"/>
        <function-ref name="pause" scoped="" ref="0x405c49d8"/>
        <function-ref name="resume" scoped="" ref="0x405c4ab8"/>
        <function-ref name="join" scoped="" ref="0x405c4b98"/>
        <function-ref name="run" scoped="" ref="0x405c4c78"/>
        <function-ref name="start" scoped="" ref="0x405c4d58"/>
        <function-ref name="sleep" scoped="" ref="0x405c4e38"/>
        <function-ref name="stop" scoped="" ref="0x405c4f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405c0cf8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405c0ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x405c0678" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x405c0678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x405c0850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x405b56b0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405b56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405b5888"/>
        <function-ref name="reset" scoped="" ref="0x405b5968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x405bea98" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x405bea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x405bec70"/>
        <function-ref name="stopThread" scoped="" ref="0x405bed50"/>
        <function-ref name="currentThreadId" scoped="" ref="0x405bee30"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x405bef10"/>
        <function-ref name="startThread" scoped="" ref="0x405bd010"/>
        <function-ref name="threadInfo" scoped="" ref="0x405bd0f0"/>
        <function-ref name="initThread" scoped="" ref="0x405bd1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x405bd2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x405bd390"/>
        <function-ref name="joinThread" scoped="" ref="0x405bd470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x405bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x405be5c8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x405be5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x405be7a0"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x405be880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Coroutine" ref="0x405c2898" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Coroutine" scoped="" ref="0x405c2898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x405c2a70"/>
        <function-ref name="pause" scoped="" ref="0x405c2b50"/>
        <function-ref name="resume" scoped="" ref="0x405c2c30"/>
        <function-ref name="join" scoped="" ref="0x405c2d10"/>
        <function-ref name="run" scoped="" ref="0x405c2df0"/>
        <function-ref name="start" scoped="" ref="0x405c2ed0"/>
        <function-ref name="sleep" scoped="" ref="0x405be010"/>
        <function-ref name="stop" scoped="" ref="0x405be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405cc4b8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405cc4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405cc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405cc800" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405cc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405cc9d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405ccab8"/>
        <function-ref name="led1On" scoped="" ref="0x405ccb98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405ccc78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405ccd58"/>
        <function-ref name="get" scoped="" ref="0x405cce38"/>
        <function-ref name="led1Off" scoped="" ref="0x405ccf18"/>
        <function-ref name="led2Off" scoped="" ref="0x405cb2b0"/>
        <function-ref name="set" scoped="" ref="0x405cb010"/>
        <function-ref name="led0On" scoped="" ref="0x405cb0f0"/>
        <function-ref name="led2On" scoped="" ref="0x405cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x405cedd8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x405cedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x405cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSleep" ref="0x405ce010" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x405ce670" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405ce848"/>
        <function-ref name="reset" scoped="" ref="0x405ce928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x405d83e0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405d83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405d85b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x405d8b48" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x405d8b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405d8d20"/>
        <function-ref name="reset" scoped="" ref="0x405d8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x405c1c00" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405c1dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x405e93c0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e9598"/>
        <function-ref name="reset" scoped="" ref="0x405e9678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x405e4238" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405e4238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e4410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x405e49a0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x405e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e4b78"/>
        <function-ref name="reset" scoped="" ref="0x405e4c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405e3958" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405e3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x405e6a78" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405e6a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x405e31f8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e31f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e33d0"/>
        <function-ref name="reset" scoped="" ref="0x405e34b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405e3ca0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405e3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405e3e78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405e2010"/>
        <function-ref name="led1On" scoped="" ref="0x405e20f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405e21d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405e22b0"/>
        <function-ref name="get" scoped="" ref="0x405e2390"/>
        <function-ref name="led1Off" scoped="" ref="0x405e2470"/>
        <function-ref name="led2Off" scoped="" ref="0x405e27f0"/>
        <function-ref name="set" scoped="" ref="0x405e2550"/>
        <function-ref name="led0On" scoped="" ref="0x405e2630"/>
        <function-ref name="led2On" scoped="" ref="0x405e2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x405e6238" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405e6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e6410"/>
        <function-ref name="reset" scoped="" ref="0x405e64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x405f81d0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <component-ref qname="ThreadSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405f83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x406007c0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <component-ref qname="ThreadTimersC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405f4330"/>
        <function-ref name="fired" scoped="" ref="0x405f5560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405f5c68"/>
        <function-ref name="isOneShot" scoped="" ref="0x405f5a10"/>
        <function-ref name="getdt" scoped="" ref="0x405f47e0"/>
        <function-ref name="gett0" scoped="" ref="0x405f4588"/>
        <function-ref name="isRunning" scoped="" ref="0x405f57b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40600de8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405f4010"/>
        <function-ref name="startOneShot" scoped="" ref="0x405f5088"/>
        <function-ref name="stop" scoped="" ref="0x405f5308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405fe660" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ThreadTimersC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405fe660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40705170"/>
        <function-ref name="fired" scoped="" ref="0x405fd3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405fdb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405fd8a8"/>
        <function-ref name="getdt" scoped="" ref="0x40705620"/>
        <function-ref name="gett0" scoped="" ref="0x407053c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405fd650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405fec88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405fde20"/>
        <function-ref name="startOneShot" scoped="" ref="0x405fef08"/>
        <function-ref name="stop" scoped="" ref="0x405fd1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40608010" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40606b00"/>
        <function-ref name="fired" scoped="" ref="0x40608d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406064c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40606268"/>
        <function-ref name="getdt" scoped="" ref="0x40605010"/>
        <function-ref name="gett0" scoped="" ref="0x40606d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40606010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40608638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406067e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406088b8"/>
        <function-ref name="stop" scoped="" ref="0x40608b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40614100" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40612be0"/>
        <function-ref name="fired" scoped="" ref="0x40614e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406125a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40612348"/>
        <function-ref name="getdt" scoped="" ref="0x406110b8"/>
        <function-ref name="gett0" scoped="" ref="0x40612e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406120f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40614728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406128c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406149a8"/>
        <function-ref name="stop" scoped="" ref="0x40614c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406100d0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406100d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40610718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40605890" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40605890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40605a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40626dc8" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40617530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40617a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406177a8"/>
        <function-ref name="overflow" scoped="" ref="0x40617c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4060e7d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4060e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4060e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4061d1c8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40618690"/>
        <function-ref name="fired" scoped="" ref="0x4061de30"/>
        <function-ref name="startAt" scoped="" ref="0x40618350"/>
        <function-ref name="isRunning" scoped="" ref="0x406180d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40618908"/>
        <function-ref name="start" scoped="" ref="0x4061d918"/>
        <function-ref name="stop" scoped="" ref="0x4061dbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40623dd0" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bf350"/>
        <function-ref name="fired" scoped="" ref="0x406c0a88"/>
        <function-ref name="startAt" scoped="" ref="0x406bf010"/>
        <function-ref name="isRunning" scoped="" ref="0x406c0d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bf5c8"/>
        <function-ref name="start" scoped="" ref="0x406c0570"/>
        <function-ref name="stop" scoped="" ref="0x406c0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40623998" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40623998"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f45d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f45d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40623b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406bf8f8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406be068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406be558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406be2e0"/>
        <function-ref name="overflow" scoped="" ref="0x406be7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40c87b60" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40c87b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40c87d38"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40c87e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40c87ef8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40c86010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40c860f0"/>
        <function-ref name="setControl" scoped="" ref="0x40c861d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c5dd18" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c5dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c5a1e8"/>
        <function-ref name="fired" scoped="" ref="0x40c5b990"/>
        <function-ref name="startAt" scoped="" ref="0x40c5be80"/>
        <function-ref name="isRunning" scoped="" ref="0x40c5bc08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c5a460"/>
        <function-ref name="start" scoped="" ref="0x40c5b478"/>
        <function-ref name="stop" scoped="" ref="0x40c5b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c5d8e0" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c5d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40c5a790" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c5a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c5aee0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c583e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c58170"/>
        <function-ref name="overflow" scoped="" ref="0x40c58660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40c84dc0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40c84dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40c83010"/>
        <function-ref name="compareBusy" scoped="" ref="0x40c830f0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40c831d0"/>
        <function-ref name="countBusy" scoped="" ref="0x40c832b0"/>
        <function-ref name="getAssr" scoped="" ref="0x40c83390"/>
        <function-ref name="setAssr" scoped="" ref="0x40c83470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40c863c0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40c863c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40c84918"/>
        <function-ref name="fired" scoped="" ref="0x40c86f20"/>
        <function-ref name="get" scoped="" ref="0x40c86a08"/>
        <function-ref name="reset" scoped="" ref="0x40c841b0"/>
        <function-ref name="isOn" scoped="" ref="0x40c84b90"/>
        <function-ref name="set" scoped="" ref="0x40c86c80"/>
        <function-ref name="start" scoped="" ref="0x40c84428"/>
        <function-ref name="stop" scoped="" ref="0x40c846a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c58950" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c58950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40c87418"/>
        <function-ref name="test" scoped="" ref="0x40c88f08"/>
        <function-ref name="get" scoped="" ref="0x40c88010"/>
        <function-ref name="setScale" scoped="" ref="0x40c87690"/>
        <function-ref name="getScale" scoped="" ref="0x40c87930"/>
        <function-ref name="reset" scoped="" ref="0x40c887a0"/>
        <function-ref name="overflow" scoped="" ref="0x40c88528"/>
        <function-ref name="isOn" scoped="" ref="0x40c871a0"/>
        <function-ref name="set" scoped="" ref="0x40c88288"/>
        <function-ref name="start" scoped="" ref="0x40c88a18"/>
        <function-ref name="stop" scoped="" ref="0x40c88c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40665010" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40665010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406651e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406652c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406653a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40665488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40665568"/>
        <function-ref name="setControl" scoped="" ref="0x40665648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406764f8" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406766d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x406767b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40676890"/>
        <function-ref name="countBusy" scoped="" ref="0x40676970"/>
        <function-ref name="getAssr" scoped="" ref="0x40676a50"/>
        <function-ref name="setAssr" scoped="" ref="0x40676b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40665970" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40665970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40678f08"/>
        <function-ref name="fired" scoped="" ref="0x40678528"/>
        <function-ref name="get" scoped="" ref="0x40678010"/>
        <function-ref name="reset" scoped="" ref="0x406787a0"/>
        <function-ref name="isOn" scoped="" ref="0x406761a0"/>
        <function-ref name="set" scoped="" ref="0x40678288"/>
        <function-ref name="start" scoped="" ref="0x40678a18"/>
        <function-ref name="stop" scoped="" ref="0x40678c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4066bcb8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40666778"/>
        <function-ref name="test" scoped="" ref="0x40666288"/>
        <function-ref name="get" scoped="" ref="0x40667318"/>
        <function-ref name="setScale" scoped="" ref="0x406669f0"/>
        <function-ref name="getScale" scoped="" ref="0x40666c90"/>
        <function-ref name="reset" scoped="" ref="0x40667aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40667830"/>
        <function-ref name="isOn" scoped="" ref="0x40666500"/>
        <function-ref name="set" scoped="" ref="0x40667590"/>
        <function-ref name="start" scoped="" ref="0x40667d20"/>
        <function-ref name="stop" scoped="" ref="0x40666010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406718b0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406718b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40671a88"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40671b68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40671c48"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40671d28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40671e08"/>
        <function-ref name="setControl" scoped="" ref="0x40671ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40682ce0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40682ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40682eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x4067e178" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x4067e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x4067e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406811a8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406811a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40681380"/>
        <function-ref name="compareBusy" scoped="" ref="0x40681460"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40681540"/>
        <function-ref name="countBusy" scoped="" ref="0x40681620"/>
        <function-ref name="getAssr" scoped="" ref="0x40681700"/>
        <function-ref name="setAssr" scoped="" ref="0x406817e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4066f248" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4066f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406827b0"/>
        <function-ref name="fired" scoped="" ref="0x4066fda8"/>
        <function-ref name="get" scoped="" ref="0x4066f890"/>
        <function-ref name="reset" scoped="" ref="0x40682048"/>
        <function-ref name="isOn" scoped="" ref="0x40682a28"/>
        <function-ref name="set" scoped="" ref="0x4066fb08"/>
        <function-ref name="start" scoped="" ref="0x406822c0"/>
        <function-ref name="stop" scoped="" ref="0x40682538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406755d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40671048"/>
        <function-ref name="test" scoped="" ref="0x40672b30"/>
        <function-ref name="get" scoped="" ref="0x40675c18"/>
        <function-ref name="setScale" scoped="" ref="0x406712c0"/>
        <function-ref name="getScale" scoped="" ref="0x40671560"/>
        <function-ref name="reset" scoped="" ref="0x406723c8"/>
        <function-ref name="overflow" scoped="" ref="0x40672150"/>
        <function-ref name="isOn" scoped="" ref="0x40672da8"/>
        <function-ref name="set" scoped="" ref="0x40675e90"/>
        <function-ref name="start" scoped="" ref="0x40672640"/>
        <function-ref name="stop" scoped="" ref="0x406728b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x40673cf0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <component-ref qname="PlatformInterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x40673ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x406b04e8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x406b04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x406b06c0"/>
        <function-ref name="stopThread" scoped="" ref="0x406b07a0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x406b0880"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x406b0960"/>
        <function-ref name="startThread" scoped="" ref="0x406b0a40"/>
        <function-ref name="threadInfo" scoped="" ref="0x406b0b20"/>
        <function-ref name="initThread" scoped="" ref="0x406b0c00"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x406b0ce0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x406b0dc0"/>
        <function-ref name="joinThread" scoped="" ref="0x406b0ea0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x406af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x406b3aa8" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x406b3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x406b3c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x406b3e88" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x406b3e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x406b0070"/>
        <function-ref name="init" scoped="" ref="0x406b0150"/>
        <function-ref name="taskLoop" scoped="" ref="0x406b0230"/>
        <function-ref name="runNextTask" scoped="" ref="0x406b0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406af180" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406af180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406af358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406af438"/>
        <function-ref name="led1On" scoped="" ref="0x406af518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406af5f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406af6d8"/>
        <function-ref name="get" scoped="" ref="0x406af7b8"/>
        <function-ref name="led1Off" scoped="" ref="0x406af898"/>
        <function-ref name="led2Off" scoped="" ref="0x406afc18"/>
        <function-ref name="set" scoped="" ref="0x406af978"/>
        <function-ref name="led0On" scoped="" ref="0x406afa58"/>
        <function-ref name="led2On" scoped="" ref="0x406afb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406cf9a8" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406cf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406cfb80"/>
        <function-ref name="runTask" scoped="" ref="0x406cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406d1010" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cf4e0"/>
        <function-ref name="fired" scoped="" ref="0x406d1c78"/>
        <function-ref name="startAt" scoped="" ref="0x406cf1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x406d1ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406cf758"/>
        <function-ref name="start" scoped="" ref="0x406d1760"/>
        <function-ref name="stop" scoped="" ref="0x406d1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406bbcb0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406d27c0"/>
        <function-ref name="fired" scoped="" ref="0x406d3a40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406d2180"/>
        <function-ref name="isOneShot" scoped="" ref="0x406d3ef0"/>
        <function-ref name="getdt" scoped="" ref="0x406d2c70"/>
        <function-ref name="gett0" scoped="" ref="0x406d2a18"/>
        <function-ref name="isRunning" scoped="" ref="0x406d3c98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d32e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406d24a0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d3568"/>
        <function-ref name="stop" scoped="" ref="0x406d37e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406fa050" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406fa050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406fa228"/>
        <function-ref name="runTask" scoped="" ref="0x406fa308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406fee30" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406fee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fb920"/>
        <function-ref name="fired" scoped="" ref="0x406fcbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fb2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fb088"/>
        <function-ref name="getdt" scoped="" ref="0x406fbdd0"/>
        <function-ref name="gett0" scoped="" ref="0x406fbb78"/>
        <function-ref name="isRunning" scoped="" ref="0x406fce18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406fc468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fb600"/>
        <function-ref name="startOneShot" scoped="" ref="0x406fc6e8"/>
        <function-ref name="stop" scoped="" ref="0x406fc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e2a60" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fe670"/>
        <function-ref name="fired" scoped="" ref="0x40700840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fe010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40700d10"/>
        <function-ref name="getdt" scoped="" ref="0x406feb40"/>
        <function-ref name="gett0" scoped="" ref="0x406fe8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40700aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407000b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fe340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40700348"/>
        <function-ref name="stop" scoped="" ref="0x407005d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406f9460" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406f9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406f9df8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406f9df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070e570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070ea60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070e7e8"/>
        <function-ref name="overflow" scoped="" ref="0x4070ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40713010" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40713010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407131e8"/>
        <function-ref name="runTask" scoped="" ref="0x407132c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40717d28" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40717d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407158a8"/>
        <function-ref name="fired" scoped="" ref="0x40716ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40715268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40715010"/>
        <function-ref name="getdt" scoped="" ref="0x40715d58"/>
        <function-ref name="gett0" scoped="" ref="0x40715b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40716d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40716370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40715588"/>
        <function-ref name="startOneShot" scoped="" ref="0x407165f0"/>
        <function-ref name="stop" scoped="" ref="0x40716870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40704918" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40704918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40717568"/>
        <function-ref name="fired" scoped="" ref="0x40719798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40719ed0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40719c68"/>
        <function-ref name="getdt" scoped="" ref="0x40717a38"/>
        <function-ref name="gett0" scoped="" ref="0x407177d0"/>
        <function-ref name="isRunning" scoped="" ref="0x40719a00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40719010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40717238"/>
        <function-ref name="startOneShot" scoped="" ref="0x407192a0"/>
        <function-ref name="stop" scoped="" ref="0x40719530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4070f378" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4070f378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4070f550"/>
        <function-ref name="stopThread" scoped="" ref="0x4070f630"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4070f710"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4070f7f0"/>
        <function-ref name="startThread" scoped="" ref="0x4070f8d0"/>
        <function-ref name="threadInfo" scoped="" ref="0x4070f9b0"/>
        <function-ref name="initThread" scoped="" ref="0x4070fa90"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x4070fb70"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4070fc50"/>
        <function-ref name="joinThread" scoped="" ref="0x4070fd30"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4070fe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMilli" ref="0x407243f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40721ed0"/>
        <function-ref name="fired" scoped="" ref="0x40721188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40721890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40721638"/>
        <function-ref name="getdt" scoped="" ref="0x407203a8"/>
        <function-ref name="gett0" scoped="" ref="0x40720150"/>
        <function-ref name="isRunning" scoped="" ref="0x407213e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40724a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40721bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40724c98"/>
        <function-ref name="stop" scoped="" ref="0x40724f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40723ea0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40723ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x4070f0c0"/>
        <function-ref name="start" scoped="" ref="0x4070f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407205e8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407205e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407207c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407208a0"/>
        <function-ref name="led1On" scoped="" ref="0x40720980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40720a60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40720b40"/>
        <function-ref name="get" scoped="" ref="0x40720c20"/>
        <function-ref name="led1Off" scoped="" ref="0x40720d00"/>
        <function-ref name="led2Off" scoped="" ref="0x4071f0f0"/>
        <function-ref name="set" scoped="" ref="0x40720de0"/>
        <function-ref name="led0On" scoped="" ref="0x40720ec0"/>
        <function-ref name="led2On" scoped="" ref="0x4071f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x405f7698" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405f7698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405f7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x405f6b38" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <component-ref qname="SystemCallC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x405f6d10"/>
        <function-ref name="start" scoped="" ref="0x405f6df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4072e980" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4072e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4072eb58"/>
        <function-ref name="stopThread" scoped="" ref="0x4072ec38"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4072ed18"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4072edf8"/>
        <function-ref name="startThread" scoped="" ref="0x4072eed8"/>
        <function-ref name="threadInfo" scoped="" ref="0x4072b010"/>
        <function-ref name="initThread" scoped="" ref="0x4072b0f0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x4072b1d0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4072b2b0"/>
        <function-ref name="joinThread" scoped="" ref="0x4072b390"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4072b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x4072e4b0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x4072e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x4072e688"/>
        <function-ref name="start" scoped="" ref="0x4072e768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="threadTask" ref="0x4072a010" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="threadTask" scoped="" ref="0x4072a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4072a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4072a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Produtor" ref="0x40738088" loc="4:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Produtor" scoped="" ref="0x40738088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x40738260"/>
        <function-ref name="pause" scoped="" ref="0x40738340"/>
        <function-ref name="resume" scoped="" ref="0x40738420"/>
        <function-ref name="join" scoped="" ref="0x40738500"/>
        <function-ref name="run" scoped="" ref="0x407385e0"/>
        <function-ref name="start" scoped="" ref="0x407386c0"/>
        <function-ref name="sleep" scoped="" ref="0x407387a0"/>
        <function-ref name="stop" scoped="" ref="0x40738880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x40763b50" loc="9:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x40763b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40763d28"/>
        <function-ref name="stop" scoped="" ref="0x40763e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404a3c68" loc="3:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a3e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40777af0" loc="11:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40777af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40777cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40777da8"/>
        <function-ref name="getPayload" scoped="" ref="0x40777e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40734010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407340f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Consumidor" ref="0x40738aa8" loc="5:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Consumidor" scoped="" ref="0x40738aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x40738c80"/>
        <function-ref name="pause" scoped="" ref="0x40738d60"/>
        <function-ref name="resume" scoped="" ref="0x40738e40"/>
        <function-ref name="join" scoped="" ref="0x40738f20"/>
        <function-ref name="run" scoped="" ref="0x40737018"/>
        <function-ref name="start" scoped="" ref="0x407370f8"/>
        <function-ref name="sleep" scoped="" ref="0x407371d8"/>
        <function-ref name="stop" scoped="" ref="0x407372b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockingAMSend" ref="0x4077b8e0" loc="10:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x4077b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4077bab8"/>
        <function-ref name="getPayload" scoped="" ref="0x4077bb98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSender" ref="0x407374f8" loc="6:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSender" scoped="" ref="0x407374f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x407376d0"/>
        <function-ref name="pause" scoped="" ref="0x407377b0"/>
        <function-ref name="resume" scoped="" ref="0x40737890"/>
        <function-ref name="join" scoped="" ref="0x40737970"/>
        <function-ref name="run" scoped="" ref="0x40737a50"/>
        <function-ref name="start" scoped="" ref="0x40737b30"/>
        <function-ref name="sleep" scoped="" ref="0x40737c10"/>
        <function-ref name="stop" scoped="" ref="0x40737cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40737e60" loc="7:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40737e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40736050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40736130"/>
        <function-ref name="led1On" scoped="" ref="0x40736210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407362f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407363d0"/>
        <function-ref name="get" scoped="" ref="0x407364b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40736590"/>
        <function-ref name="led2Off" scoped="" ref="0x40736910"/>
        <function-ref name="set" scoped="" ref="0x40736670"/>
        <function-ref name="led0On" scoped="" ref="0x40736750"/>
        <function-ref name="led2On" scoped="" ref="0x40736830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40734488" loc="13:BenchmarkC.nc">
      <component-ref qname="BenchmarkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40734488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40734bd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407620d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40734e50"/>
        <function-ref name="overflow" scoped="" ref="0x40762350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x40781e08" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x40781e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x4079d010"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x4079d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Coroutine" ref="0x407814d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Coroutine" scoped="" ref="0x407814d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x407816a8"/>
        <function-ref name="pause" scoped="" ref="0x40781788"/>
        <function-ref name="resume" scoped="" ref="0x40781868"/>
        <function-ref name="join" scoped="" ref="0x40781948"/>
        <function-ref name="run" scoped="" ref="0x40781a28"/>
        <function-ref name="start" scoped="" ref="0x40781b08"/>
        <function-ref name="sleep" scoped="" ref="0x40781be8"/>
        <function-ref name="stop" scoped="" ref="0x40781cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x4079d230" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Produtor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x4079d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4079d408"/>
        <function-ref name="reset" scoped="" ref="0x4079d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cc3a48" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cc3a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cc1578" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cc1578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cc1750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cc1830"/>
        <function-ref name="led1On" scoped="" ref="0x40cc1910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cc19f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cc1ad0"/>
        <function-ref name="get" scoped="" ref="0x40cc1bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x40cc1c90"/>
        <function-ref name="led0On" scoped="" ref="0x40cc00f0"/>
        <function-ref name="set" scoped="" ref="0x40cc1e50"/>
        <function-ref name="led2On" scoped="" ref="0x40cc1d70"/>
        <function-ref name="led2Off" scoped="" ref="0x40cc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40cc1230" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40cc1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40cc1408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40cc3d60" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Produtor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40cc3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc1010"/>
        <function-ref name="reset" scoped="" ref="0x40cc10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x4079cd60" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x4079cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x4079b010"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x4079b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Coroutine" ref="0x4079c428" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Coroutine" scoped="" ref="0x4079c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x4079c600"/>
        <function-ref name="pause" scoped="" ref="0x4079c6e0"/>
        <function-ref name="resume" scoped="" ref="0x4079c7c0"/>
        <function-ref name="join" scoped="" ref="0x4079c8a0"/>
        <function-ref name="run" scoped="" ref="0x4079c980"/>
        <function-ref name="start" scoped="" ref="0x4079ca60"/>
        <function-ref name="sleep" scoped="" ref="0x4079cb40"/>
        <function-ref name="stop" scoped="" ref="0x4079cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x4079b230" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.Consumidor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x4079b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4079b408"/>
        <function-ref name="reset" scoped="" ref="0x4079b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cb5370" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cb5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cb5548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cb5dc8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cb5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ce2010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ce20f0"/>
        <function-ref name="led1On" scoped="" ref="0x40ce21d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ce22b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ce2390"/>
        <function-ref name="get" scoped="" ref="0x40ce2470"/>
        <function-ref name="led1Off" scoped="" ref="0x40ce2550"/>
        <function-ref name="led0On" scoped="" ref="0x40ce28d0"/>
        <function-ref name="set" scoped="" ref="0x40ce2710"/>
        <function-ref name="led2On" scoped="" ref="0x40ce2630"/>
        <function-ref name="led2Off" scoped="" ref="0x40ce27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40cb5a80" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40cb5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40cb5c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40cb5688" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.Consumidor.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40cb5688"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cb5860"/>
        <function-ref name="reset" scoped="" ref="0x40cb5940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x4079ad80" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x4079ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x40799010"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x407990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Coroutine" ref="0x4079a448" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Coroutine" scoped="" ref="0x4079a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Coroutine"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x4079a620"/>
        <function-ref name="pause" scoped="" ref="0x4079a700"/>
        <function-ref name="resume" scoped="" ref="0x4079a7e0"/>
        <function-ref name="join" scoped="" ref="0x4079a8c0"/>
        <function-ref name="run" scoped="" ref="0x4079a9a0"/>
        <function-ref name="start" scoped="" ref="0x4079aa80"/>
        <function-ref name="sleep" scoped="" ref="0x4079ab60"/>
        <function-ref name="stop" scoped="" ref="0x4079ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40799230" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/CoroutineC.nc">
      <component-ref qname="BenchmarkAppC.SerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40799230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40799408"/>
        <function-ref name="reset" scoped="" ref="0x407994e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cd7a88" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cd7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cd6578" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cd6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cd6750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cd6830"/>
        <function-ref name="led1On" scoped="" ref="0x40cd6910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cd69f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cd6ad0"/>
        <function-ref name="get" scoped="" ref="0x40cd6bb0"/>
        <function-ref name="led1Off" scoped="" ref="0x40cd6c90"/>
        <function-ref name="led0On" scoped="" ref="0x40cd40f0"/>
        <function-ref name="set" scoped="" ref="0x40cd6e50"/>
        <function-ref name="led2On" scoped="" ref="0x40cd6d70"/>
        <function-ref name="led2Off" scoped="" ref="0x40cd4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x40cd6230" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x40cd6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x40cd6408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40cd7da0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BenchmarkAppC.SerialSender.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40cd7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cd6010"/>
        <function-ref name="reset" scoped="" ref="0x40cd60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407963c0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407963c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40796b10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40795010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40796d88"/>
        <function-ref name="overflow" scoped="" ref="0x40795288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40795dd0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40795dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TThree" ref="0x40380460"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a9570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a9a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a97e8"/>
        <function-ref name="overflow" scoped="" ref="0x407a9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407b55d8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407b55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407b57b0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x407b5890"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407b5970"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x407b5a50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407b5b30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407b5c10"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407b5cf0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x407b5dd0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407b5eb0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x407a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407b04b0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407b04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407af010"/>
        <function-ref name="test" scoped="" ref="0x407b3a50"/>
        <function-ref name="get" scoped="" ref="0x407b0af8"/>
        <function-ref name="captured" scoped="" ref="0x407b3048"/>
        <function-ref name="reset" scoped="" ref="0x407b32e8"/>
        <function-ref name="isOn" scoped="" ref="0x407b3cc8"/>
        <function-ref name="set" scoped="" ref="0x407b0d70"/>
        <function-ref name="start" scoped="" ref="0x407b3560"/>
        <function-ref name="stop" scoped="" ref="0x407b37d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407af720" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407af720"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407aec90"/>
        <function-ref name="fired" scoped="" ref="0x407ae2b0"/>
        <function-ref name="get" scoped="" ref="0x407afd68"/>
        <function-ref name="reset" scoped="" ref="0x407ae528"/>
        <function-ref name="isOn" scoped="" ref="0x407aef08"/>
        <function-ref name="set" scoped="" ref="0x407ae010"/>
        <function-ref name="start" scoped="" ref="0x407ae7a0"/>
        <function-ref name="stop" scoped="" ref="0x407aea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407a8740" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407a31a0"/>
        <function-ref name="test" scoped="" ref="0x407a4c90"/>
        <function-ref name="get" scoped="" ref="0x407a8d88"/>
        <function-ref name="setScale" scoped="" ref="0x407a3418"/>
        <function-ref name="getScale" scoped="" ref="0x407a36b8"/>
        <function-ref name="reset" scoped="" ref="0x407a4528"/>
        <function-ref name="overflow" scoped="" ref="0x407a42b0"/>
        <function-ref name="isOn" scoped="" ref="0x407a4f08"/>
        <function-ref name="set" scoped="" ref="0x407a4010"/>
        <function-ref name="start" scoped="" ref="0x407a47a0"/>
        <function-ref name="stop" scoped="" ref="0x407a4a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407c2c90" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407c2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407c2e68"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x407c1010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407c10f0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x407c11d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407c12b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407c1390"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x407c1470"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x407c1550"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x407c1630"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x407c1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x407be940" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x407be940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407bdf08"/>
        <function-ref name="fired" scoped="" ref="0x407bd528"/>
        <function-ref name="get" scoped="" ref="0x407bd010"/>
        <function-ref name="reset" scoped="" ref="0x407bd7a0"/>
        <function-ref name="isOn" scoped="" ref="0x407bc1a0"/>
        <function-ref name="set" scoped="" ref="0x407bd288"/>
        <function-ref name="start" scoped="" ref="0x407bda18"/>
        <function-ref name="stop" scoped="" ref="0x407bdc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407c1a48" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407c1a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407be500"/>
        <function-ref name="test" scoped="" ref="0x407be010"/>
        <function-ref name="get" scoped="" ref="0x407c00a8"/>
        <function-ref name="captured" scoped="" ref="0x407c05c0"/>
        <function-ref name="reset" scoped="" ref="0x407c0860"/>
        <function-ref name="isOn" scoped="" ref="0x407be288"/>
        <function-ref name="set" scoped="" ref="0x407c0320"/>
        <function-ref name="start" scoped="" ref="0x407c0ad8"/>
        <function-ref name="stop" scoped="" ref="0x407c0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x407d2ce0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x407d2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x407d2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407bc5b8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407bc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407bab10"/>
        <function-ref name="fired" scoped="" ref="0x407ba130"/>
        <function-ref name="get" scoped="" ref="0x407bcc00"/>
        <function-ref name="reset" scoped="" ref="0x407ba3a8"/>
        <function-ref name="isOn" scoped="" ref="0x407bad88"/>
        <function-ref name="set" scoped="" ref="0x407bce78"/>
        <function-ref name="start" scoped="" ref="0x407ba620"/>
        <function-ref name="stop" scoped="" ref="0x407ba898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x407b91c0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x407b91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407d2778"/>
        <function-ref name="fired" scoped="" ref="0x407b9d20"/>
        <function-ref name="get" scoped="" ref="0x407b9808"/>
        <function-ref name="reset" scoped="" ref="0x407d2010"/>
        <function-ref name="isOn" scoped="" ref="0x407d29f0"/>
        <function-ref name="set" scoped="" ref="0x407b9a80"/>
        <function-ref name="start" scoped="" ref="0x407d2288"/>
        <function-ref name="stop" scoped="" ref="0x407d2500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407ad950" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407ad950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407c2418"/>
        <function-ref name="test" scoped="" ref="0x407c3f08"/>
        <function-ref name="get" scoped="" ref="0x407c3010"/>
        <function-ref name="setScale" scoped="" ref="0x407c2690"/>
        <function-ref name="getScale" scoped="" ref="0x407c2930"/>
        <function-ref name="reset" scoped="" ref="0x407c37a0"/>
        <function-ref name="overflow" scoped="" ref="0x407c3528"/>
        <function-ref name="isOn" scoped="" ref="0x407c21a0"/>
        <function-ref name="set" scoped="" ref="0x407c3288"/>
        <function-ref name="start" scoped="" ref="0x407c3a18"/>
        <function-ref name="stop" scoped="" ref="0x407c3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40820040" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40820040"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f45d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f45d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40820218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40820428" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40820428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4081fee0"/>
        <function-ref name="test" scoped="" ref="0x4081f9f0"/>
        <function-ref name="get" scoped="" ref="0x40820a70"/>
        <function-ref name="setScale" scoped="" ref="0x40817170"/>
        <function-ref name="getScale" scoped="" ref="0x40817410"/>
        <function-ref name="reset" scoped="" ref="0x4081f288"/>
        <function-ref name="overflow" scoped="" ref="0x4081f010"/>
        <function-ref name="isOn" scoped="" ref="0x4081fc68"/>
        <function-ref name="set" scoped="" ref="0x40820ce8"/>
        <function-ref name="start" scoped="" ref="0x4081f500"/>
        <function-ref name="stop" scoped="" ref="0x4081f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40808d48" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40808d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TThree" ref="0x40380460"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408164e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408169d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40816760"/>
        <function-ref name="overflow" scoped="" ref="0x40816c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40826010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40826010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40825a68"/>
        <function-ref name="test" scoped="" ref="0x40825578"/>
        <function-ref name="get" scoped="" ref="0x40826658"/>
        <function-ref name="setScale" scoped="" ref="0x40825ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40824010"/>
        <function-ref name="reset" scoped="" ref="0x40826de8"/>
        <function-ref name="overflow" scoped="" ref="0x40826b70"/>
        <function-ref name="isOn" scoped="" ref="0x408257f0"/>
        <function-ref name="set" scoped="" ref="0x408268d0"/>
        <function-ref name="start" scoped="" ref="0x40825088"/>
        <function-ref name="stop" scoped="" ref="0x40825300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4084a5f8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4084a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TThree" ref="0x40380460"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4084ad48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40849288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40849010"/>
        <function-ref name="overflow" scoped="" ref="0x40849500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40822320" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40822320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40822a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4084a010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40822ce8"/>
        <function-ref name="overflow" scoped="" ref="0x4084a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x408461d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x408461d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408463a8"/>
        <function-ref name="getPayload" scoped="" ref="0x40846488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40846e50" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40846e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40845050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40845130"/>
        <function-ref name="getPayload" scoped="" ref="0x40845210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408452f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408453d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40846938" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40846938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40846b10"/>
        <function-ref name="getPayload" scoped="" ref="0x40846bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40846cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40843bd0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40843bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40843da8"/>
        <function-ref name="getPayload" scoped="" ref="0x40843e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4084e308" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4084e4e0"/>
        <function-ref name="noAck" scoped="" ref="0x4084e5c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4084e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40847118" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40847118"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408472f0"/>
        <function-ref name="stop" scoped="" ref="0x408473d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40853140" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialActiveMessageC.nc">
      <component-ref qname="BlockingSerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40853140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40853318"/>
        <function-ref name="source" scoped="" ref="0x408533f8"/>
        <function-ref name="address" scoped="" ref="0x408534d8"/>
        <function-ref name="destination" scoped="" ref="0x408535b8"/>
        <function-ref name="setSource" scoped="" ref="0x40853698"/>
        <function-ref name="setDestination" scoped="" ref="0x40853778"/>
        <function-ref name="type" scoped="" ref="0x40853858"/>
        <function-ref name="setType" scoped="" ref="0x40853938"/>
        <function-ref name="isForMe" scoped="" ref="0x40853a18"/>
        <function-ref name="setGroup" scoped="" ref="0x40853af8"/>
        <function-ref name="localGroup" scoped="" ref="0x40853bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4084d010" loc="35:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4084d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4084d1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x4084d2c8"/>
        <function-ref name="start" scoped="" ref="0x4084d3a8"/>
        <function-ref name="stop" scoped="" ref="0x4084d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40860ac0" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40860ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40860c98"/>
        <function-ref name="getPayload" scoped="" ref="0x40860d78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40860e58"/>
        <function-ref name="cancel" scoped="" ref="0x4084c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4084c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40866ab8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40866ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40866c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40866d70"/>
        <function-ref name="getPayload" scoped="" ref="0x40866e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4085d010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4085d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40866760" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40866760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40866938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4085c548" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4085c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4085c720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4085c800"/>
        <function-ref name="led1On" scoped="" ref="0x4085c8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4085c9c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4085caa0"/>
        <function-ref name="get" scoped="" ref="0x4085cb80"/>
        <function-ref name="led1Off" scoped="" ref="0x4085cc60"/>
        <function-ref name="led2Off" scoped="" ref="0x4085b010"/>
        <function-ref name="set" scoped="" ref="0x4085cd40"/>
        <function-ref name="led0On" scoped="" ref="0x4085ce20"/>
        <function-ref name="led2On" scoped="" ref="0x4085cf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4085c010" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4085c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4085c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4085c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4085c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40866120" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40866120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408662f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4085d288" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4085d288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4085d460"/>
        <function-ref name="source" scoped="" ref="0x4085d540"/>
        <function-ref name="address" scoped="" ref="0x4085d620"/>
        <function-ref name="destination" scoped="" ref="0x4085d700"/>
        <function-ref name="setSource" scoped="" ref="0x4085d7e0"/>
        <function-ref name="setDestination" scoped="" ref="0x4085d8c0"/>
        <function-ref name="type" scoped="" ref="0x4085d9a0"/>
        <function-ref name="setType" scoped="" ref="0x4085da80"/>
        <function-ref name="isForMe" scoped="" ref="0x4085db60"/>
        <function-ref name="setGroup" scoped="" ref="0x4085dc40"/>
        <function-ref name="localGroup" scoped="" ref="0x4085dd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ac538" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ac538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ac710"/>
        <function-ref name="getPayload" scoped="" ref="0x408ac7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ac8d0"/>
        <function-ref name="cancel" scoped="" ref="0x408ac9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x408aca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408acbf0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408acbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408acdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4085ae38" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4085ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40874050"/>
        <function-ref name="getPayload" scoped="" ref="0x40874130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40874210"/>
        <function-ref name="cancel" scoped="" ref="0x408742f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408743d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40891930" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40891930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40891b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40891be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40891cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40891da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40891e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408745a8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408745a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40874790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408ac010" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408ac1e8"/>
        <function-ref name="noAck" scoped="" ref="0x408ac2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408ac3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40874988" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40874988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40874b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40874cb0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40874cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40874e88"/>
        <function-ref name="source" scoped="" ref="0x40891010"/>
        <function-ref name="address" scoped="" ref="0x408910f0"/>
        <function-ref name="destination" scoped="" ref="0x408911d0"/>
        <function-ref name="setSource" scoped="" ref="0x408912b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40891390"/>
        <function-ref name="type" scoped="" ref="0x40891470"/>
        <function-ref name="setType" scoped="" ref="0x40891550"/>
        <function-ref name="isForMe" scoped="" ref="0x40891630"/>
        <function-ref name="setGroup" scoped="" ref="0x40891710"/>
        <function-ref name="localGroup" scoped="" ref="0x408917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408a83f8" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408a83f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408a85d0"/>
        <function-ref name="stopDone" scoped="" ref="0x408a86b0"/>
        <function-ref name="start" scoped="" ref="0x408a8790"/>
        <function-ref name="stop" scoped="" ref="0x408a8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408a7300" loc="41:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408a7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a74d8"/>
        <function-ref name="getPayload" scoped="" ref="0x408a75b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a7698"/>
        <function-ref name="cancel" scoped="" ref="0x408a7778"/>
        <function-ref name="sendDone" scoped="" ref="0x408a7858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408a8060" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a8238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408a8cb8" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408a8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a8e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408a2ea0" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408a2ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408a50c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408a51a0"/>
        <function-ref name="led1On" scoped="" ref="0x408a5280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408a5360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408a5440"/>
        <function-ref name="get" scoped="" ref="0x408a5520"/>
        <function-ref name="led1Off" scoped="" ref="0x408a5600"/>
        <function-ref name="led2Off" scoped="" ref="0x408a5980"/>
        <function-ref name="set" scoped="" ref="0x408a56e0"/>
        <function-ref name="led0On" scoped="" ref="0x408a57c0"/>
        <function-ref name="led2On" scoped="" ref="0x408a58a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x408a2998" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x408a2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x408a2b70"/>
        <function-ref name="offset" scoped="" ref="0x408a2c50"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x408a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408ad3d8" loc="64:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408ad3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408ad5b0"/>
        <function-ref name="stopDone" scoped="" ref="0x408ad690"/>
        <function-ref name="start" scoped="" ref="0x408ad770"/>
        <function-ref name="stop" scoped="" ref="0x408ad850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x408ea1e0" loc="326:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x408ea1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ea3b8"/>
        <function-ref name="runTask" scoped="" ref="0x408ea498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x408be498" loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x408be498"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408be670"/>
        <function-ref name="stop" scoped="" ref="0x408be750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x408cda18" loc="189:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x408cda18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408cdbf0"/>
        <function-ref name="runTask" scoped="" ref="0x408cdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408ad040" loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408ad040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ad218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x408bd4b8" loc="73:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x408bd4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x408bd690"/>
        <function-ref name="flush" scoped="" ref="0x408bd770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x408eb010" loc="320:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x408eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408eb1e8"/>
        <function-ref name="runTask" scoped="" ref="0x408eb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x408c1f10" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x408c1f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x408c6108"/>
        <function-ref name="resetSend" scoped="" ref="0x408c61e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x408c62c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x408c63a8"/>
        <function-ref name="putData" scoped="" ref="0x408c6488"/>
        <function-ref name="putDone" scoped="" ref="0x408c6568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x408c6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408c67b8" loc="71:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408c67b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408c6990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408c6a70"/>
        <function-ref name="led1On" scoped="" ref="0x408c6b50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408c6c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408c6d10"/>
        <function-ref name="get" scoped="" ref="0x408c6df0"/>
        <function-ref name="led1Off" scoped="" ref="0x408c6ed0"/>
        <function-ref name="led2Off" scoped="" ref="0x408c42b0"/>
        <function-ref name="set" scoped="" ref="0x408c4010"/>
        <function-ref name="led0On" scoped="" ref="0x408c40f0"/>
        <function-ref name="led2On" scoped="" ref="0x408c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40906e08" loc="335:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40906e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40905010"/>
        <function-ref name="runTask" scoped="" ref="0x409050f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x408c7b00" loc="65:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x408c7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x408c7cd8"/>
        <function-ref name="nextByte" scoped="" ref="0x408c7db8"/>
        <function-ref name="startSend" scoped="" ref="0x408c7e98"/>
        <function-ref name="sendCompleted" scoped="" ref="0x408ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x408c5c30" loc="66:/opt/tinyos-2.1.1/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x408c5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x408c5e08"/>
        <function-ref name="byteReceived" scoped="" ref="0x408c5ee8"/>
        <function-ref name="endPacket" scoped="" ref="0x408c9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40970030" loc="264:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40970030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40970208"/>
        <function-ref name="runTask" scoped="" ref="0x409702e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4092cc60" loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4092cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092ce48"/>
        <function-ref name="getPayload" scoped="" ref="0x4092cf28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40973018"/>
        <function-ref name="cancel" scoped="" ref="0x409730f8"/>
        <function-ref name="sendDone" scoped="" ref="0x409731d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40970468" loc="147:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40970468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40970640"/>
        <function-ref name="runTask" scoped="" ref="0x40970720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4092c8a0" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4092c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092ca88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40973400" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40973400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4076cb30"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x409735e8"/>
        <function-ref name="offset" scoped="" ref="0x409736c8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x409737a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409713f0" loc="46:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409713f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409715c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409716a8"/>
        <function-ref name="led1On" scoped="" ref="0x40971788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40971868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40971948"/>
        <function-ref name="get" scoped="" ref="0x40971a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40971b08"/>
        <function-ref name="led2On" scoped="" ref="0x40971e88"/>
        <function-ref name="set" scoped="" ref="0x40971cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40971be8"/>
        <function-ref name="led0On" scoped="" ref="0x40971da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40973dc0" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40973dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40971010"/>
        <function-ref name="nextByte" scoped="" ref="0x409710f0"/>
        <function-ref name="startSend" scoped="" ref="0x409711d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x409712b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x409738e8" loc="44:/opt/tinyos-2.1.1/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409738e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40973ac0"/>
        <function-ref name="byteReceived" scoped="" ref="0x40973ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x40973c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40965b80" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40965b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40965d58"/>
        <function-ref name="receivedByte" scoped="" ref="0x40965e38"/>
        <function-ref name="receive" scoped="" ref="0x40965f18"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4096b010"/>
        <function-ref name="receiveDone" scoped="" ref="0x4096b0f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4096b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x4096f868" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4096f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4096fa40"/>
        <function-ref name="resetSend" scoped="" ref="0x4096fb20"/>
        <function-ref name="dataReceived" scoped="" ref="0x4096fc00"/>
        <function-ref name="resetReceive" scoped="" ref="0x4096fce0"/>
        <function-ref name="putData" scoped="" ref="0x4096fdc0"/>
        <function-ref name="putDone" scoped="" ref="0x4096fea0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4096c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4096b420" loc="39:/opt/tinyos-2.1.1/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4096b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4096b5f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4096b6d8"/>
        <function-ref name="led1On" scoped="" ref="0x4096b7b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4096b898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4096b978"/>
        <function-ref name="get" scoped="" ref="0x4096ba58"/>
        <function-ref name="led1Off" scoped="" ref="0x4096bb38"/>
        <function-ref name="led2Off" scoped="" ref="0x4096beb8"/>
        <function-ref name="set" scoped="" ref="0x4096bc18"/>
        <function-ref name="led0On" scoped="" ref="0x4096bcf8"/>
        <function-ref name="led2On" scoped="" ref="0x4096bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40991380" loc="42:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40991380"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40991558"/>
        <function-ref name="receive" scoped="" ref="0x40991638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40976548" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40976548"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40976720"/>
        <function-ref name="receivedByte" scoped="" ref="0x40976800"/>
        <function-ref name="receive" scoped="" ref="0x409768e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409769c0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40976aa0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40976b80"/>
        <function-ref name="sendDone" scoped="" ref="0x40976c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409760c8" loc="40:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409760c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409762a0"/>
        <function-ref name="stop" scoped="" ref="0x40976380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x409922a8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x409922a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40992480"/>
        <function-ref name="receive" scoped="" ref="0x40992560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40992728" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40992728"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40992900"/>
        <function-ref name="receivedByte" scoped="" ref="0x409929e0"/>
        <function-ref name="receive" scoped="" ref="0x40992ac0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40992ba0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40992c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40992d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40992e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409901b8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409901b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40990908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40990df8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40990b80"/>
        <function-ref name="overflow" scoped="" ref="0x4098f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40991d80" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40991d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40992010"/>
        <function-ref name="stop" scoped="" ref="0x409920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4098dae8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4098dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098dcc0"/>
        <function-ref name="receive" scoped="" ref="0x4098dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x4098c7b0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x4098c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4098c988"/>
        <function-ref name="stop" scoped="" ref="0x4098ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4098d398" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4098d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4098d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4098df00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4098df00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098c0f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4098c1d0"/>
        <function-ref name="receive" scoped="" ref="0x4098c2b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4098c390"/>
        <function-ref name="receiveDone" scoped="" ref="0x4098c470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4098c550"/>
        <function-ref name="sendDone" scoped="" ref="0x4098c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409a7c88" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409a7c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40360c68"/>
            <typename><typedef-ref name="TMicro" ref="0x40360e30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409a63f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409a68e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409a6668"/>
        <function-ref name="overflow" scoped="" ref="0x409a6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x409a7050" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x409a7050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409a7228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409a7308"/>
        <function-ref name="rxDone" scoped="" ref="0x409a73e8"/>
        <function-ref name="txDone" scoped="" ref="0x409a74c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409a75a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409a7688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409a7768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409a7848"/>
        <function-ref name="tx" scoped="" ref="0x409a7928"/>
        <function-ref name="rx" scoped="" ref="0x409a7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4098d6d0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4098d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4098d8a8"/>
        <function-ref name="stop" scoped="" ref="0x4098d988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x4098cbe8" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x4098cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4098cdc0"/>
        <function-ref name="stop" scoped="" ref="0x4098cea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x409d70b8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x409d70b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409d7290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409d7370"/>
        <function-ref name="rxDone" scoped="" ref="0x409d7450"/>
        <function-ref name="txDone" scoped="" ref="0x409d7530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409d7610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409d76f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409d77d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409d78b0"/>
        <function-ref name="tx" scoped="" ref="0x409d7990"/>
        <function-ref name="rx" scoped="" ref="0x409d7a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x409d6760" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x409d6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409d6938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409d6a18"/>
        <function-ref name="rxDone" scoped="" ref="0x409d6af8"/>
        <function-ref name="txDone" scoped="" ref="0x409d6bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409d6cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409d6d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409d6e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409d5010"/>
        <function-ref name="tx" scoped="" ref="0x409d50f0"/>
        <function-ref name="rx" scoped="" ref="0x409d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x409b6b98" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x409b6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409b6d70"/>
        <function-ref name="stop" scoped="" ref="0x409b6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x409d7cc8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x409d7cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d7ea0"/>
        <function-ref name="stop" scoped="" ref="0x409d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x409d6268" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x409d6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d6440"/>
        <function-ref name="stop" scoped="" ref="0x409d6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x409b6688" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x409b6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409b6860"/>
        <function-ref name="stop" scoped="" ref="0x409b6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x409d59c0" loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x409d59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d5b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x409d2880" loc="74:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x409d2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409d2a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409d2b38"/>
        <function-ref name="rxDone" scoped="" ref="0x409d2c18"/>
        <function-ref name="txDone" scoped="" ref="0x409d2cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409d2dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409d2eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409d0010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409d00f0"/>
        <function-ref name="tx" scoped="" ref="0x409d01d0"/>
        <function-ref name="rx" scoped="" ref="0x409d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x409ceb38" loc="83:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x409ceb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x409ced10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x409d04c0" loc="76:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x409d04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d0698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x409cf390" loc="79:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x409cf390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409cf568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409cf648"/>
        <function-ref name="rxDone" scoped="" ref="0x409cf728"/>
        <function-ref name="txDone" scoped="" ref="0x409cf808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409cf8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409cf9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409cfaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409cfb88"/>
        <function-ref name="tx" scoped="" ref="0x409cfc68"/>
        <function-ref name="rx" scoped="" ref="0x409cfd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x409d2368" loc="73:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x409d2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d2540"/>
        <function-ref name="stop" scoped="" ref="0x409d2620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x409d0910" loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x409d0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d0ae8"/>
        <function-ref name="stop" scoped="" ref="0x409d0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x409d0e40" loc="78:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x409d0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cf050"/>
        <function-ref name="stop" scoped="" ref="0x409cf130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x409ce010" loc="81:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x409ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x409ce1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x409ce2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x409ce3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x409ce488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x409ce568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x409ce750" loc="82:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x409ce750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x409ce928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x409d5e10" loc="72:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x409d5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d2010"/>
        <function-ref name="stop" scoped="" ref="0x409d20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x409fd928" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x409fd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x409fdb00"/>
        <function-ref name="offset" scoped="" ref="0x409fdbe0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x409fdcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a13260" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingSerialActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a13260"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a13438"/>
        <function-ref name="stopDone" scoped="" ref="0x40a13518"/>
        <function-ref name="start" scoped="" ref="0x40a135f8"/>
        <function-ref name="stop" scoped="" ref="0x40a136d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a15d98" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingSerialActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a15d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a13010"/>
        <function-ref name="stop" scoped="" ref="0x40a130f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a0f5d0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a0f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a0f7a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40a0f888"/>
        <function-ref name="start" scoped="" ref="0x40a0f968"/>
        <function-ref name="stop" scoped="" ref="0x40a0fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a12df8" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a12df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0f010"/>
        <function-ref name="stop" scoped="" ref="0x40a0f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40a0b1b0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a0b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a0b388"/>
        <function-ref name="stopDone" scoped="" ref="0x40a0b468"/>
        <function-ref name="start" scoped="" ref="0x40a0b548"/>
        <function-ref name="stop" scoped="" ref="0x40a0b628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a0b7d0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a0b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a0b9a8"/>
        <function-ref name="start" scoped="" ref="0x40a0ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a0e348" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a0e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a0e520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a2b7b8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a2b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a2b990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a2ba70"/>
        <function-ref name="led1On" scoped="" ref="0x40a2bb50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a2bc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a2bd10"/>
        <function-ref name="get" scoped="" ref="0x40a2bdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a2bed0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a2a2b0"/>
        <function-ref name="set" scoped="" ref="0x40a2a010"/>
        <function-ref name="led0On" scoped="" ref="0x40a2a0f0"/>
        <function-ref name="led2On" scoped="" ref="0x40a2a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40a0e9f8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40a0e9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0ebd0"/>
        <function-ref name="stop" scoped="" ref="0x40a0ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40a2b010" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a2b1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a2b2c8"/>
        <function-ref name="init" scoped="" ref="0x40a2b3a8"/>
        <function-ref name="remove" scoped="" ref="0x40a2b488"/>
        <function-ref name="find" scoped="" ref="0x40a2b568"/>
        <function-ref name="dequeue" scoped="" ref="0x40a2b648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40a0c980" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <component-ref qname="SystemCallQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a0c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a0cb58"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a0cc38"/>
        <function-ref name="init" scoped="" ref="0x40a0cd18"/>
        <function-ref name="remove" scoped="" ref="0x40a0cdf8"/>
        <function-ref name="find" scoped="" ref="0x40a0ced8"/>
        <function-ref name="dequeue" scoped="" ref="0x40a33010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a2f6c0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a2f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a2f898"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a2f978"/>
        <function-ref name="led1On" scoped="" ref="0x40a2fa58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a2fb38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a2fc18"/>
        <function-ref name="get" scoped="" ref="0x40a2fcf8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a2fdd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40a2e1d0"/>
        <function-ref name="set" scoped="" ref="0x40a2feb8"/>
        <function-ref name="led0On" scoped="" ref="0x40a2e010"/>
        <function-ref name="led2On" scoped="" ref="0x40a2e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40a33900" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a33900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a33ad8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a33bb8"/>
        <function-ref name="init" scoped="" ref="0x40a33c98"/>
        <function-ref name="remove" scoped="" ref="0x40a33d78"/>
        <function-ref name="find" scoped="" ref="0x40a33e58"/>
        <function-ref name="dequeue" scoped="" ref="0x40a30010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x40a301f8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40a301f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a303d0"/>
        <function-ref name="getLast" scoped="" ref="0x40a304b0"/>
        <function-ref name="indexOf" scoped="" ref="0x40a30590"/>
        <function-ref name="addAfter" scoped="" ref="0x40a30670"/>
        <function-ref name="addLast" scoped="" ref="0x40a30750"/>
        <function-ref name="removeAt" scoped="" ref="0x40a30830"/>
        <function-ref name="init" scoped="" ref="0x40a30910"/>
        <function-ref name="addAt" scoped="" ref="0x40a309f0"/>
        <function-ref name="addFirst" scoped="" ref="0x40a30ad0"/>
        <function-ref name="remove" scoped="" ref="0x40a30bb0"/>
        <function-ref name="removeBefore" scoped="" ref="0x40a30c90"/>
        <function-ref name="getAfter" scoped="" ref="0x40a30d70"/>
        <function-ref name="getAt" scoped="" ref="0x40a30e50"/>
        <function-ref name="removeLast" scoped="" ref="0x40a2f010"/>
        <function-ref name="getBefore" scoped="" ref="0x40a2f0f0"/>
        <function-ref name="addBefore" scoped="" ref="0x40a2f1d0"/>
        <function-ref name="removeAfter" scoped="" ref="0x40a2f2b0"/>
        <function-ref name="getFirst" scoped="" ref="0x40a2f390"/>
        <function-ref name="removeFirst" scoped="" ref="0x40a2f470"/>
        <function-ref name="size" scoped="" ref="0x40a2f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40a45ac0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a45ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a45c98"/>
        <function-ref name="getPayload" scoped="" ref="0x40a45d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40a44238" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a44238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a44410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40a45558" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMReceiverP.nc">
      <component-ref qname="BlockingSerialAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40a45558"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a45730"/>
        <function-ref name="getPayload" scoped="" ref="0x40a45810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40a634d0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40a634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40a636a8"/>
        <function-ref name="stopThread" scoped="" ref="0x40a63788"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40a63868"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40a63948"/>
        <function-ref name="startThread" scoped="" ref="0x40a63a28"/>
        <function-ref name="threadInfo" scoped="" ref="0x40a63b08"/>
        <function-ref name="initThread" scoped="" ref="0x40a63be8"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40a63cc8"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40a63da8"/>
        <function-ref name="joinThread" scoped="" ref="0x40a63e88"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40a85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40a42610" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40a42610"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a427e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a428c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40a42a38" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a42a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a42c10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a42cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a42dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a42eb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a67010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a648b0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a648b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a64a88"/>
        <function-ref name="start" scoped="" ref="0x40a64b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a43d58" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a43d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a42010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40a64588" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a64588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a64770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40a421e8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40a421e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a423d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a424b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a85150" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a85150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a85328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a85408"/>
        <function-ref name="led1On" scoped="" ref="0x40a854e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a855c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a856a8"/>
        <function-ref name="get" scoped="" ref="0x40a85788"/>
        <function-ref name="led1Off" scoped="" ref="0x40a85868"/>
        <function-ref name="led2On" scoped="" ref="0x40a85be8"/>
        <function-ref name="set" scoped="" ref="0x40a85a28"/>
        <function-ref name="led2Off" scoped="" ref="0x40a85948"/>
        <function-ref name="led0On" scoped="" ref="0x40a85b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40a64ca8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40a64ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40a64e80"/>
        <function-ref name="isEmpty" scoped="" ref="0x40a63010"/>
        <function-ref name="init" scoped="" ref="0x40a630f0"/>
        <function-ref name="remove" scoped="" ref="0x40a631d0"/>
        <function-ref name="find" scoped="" ref="0x40a632b0"/>
        <function-ref name="dequeue" scoped="" ref="0x40a63390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a67278" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingSerialAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a67278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403603e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403605b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a66de0"/>
        <function-ref name="fired" scoped="" ref="0x40a66048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a66780"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a66518"/>
        <function-ref name="getdt" scoped="" ref="0x40a642d0"/>
        <function-ref name="gett0" scoped="" ref="0x40a64068"/>
        <function-ref name="isRunning" scoped="" ref="0x40a662b0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a678b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a66ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a67b40"/>
        <function-ref name="stop" scoped="" ref="0x40a67dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40a7d758" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <component-ref qname="BlockingSerialAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a7d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a7d930"/>
        <function-ref name="getPayload" scoped="" ref="0x40a7da10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a7daf0"/>
        <function-ref name="cancel" scoped="" ref="0x40a7dbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a7dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40a80ee8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderP.nc">
      <component-ref qname="BlockingSerialAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40a80ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a7d0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a7d1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a7d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40a79450" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40a79450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40a79628"/>
        <function-ref name="start" scoped="" ref="0x40a79708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40a79db8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a79db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aaa010"/>
        <function-ref name="getPayload" scoped="" ref="0x40aaa0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aaa1d0"/>
        <function-ref name="cancel" scoped="" ref="0x40aaa2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40aaa390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40aaa4d0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aaa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aaa6a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aaa788"/>
        <function-ref name="getPayload" scoped="" ref="0x40aaa868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aaa948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40aaaa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a7ab78" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a7ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a7ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40a7af28" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40a7af28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a79120"/>
        <function-ref name="getPayload" scoped="" ref="0x40a79200"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a792e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40a79848" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40a79848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40a79a20"/>
        <function-ref name="lock" scoped="" ref="0x40a79b00"/>
        <function-ref name="init" scoped="" ref="0x40a79be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aaab68" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingSerialAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aaab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aaad40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aaae20"/>
        <function-ref name="led1On" scoped="" ref="0x40aaaf00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aa9010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aa90f0"/>
        <function-ref name="get" scoped="" ref="0x40aa91d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40aa92b0"/>
        <function-ref name="led2On" scoped="" ref="0x40aa9630"/>
        <function-ref name="set" scoped="" ref="0x40aa9470"/>
        <function-ref name="led2Off" scoped="" ref="0x40aa9390"/>
        <function-ref name="led0On" scoped="" ref="0x40aa9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40aa85b8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <component-ref qname="MutexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40aa85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40aa8790"/>
        <function-ref name="lock" scoped="" ref="0x40aa8870"/>
        <function-ref name="init" scoped="" ref="0x40aa8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40aa2040" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40aa2040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40aa2218"/>
        <function-ref name="stopThread" scoped="" ref="0x40aa22f8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40aa23d8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40aa24b8"/>
        <function-ref name="startThread" scoped="" ref="0x40aa2598"/>
        <function-ref name="threadInfo" scoped="" ref="0x40aa2678"/>
        <function-ref name="initThread" scoped="" ref="0x40aa2758"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40aa2838"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40aa2918"/>
        <function-ref name="joinThread" scoped="" ref="0x40aa29f8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40aa2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40aa58d0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40aa58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40aa5aa8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40aa5b88"/>
        <function-ref name="init" scoped="" ref="0x40aa5c68"/>
        <function-ref name="remove" scoped="" ref="0x40aa5d48"/>
        <function-ref name="dequeue" scoped="" ref="0x40aa5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40aa5348" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40aa5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40aa5520"/>
        <function-ref name="lock" scoped="" ref="0x40aa5600"/>
        <function-ref name="init" scoped="" ref="0x40aa56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40abb6e0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40abb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40abb8b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40abb998"/>
        <function-ref name="getPayload" scoped="" ref="0x40abba78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40abbb58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40abbc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40abb208" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40abb208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40abb3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40abb4c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40abb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40abbd78" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40abbd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ab7010"/>
        <function-ref name="source" scoped="" ref="0x40ab70f0"/>
        <function-ref name="address" scoped="" ref="0x40ab71d0"/>
        <function-ref name="destination" scoped="" ref="0x40ab72b0"/>
        <function-ref name="setSource" scoped="" ref="0x40ab7390"/>
        <function-ref name="setDestination" scoped="" ref="0x40ab7470"/>
        <function-ref name="type" scoped="" ref="0x40ab7550"/>
        <function-ref name="setType" scoped="" ref="0x40ab7630"/>
        <function-ref name="isForMe" scoped="" ref="0x40ab7710"/>
        <function-ref name="setGroup" scoped="" ref="0x40ab77f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ab78d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ab7a30" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingSerialAMSenderC.nc">
      <component-ref qname="BenchmarkAppC.BlockingSerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ab7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ab7c08"/>
        <function-ref name="noAck" scoped="" ref="0x40ab7ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ab7dc8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b54e0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404a1e10" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a5010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a6dd8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404a75c0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404a7bf8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a7aa0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404a62d8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a6180" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a6830" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403babd0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b8010" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403ba440" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b87e0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403ba800" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b83e8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b4ce8" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403ba090" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskScheduler" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasTasks" ref="0x402f7de0" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Check to see if there are any pending tasks in the task queue.</short>
          <long> &#10; Check to see if there are any pending tasks in the task queue. &#10;&#10; @return        whether there are any tasks waiting to run&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x402f7488" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f5288" loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f78c8" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4038e8d8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4038ed20" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4038d1c8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4038da38" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4038c740" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4038cbe8" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4038d5f0" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40392338" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403921e0" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4038e4b0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4038deb8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4038c2f8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadInfo" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x404b0d88" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
              <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x404b0980" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadScheduler" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
      <function command="" provided="0" name="suspendCurrentThread" ref="0x40312368" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopThread" ref="0x4030dec8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030dd70" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadId" ref="0x4030e380" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadInfo" ref="0x4030e818" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
              <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startThread" ref="0x4030d938" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030d7e0" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="threadInfo" ref="0x4030edf8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
              <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030ec80" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initThread" ref="0x4030d3a0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030d248" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="brieflyInterruptCurrentThread" ref="0x40312ce0" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wakeupThread" ref="0x403102c8" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40310170" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="joinThread" ref="0x40310878" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40310720" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40306cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptCurrentThread" ref="0x40312800" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fd2d0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fd7e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403a7b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40350010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403a1268" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403a1e78" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadCleanup" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="cleanup" ref="0x404d8210" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
        <interfacedef-ref qname="ThreadCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadQueue" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x404dd170" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
                <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e1db8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404dd010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
                <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x404dc5c0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404dc468" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x404e1990" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e1838" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x404dc010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
              <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
                <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404ddbe0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404ddde0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
                <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404dd768" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x403097e0"/>
              <typename><typedef-ref name="thread_t" ref="0x403098d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404dd5f0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40301ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40306300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitArrayUtils" loc="28:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
      <function command="" provided="0" name="clrBit" ref="0x404e7d60" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e7a20" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e7c00" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrArray" ref="0x404e9748" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e93d0" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numBytes" ref="0x404e95e8" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBit" ref="0x404e9eb8" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e9b78" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e9d58" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBit" ref="0x404e7620" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e72e0" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e74c0" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkedList" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40565168" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40565010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLast" ref="0x40570c70" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40570af8" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="indexOf" ref="0x4056d658" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056d2c0" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056d4f8" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAfter" ref="0x40563c70" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40563640" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x405638a0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x40563b08" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addLast" ref="0x405631c8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40564df0" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40563068" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAt" ref="0x4056c6f0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056c3a0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x4056c570" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x4055bb40" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4055b9e8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAt" ref="0x40564178" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40565b68" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40565da0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x40564010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addFirst" ref="0x40564988" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405645f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40564828" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x4056deb8" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056db00" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056dd38" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeBefore" ref="0x4056bc48" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056b890" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056bac8" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAfter" ref="0x4056f518" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056f160" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056f398" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAt" ref="0x40570010" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40571c30" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x40571e00" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeLast" ref="0x4056b3a8" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056b230" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBefore" ref="0x4056fd98" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056f9e0" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056fc18" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addBefore" ref="0x40571790" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40571160" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x405713c0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x40571628" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAfter" ref="0x40579518" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40579160" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40579398" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFirst" ref="0x40570648" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405704d0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeFirst" ref="0x4056cd40" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fef20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40301550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056cbc8" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40565710" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405655b8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40301780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40301cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadNotification" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="justCreated" ref="0x405b66c0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToDestroy" ref="0x405b6ac0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Coroutine" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="yield" ref="0x405c54c8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pause" ref="0x405b7cf0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x405c50f8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="join" ref="0x405c42c8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x405c5ee8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405c5d90" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405b7558" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405b7400" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x405c5a30" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x405c58d8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b7920" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Coroutine.nc">
        <interfacedef-ref qname="Coroutine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadFunction" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="signalThreadRun" ref="0x405c0220" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
        <interfacedef-ref qname="ThreadFunction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405c00c8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadSleep" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x405bddd0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
        <interfacedef-ref qname="ThreadSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x405bdc78" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405f3010" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405f3010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40602790" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406045b8" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40603720" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406033d8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x406035c0" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40604f08" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40600138" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40602bd8" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40604a48" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405f3668" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405f3510" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40602170" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40603dc0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40602010" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x405f3d00" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405f3ba8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406041f0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406118d8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406118d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40611db8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406273c8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406273c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40627530" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40627530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40627a18" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40627530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40626510" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40626010" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40626938" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061b3b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061b3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4061b520" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40619810" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4061a4d0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406191c8" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061ae48" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40619068" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061a940" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40619ca0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4061bb50" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4061b9f8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4061a070" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x4063cbb8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036a5b0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a7d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406461a8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40373618"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40373840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406336e0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036eea0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036d128"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40633ce8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036eea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036d128"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40633b90" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036eea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036d128"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406467b0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40373618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40373840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40646658" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40373618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40373840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40633228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036a5b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a7d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406330d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036a5b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036a7d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x4063fce8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x4063d1c8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x4063f8d0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x4063d688" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40645dd0" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f738"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4036f960"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4063f3f0" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4036f960"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4063f298" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036f738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4036f960"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406365b0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406434f0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40644498" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40636aa8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406448a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40643950" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40644058" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40636ed8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40644ca8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406430c8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4062abd8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40638438" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4063ab08" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4063b0f8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406389c8" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40638870" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40638e58" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4063bec0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4063baa0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40638010" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4063b670" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4063b518" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4063a2e8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4063a6e0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PlatformInterrupt" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="postAmble" ref="0x4067e010" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
        <interfacedef-ref qname="PlatformInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCall" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="finish" ref="0x40723d38" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40723be0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407237c8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40305010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="syscall_ptr" ref="0x40723068" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="s" ref="0x40723270" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40723480" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40305010"/></typename>
            </type-int>
          </variable>
          <variable name="params" ref="0x40723658" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingStdControl" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
      <function command="" provided="0" name="start" ref="0x40763590" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40763958" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4077a560" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4077a408" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40779010" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4077add8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40777010" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40776c58" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40776e38" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40776670" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40779c70" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40779930" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40779b10" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingAMSend" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40735bb0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40735650" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40735868" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40735a48" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4077b778" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4077b418" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4077b5f8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4077b010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407b6da0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403810d0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403812f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x407b77d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b568"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037b790"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407b7678" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b568"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037b790"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407b62d8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037cb30"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037cd58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x407b8138" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370448"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40370670"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407b68e8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037cb30"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037cd58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407b6790" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037cb30"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037cd58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407b53e0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403810d0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403812f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407b5288" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403810d0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403812f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x407b8b28" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037ab90"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037adb8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x407b8658" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037b568"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037b790"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x407b7188" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370448"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40370670"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407b7030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370448"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40370670"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x407b7df0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037ab90"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037adb8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407b7c98" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037ab90"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037adb8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407a15b8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x407b0168" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x407b0010" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407b16a0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407a1ab0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407b2630" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407b24d8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407b2a70" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407b1b00" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b2058" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407a1ed0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a15b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407b2e78" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407b1280" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingReceive" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x40843010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40847bd8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40847df0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b6848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40843778" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40843418" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408435f8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40852710" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408525b8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40850220" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408500c8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40850ca8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40850b50" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408569e8" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40756d38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40856890" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4083f200" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4083f0a8" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40840138" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408407d0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40840678" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4083ebd8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4083e870" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4083ea78" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4083fde8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4083fa80" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4083fc88" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40858310" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408581b8" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40858e48" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40858b18" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40858ce8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40756ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408577c0" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40857668" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40854688" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40756d38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40854328" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40854528" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40756d38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40854f00" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40756d38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4084b010" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4084fe18" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4084bd58" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4084bc00" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4084f730" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4084b520" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40864178" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4084dbd0" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4076c010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4084dde8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40864010" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40861dd0" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40861a70" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40861c50" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40861510" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40864e18" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40864cc0" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40863bf8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408638a0" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40863a98" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4084cdd0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
              <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084c888" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4084ca68" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4084cc48" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4086e350" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086e010" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4086e1f0" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4086aeb0" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086ab50" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4086ad30" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4086a5f0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4086d010" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086ee38" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4086dca8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086d950" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4086db48" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x408a23c0" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a2030" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x408a2260" loc="31:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x408a3138" loc="15:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x408a3a08" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a3690" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40764308"/>
                <typename><typedef-ref name="message_t" ref="0x407630c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x408a38a8" loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x408c4c18" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408be0f8" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x408bd2c0" loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x408bee68" loc="38:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x408c99b0" loc="45:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x408c3698" loc="61:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x408c1790" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c1638" loc="83:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x408c3bc0" loc="68:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x408c3168" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c3010" loc="54:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x408c1c98" loc="89:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x408c1138" loc="74:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x408c8aa0" loc="60:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x408c7090" loc="70:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x408c8490" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x408c8338" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x408c77c8" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408c7670" loc="80:/opt/tinyos-2.1.1/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x408ca9c0" loc="51:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x408c51c0" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408c5068" loc="58:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x408c5858" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x408c5700" loc="69:/opt/tinyos-2.1.1/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4096cae8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4096c798" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4096c988" loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40969e88" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40969d30" loc="79:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x409666a8" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40966358" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40966548" loc="90:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x409692f0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40965560" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40965010" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40965200" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409653f8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40969878" loc="72:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40968968" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40968418" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40968608" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b61e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40968800" loc="57:/opt/tinyos-2.1.1/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40993518" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x409933c0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40993db0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40993a48" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40993c50" loc="56:/opt/tinyos-2.1.1/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x409864c8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40987c50" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40985aa8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40985950" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x409851a8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x409873d8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40987818" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x409860c8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x409868c8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40986dd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40986c78" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40985578" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b5b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCallQueue" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
      <function command="" provided="0" name="enqueue" ref="0x40a28170" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a29dc0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40a28010" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a27dd0" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f06e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a27c78" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40a29990" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a29838" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40a27010" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a28c00" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40a28e08" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="find" ref="0x40a27818" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40305010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a27488" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40a27698" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40305010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a28778" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x403094d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x403095c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40a28600" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40a0bf58"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40a29318"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mutex" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="unlock" ref="0x40a75ac0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a75968" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lock" ref="0x40a75568" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402f9da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a75410" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40a75020" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40a78eb8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40a80368"/>
                <typename><typedef-ref name="mutex_t" ref="0x40a80898"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
