<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="64:BarrierBounceAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40738670"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404ab188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404ab188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404b0090"/></to>
    </wire>
    <wire loc="65:BarrierBounceAppC.nc">
      <from><interface-ref name="BlockingAMControl" scoped="" ref="0x407658e0"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x404a27e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x404a27e0"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbdae0"/></to>
    </wire>
    <wire loc="66:BarrierBounceAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40776180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40316b60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403b6ac0"/></to>
    </wire>
    <wire loc="70:BarrierBounceAppC.nc">
      <from><interface-ref name="Barrier" scoped="" ref="0x40762c68"/></from>
      <to><interface-ref name="Barrier" scoped="" ref="0x40e70208"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <from><interface-ref name="Barrier" scoped="" ref="0x40e70208"/></from>
      <to><interface-ref name="Barrier" scoped="" ref="0x40e6e420"/></to>
    </wire>
    <wire loc="76:BarrierBounceAppC.nc">
      <from><interface-ref name="BounceThread0" scoped="" ref="0x40737240"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x40ec2a08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Thread" scoped="" ref="0x40ec2a08"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x405c46b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:BarrierBounceAppC.nc">
      <from><interface-ref name="BlockingAMSend0" scoped="" ref="0x4077a5a0"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40ee1cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40ee1cd0"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x4077eaf8"/>
      <arguments>
        <value cst="I:144">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:BarrierBounceAppC.nc">
      <from><interface-ref name="BlockingReceive0" scoped="" ref="0x40779e98"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40ed9200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40ed9200"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x4077f010"/>
      <arguments>
        <value cst="I:144">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:BarrierBounceAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4077c010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40edd230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40edd230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4077d040"/></to>
    </wire>
    <wire loc="85:BarrierBounceAppC.nc">
      <from><interface-ref name="SyncThread" scoped="" ref="0x4077c770"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x40ed4330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Thread" scoped="" ref="0x40ed4330"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x405c46b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41282370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41253ef8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e36be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e16f28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40de5988"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40db4270"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d139a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cfcb48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cdf040"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cc25f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c3ad50"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bbd010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40885798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4119a010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a71598"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4083bc68"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40617890"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404d14e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404d10e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404aa868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404aa868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049d010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x404cd798"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x40385c68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x403119e0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404e3010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404b0ef0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404cd3f8"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404d7a38"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="TinyOSBoot" scoped="" ref="0x404d7a38"/></from>
      <to><interface-ref name="TinyOSBoot" scoped="" ref="0x404e3ca0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d7ea0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404dc0f0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40923860"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b6888"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4049d7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b64d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049d3f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403d0e48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x4049d3f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404af4c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x404af8f0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403d4210"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403d4210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404207d0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404ad2f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403f34b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404753e8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403e5a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40438790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40438790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f93010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403e70a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4043a410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4043a410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcb228"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403ec210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4044ac88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4044ac88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41007c08"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403d3670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee6010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403eece8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4044b968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4044b968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4100a7f8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403d2a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40425b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40425b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f2bde8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403df210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404336b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5bd70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403e38e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404364f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404364f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8e010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403e6ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40444170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40444170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc60b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403d62f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40418b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40418b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eefc08"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403da8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404237d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404237d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f22c08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403dd0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40431330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40431330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f56c08"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403e1750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4043f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4043f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc2010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403f40a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40448988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40448988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41002a88"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403f1590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404793b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403eac08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043b090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043b090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcfde0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404207d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eeaa88"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403d8830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1da88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403f20c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404728f0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403d7ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404293d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404293d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5e938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403e44b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40437170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40437170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f929e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403e7a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4043ad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4043ad68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcac08"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403ecc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404496b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404496b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410056c0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403d20a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee59e8"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403db4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404244f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404244f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f267f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403dfc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40432030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40432030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f597f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403e22f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40436e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40436e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8d9e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403ef8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40444ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40444ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc5a88"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403d6cf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404214f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404214f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eed6c0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403d92f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40422170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40422170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f206c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403dda98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40431c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40431c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f546c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403f4a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40447330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40447330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41000538"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403dcea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40439dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40439dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f95538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403e9670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4043b9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4043b9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fcd7f8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403ed750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4044a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4044a330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41008228"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403f0010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404768a0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403d4c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee8538"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403d72f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f52538"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403ee2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4044b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4044b010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41010de8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403e0750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40429d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40429d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f5c3b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403e4ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40437ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40437ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f90538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403e64b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40445790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40445790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc86c0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403eb670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40448030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40448030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x410030b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403cf8f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40418228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40418228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef0228"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403dbea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40424e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40424e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f23228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403de670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40432988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40432988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f57228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403e2ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404357d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404357d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc4538"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403f2ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40470dd8"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403ea210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043c6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043c6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fd0418"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403dc4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404306b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404306b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8a0b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403d5750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40421e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40421e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eeb0b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403d9d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40422ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40422ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1e0b0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038c598"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4038ca48"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x403119e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403936d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403a8e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40682ce0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403d0e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403b6778"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403b99a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x403d1010"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x403d1010"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403d6cf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403bd3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x403d1a18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x403d1a18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403d62f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403bdda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x403d04c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x403d04c0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403cf8f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x404d7668"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404e2340"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404d9548"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405e6100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404e27a8"/></from>
      <to><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d7ea0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x404e2e08"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x404d9548"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x404e04f8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403a2440"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="BitArrayUtils" scoped="" ref="0x404e7ec8"/></from>
      <to><interface-ref name="BitArrayUtils" scoped="" ref="0x404d6730"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x404ea728"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x4056a700"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e0840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x4056ae40"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x405b7f08"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405be5c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="Thread" scoped="" ref="0x405c46b8"/></from>
      <to><interface-ref name="Thread" scoped="" ref="0x405c2878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405cc4b8"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cd8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405ce670"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x405eaa10"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405cedd8"/></from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x405c0658"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x405ce010"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></from>
      <to><interface-ref name="ThreadSleep" scoped="" ref="0x405f7698"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x405bea98"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405ea2a8"/></from>
      <to><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405e4100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1b20"/></from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405e6940"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="StaticThreadInfo" scoped="" ref="0x405e4868"/></from>
      <to><interface-ref name="StaticThreadInfo" scoped="" ref="0x405eaa10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e3100"/></from>
      <to><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e9238"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405e3860"/></from>
      <to><interface-ref name="ThreadCleanup" scoped="" ref="0x404d7668"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407243f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40719918"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40723ea0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x4072e4b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40725378"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407205e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40716d28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405fe660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x405fe660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e2a60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40617890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406207d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406100d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4070f460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x406207d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40623998"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406fee30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406bbcb0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406d1010"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4070fdf8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41079790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40623998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4107c8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4107cd18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41078950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406755d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41075b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40679010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40679010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406718b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x410b53c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40679970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40679970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40683248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x410b4dc0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406811a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x4067e178"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x406b3aa8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x406b04e8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="TaskScheduler" scoped="" ref="0x406b3e88"/></from>
      <to><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406af180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406cf9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406fa050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40712010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x4072e980"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <from><interface-ref name="threadTask" scoped="" ref="0x4072a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingSnoop" scoped="" ref="0x4077fd90"/></from>
      <to><interface-ref name="BlockingSnoop" scoped="" ref="0x40e183c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="BlockingSnoop" scoped="" ref="0x40e183c8"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40e152e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x4077f578"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40de76e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40de76e0"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40de4178"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4077d040"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40797368"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40797368"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407afb50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x4077eaf8"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40e39100"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="BlockingAMSend" scoped="" ref="0x40e39100"/></from>
      <to><interface-ref name="BlockingAMSend" scoped="" ref="0x40e35010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x4077f010"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40de7178"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="BlockingReceive" scoped="" ref="0x40de7178"/></from>
      <to><interface-ref name="BlockingReceive" scoped="" ref="0x40de5d38"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40793010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407a8770"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407a8770"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407ad898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbdae0"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbad48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4078bdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40797a58"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40797a58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407b0f20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="BlockingSnoopAny" scoped="" ref="0x4077e390"/></from>
      <to><interface-ref name="BlockingSnoopAny" scoped="" ref="0x40e18920"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="BlockingSnoopAny" scoped="" ref="0x40e18920"/></from>
      <to><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40e15710"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40dbdf08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40799d30"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40799d30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407b33c8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40de7e40"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4079b1f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4079b1f8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x407b2e08"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40e16100"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40797010"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40797010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x407b0bb0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e39950"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407a9670"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407a9670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407b3ca0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407b33c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407c92c0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x407a4af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c6f7e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c6f7e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c92178"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407b3ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d562c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4079b890"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407b04d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407b04d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d55a38"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407afb50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d53190"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x407a5100"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c72de8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c72de8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c94780"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a7ac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407b2718"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407b2718"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d56c88"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407ad898"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407dd230"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x407b2e08"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40d553a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407b0f20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d544c8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x407b0bb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40d54158"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407c92c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d41c78"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x407bc7f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40d51238"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x407bb120"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40d53b88"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407ad040"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x407c79b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407c79b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x407d2b30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x407ddb88"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x407ddb88"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40d41640"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407dd230"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40c75d50"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407d0628"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x407d81c0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x407d81c0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40d35578"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x407c1cc8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x407dd7c0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x407dd7c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c72790"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x40d4d330"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407dec98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d51a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x407d7e88"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x407d7e88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40d17b40"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d50220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x407c7620"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x407c7620"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40d16320"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40d4e380"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b92968"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40d505b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c6ddd8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d50dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c6ac60"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40d4f2f0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4083ca40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x4083ca40"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40836748"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40d4ea40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x407eb810"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x407eb810"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x407e7570"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d4d9f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d41c78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d3f800"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407d73d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d17090"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d17090"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40d12e58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x40d17b40"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x40d109b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40d41640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40d3e438"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407d7ab8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d17770"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d17770"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40d105e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40c75d50"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40c6a6e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407dec98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d189a0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d189a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d12718"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x40d16320"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x40d0f160"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40d35578"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40d649f8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c72790"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c94128"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40d3f800"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407ec720"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x407ec720"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407ea7a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d16af8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ce5308"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ce5308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ce2940"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ce5a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d43e40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d43e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d35ce8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d35ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d44ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d44ac8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d40c18"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d40c18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407ecd28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407ecd28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407eada8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d16748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d41278"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d41278"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d3f3e0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d3f3e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ce4d68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ce4d68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cfc3d8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cff688"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407eb458"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407eb458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c3bbc8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c3bbc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c36ae0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407e7d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4082bf00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4082bf00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40836010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x407e5010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40827a40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40827a40"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x408357a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x407f99f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b847c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x407f99f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c3b1e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40c3b1e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c36100"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b847c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40bbd3b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x407fa040"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x40b84c50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x40b84c50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bbd8a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x407fa800"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40ba8390"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40ba8390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40bbb010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x407f4e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x407f0f10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407f8ca8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cc3948"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cc3948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40ced478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x408066e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40cc7608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40cc7608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a75578"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407f41a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40804820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x40804010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x408057b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x408398e0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40834300"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x40833128"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40885d60"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x40885d60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4089ca60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40832b48"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4098ac48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4098ac48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403d2a98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x408305a0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40988a50"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40988a50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403d3670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x4084b010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x40987e78"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40987e78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x403d4c08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40847118"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x4099cef0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4099cef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x409f0c88"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4083ef20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b542a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b542a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a127b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x4083fe80"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40b538a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b538a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x4083e2b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40b52368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b52368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x4083eb00"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40b531f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b531f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x4083e6e0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40b526c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b526c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4084a010"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40b4d6c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b4d6c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4084a598"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40b4c880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b4c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4084aaa0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x40b4ccb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b4ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40841010"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40b507a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b507a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40841530"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40b50bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b50bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40842700"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x40b48448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b48448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40841a40"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x40b4d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b4d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4083f010"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40b4e030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b4e030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40857010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b689e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b689e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a127b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x408586e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b7c0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b7c0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a127b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408450d8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b92968"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x40852308"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40853ae8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40885798"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4098d4b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4098d4b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4098e798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4089ca60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410d95d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x410d95d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41113dd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4110fb60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410d5448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x410d5448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41109210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x41110918"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40937410"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40937410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409547f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41108c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408aae38"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408aae38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408b02e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41105e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x408b6e88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x408bce28"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x408ae610"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x408b7c38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x408ca348"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x408b6e88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x408c8268"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x408b6e88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x408c7e60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x408b6e88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x408c4a78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x408c1610"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40679010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x408c1e58"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40923c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408aae38"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40961ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40936de0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40936de0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40951540"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409466f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408aae38"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40989660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403d72f0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40988068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403e6ea8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x4098a270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403e2ce8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40987490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403e38e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x4099c7f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x409b2c50"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x4099e618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x409af080"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x4099b300"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x408b7c38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x409af678"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x409c1010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x409c1010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409f7538"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x409ed410"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4098a270"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x409c4418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409e1b68"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x409c3e58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409da050"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x409c1890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409f5718"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x409c4c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409dfc70"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x409c26f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409f92b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x409aeac0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409bd998"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x409c35d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x409ddd60"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409cb190"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x409ba220"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409e0350"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x409ba698"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409de438"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x409bab10"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409dc5f0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x409bc010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409da808"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x409bc488"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409f9a68"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x409bc900"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409f7cf0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x409bcd78"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x409f5ed0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x409bb2b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x409bb698"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x409ecc58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b53548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b4c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b4c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40b466e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40b475c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b52010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b48cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b4e8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b4be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b54958"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a2ad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b52d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b51190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b51568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b47190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b4e468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b462b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40b47a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b4a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b48880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b4b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b46b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b54e70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b50368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b4ecd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b4db00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b518c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b50010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b48010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b52a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b4ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40b47e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b4a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b53bf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b4ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b4b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b51c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b45430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a25100"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x40a2b208"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a25b28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a242f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a127b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a26648"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a24aa8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40a3e6e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a531e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40a531e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a75578"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a24ee8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a86590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a86590"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a83ef0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a23ed0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a86c48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a86c48"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a821b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a3e210"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40b3d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40b3d010"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a7ea48"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a3ee88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40a3fbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40a75578"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a71bc8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a7ea48"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a7a010"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a821b8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a7b628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40a86258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a85d60"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a85d60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a7b2c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x40b1e6c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a811b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x40b1edf8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403d2a98"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a7e410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40a7b9b0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a811b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a7a740"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a78540"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae68c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40ae68c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41199350"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a89c30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b23438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b23438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41199e98"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a8c8f0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a7ce50"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a7ce50"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40ac8010"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a8b0e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a9148"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a9a1e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40ac3678"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a9148"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40ac4dc8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403d2a98"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40ac6810"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403db4b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40ac5208"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403dbea8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40ac5bf0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403da8e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <from><interface-ref name="PlatformInterrupt" scoped="" ref="0x40ac3a40"/></from>
      <to><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b23030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41199a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411983a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b238e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x411987d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4119a348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41198dc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b61880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b67d38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b5f6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b5fae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40b59cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40b5bb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b65760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b5b2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b626e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b61010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b5d468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b5ff18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b67170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b644e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b64840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b64c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b5b6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b65e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b62b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b622b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b679e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b59880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40b59010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b5d8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b5ce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b5e7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b80190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b67688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b63a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b61448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b5e368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b61db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b650b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b5f270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b63010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b636c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b5ca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b5c5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b64190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b5c190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40b59448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b5dcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b65408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b5d030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b65ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b5ebd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b63368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b80a68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b76e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b7b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b774b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b75cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b74190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40b6e448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40b6f2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b7bd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b70a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b77d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b765c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b73b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b745c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b7c758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7ab98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b7aef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b79308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b70e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7a4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b76190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b778f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b7b010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40b6e010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40b6f6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b71010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b705c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b74e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b6e880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b7cc70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b77080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b76a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b74a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b75468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b7b6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b758a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b79660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b79d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b70190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b71cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7a840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b71880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40b6fb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b71448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b7ba18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b736e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b7a190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b732b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b799b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b6d190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x40ba5468"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x40bbb908"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x40ba58d0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x40bbbd90"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x40bba400"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40885d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x40bb49c0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4098a270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40bb34b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4098ac48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x40bb3ea8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x40987490"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x40bb4348"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x4099c7f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40bb2928"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bfd2d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40bfd2d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a127b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bae0f8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40bfd988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40bfd988"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40bad868"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40bfdea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40bfdea0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x40badc78"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40c26c48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40c26c48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40bac0d8"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40c25010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40c25010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40bac508"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40c25d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40c25d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40bad380"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40c218a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40c218a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40bae6b8"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40c18430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40c18430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40baee58"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c1bcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c1bcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40bac948"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40c23bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40c23bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40bab450"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40c20b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c20b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40bab970"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40c1f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c1f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x40bab010"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x40c24c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40c24c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40baa820"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x40c192b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40c192b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40babe38"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40c1a5c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40c1a5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40baa340"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40c1aa00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40c1aa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40bcf5e8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40c3b688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40c3b688"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40c365a0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40bb9de0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb8678"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bb8ce0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c72de8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bb0bf0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c6d010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c6d010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c918c0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40bcfb10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40c20190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40c26598"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40c237a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40c1f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c196e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40c21030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40c1ee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40c1f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40c24190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40c24568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c1a190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40c256c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40c21468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40c26240"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40c1d2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40c1b880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40c1e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c19b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40c23368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40c21cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40c1fcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40c206c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40c268f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c248c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40c23010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40c1b448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40c1b010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c25a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c1db20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40c1ae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40c1d6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40c1ea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40c25368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40c1e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40c3a0c8"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40c34010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c29010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40c343e8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4098ac48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40c34df0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x40989660"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40c33848"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x40988068"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40c32388"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x4099e618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40c32a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cbb0d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40cbb0d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a127b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40c31238"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40cad880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40cad880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40c31df0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40cb9840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40cb9840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40c319c0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40cb9ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40cb9ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40c30250"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c30a90"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c2e0b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c72de8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40c30f28"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4083ca40"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40c2dcf8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x40cb48a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40cb48a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40c2c278"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x40cb4cd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40cb4cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40c2d8b8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x40cb8660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40cb8660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40c2a128"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x40cad448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40cad448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x40c2c740"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x40cae2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40cae2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x40c2cc08"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x40cae6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x40cae6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c2a628"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cafe38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cafe38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40c2ab10"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40cbbca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40cbbca8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40c4e230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cc10a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40937410"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40c8f7a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c6b6b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c8e240"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406100d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40cbf4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40cb5e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40cba388"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40cb64b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40cb3190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40cbad90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cafa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40cb6d28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40cb55c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40cb2b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40cb35c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40cbb790"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40cb9b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40cb8308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40cb94e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40cb5190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40cb68f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40cba030"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40cad010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40cb1010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40caf5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40cb3e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40cb6080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40cb5a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40cb3a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40cb4468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40cba6e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40cb8d10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40caf190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40cb1cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cb1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40caeb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40a2b208"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40cb1448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40cbaa38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40cb26e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40cb9190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40cb22b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40cb89b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40cac190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40cc3088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40cc2b10"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40cc8da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cc25f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cdf430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ce5a78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40cdfb00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ce1738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ce1738"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a75578"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cde350"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cc3948"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cde7f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40cff260"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40cfc800"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cfb010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cff688"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cfb3d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d0f550"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d16af8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d0fcb8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d16748"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40d0e060"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d0e880"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40d0ed58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40d13cd8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x40d2a3c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40d403c8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40d3d448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40d3d448"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40a75578"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d61270"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407dd230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40db64f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40dbdf08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbad48"/></from>
      <to><interface-ref name="BlockingStdControl" scoped="" ref="0x40db4920"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40db1100"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40db64f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40db05e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40dddde8"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40db2858"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40db2858"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40dc7798"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40db1720"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="LinkedList" scoped="" ref="0x40df6010"/></from>
      <to><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40df5500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e220c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40de7e40"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40de45a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40797368"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40e227e8"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40db2858"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40e223f0"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e20010"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40de4d60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e20be8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e11670"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40e16100"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e15b38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40797368"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="SystemCallQueue" scoped="" ref="0x40e11d90"/></from>
      <to><interface-ref name="SystemCallQueue" scoped="" ref="0x40db2858"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40e11998"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e435b0"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e14358"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e42230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e35e90"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e39950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40e35920"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40e4d498"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="SystemCall" scoped="" ref="0x40e35528"/></from>
      <to><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e52580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40797368"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e52c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40e4da20"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e4a1e8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <from><interface-ref name="ConditionVariable" scoped="" ref="0x40e68f00"/></from>
      <to><interface-ref name="ConditionVariable" scoped="" ref="0x40e898f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <from><interface-ref name="ConditionVariable" scoped="" ref="0x40e898f0"/></from>
      <to><interface-ref name="ConditionVariable" scoped="" ref="0x40e86cb8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <from><interface-ref name="ReferenceCounter" scoped="" ref="0x40e64770"/></from>
      <to><interface-ref name="ReferenceCounter" scoped="" ref="0x40e8ab28"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <from><interface-ref name="ReferenceCounter" scoped="" ref="0x40e8ab28"/></from>
      <to><interface-ref name="ReferenceCounter" scoped="" ref="0x40e9dc28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <from><interface-ref name="Barrier" scoped="" ref="0x40e6e420"/></from>
      <to><interface-ref name="Barrier" scoped="" ref="0x40e62370"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <from><interface-ref name="Semaphore" scoped="" ref="0x40e6a2d0"/></from>
      <to><interface-ref name="Semaphore" scoped="" ref="0x40e63968"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <from><interface-ref name="Semaphore" scoped="" ref="0x40e63968"/></from>
      <to><interface-ref name="Semaphore" scoped="" ref="0x40ea91e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40e70718"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e62920"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40e5f620"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e5fce8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40ea9798"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40ea8428"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <from><interface-ref name="ConditionVariable" scoped="" ref="0x40ea89b0"/></from>
      <to><interface-ref name="ConditionVariable" scoped="" ref="0x40e898f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ea7090"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e834c8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40e821c0"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <from><interface-ref name="Mutex" scoped="" ref="0x40e82890"/></from>
      <to><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e82d98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <from><interface-ref name="ThreadScheduler" scoped="" ref="0x40e9a3e8"/></from>
      <to><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <from><interface-ref name="ThreadQueue" scoped="" ref="0x40e99060"/></from>
      <to><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40e99728"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x40eae3f0"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405b7f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x40eae7e8"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x41251220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405c0658"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x41251618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1b20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x41251220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41251960"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40edd8c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4078bdf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40edc4f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40793010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ed95f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4077d040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ed9c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4078bdf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadNotification" scoped="" ref="0x40ed4c68"/></from>
      <to><interface-ref name="ThreadNotification" scoped="" ref="0x405b7f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x40ed3078"/></from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x41282688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadFunction" scoped="" ref="0x405c0658"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadFunction" scoped="" ref="0x41282a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1b20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ThreadInfo" scoped="" ref="0x41282688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41282dc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40316b60"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyOSMainP" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu> &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainImplP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinyTaskSchedulerC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @author  Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TinyThreadSchedulerP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitArrayUtilsC" loc="28:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BitArrayUtilsC.nc">
      <module/>
    </component>
    <component qname="ThreadQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LinkedListC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/LinkedListC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="StaticThreadC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StaticThreadP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadMapC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadMapP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadSleepC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ThreadTimersC.TimerMilliC" loc="36(ThreadTimersC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406258f8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformInterruptC" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TOSThreadsInterruptP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ThreadTimersC.VirtualizeTimerC" loc="35(ThreadTimersC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <value cst="I:33">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ThreadSleepP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BarrierBounceC" loc="56:BarrierBounceC.nc">
      <documentation loc="32:BarrierBounceC.nc">
        <short>&#10; This application is derived from a similar application in the TinyThread &#10; implementation by William P.</short>
        <long>&#10; This application is derived from a similar application in the TinyThread &#10; implementation by William P. McCartney from Cleveland State University (2006)&#10;&#10; This application implements a threaded approach to bouncing messages back and forth&#10; between two motes.  To run it you will need to burn one mote with node ID 0, and a &#10; second mote with node ID 1.  Three different threads run that each send a &#10; message and then wait to receive a message before sending their next one.  After&#10; each message reception, an LED is toggled to indicate that it was received.  Thread&#10; 0 blinks led0, thread 1 blinks led1, and thread 2 blinks led2.  The three &#10; threads run independently, and three different messages are bounced back and &#10; forth between the two motes in an unsynchronized fashion.  In contrast to the simple&#10; Bounce application also found in this directory, once a thread receives a message&#10; it waits on a Barrier before continuing on and turning on its led.  A synchronization &#10; thread is used to wait until all three messages have been received before unblocking&#10; the barrier.  In this way, messages are still bounced back and forth between the &#10; two motes in an asynchronous fashion, but all leds come on at the same time &#10; because of the Barrier and the synchronization thread.  The effect is that all three&#10; leds on one mote flash in unison, followed by all three on the other mote back&#10; and forth forever.  &#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingActiveMessageC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.8 $ $Date: 2009/10/28 16:18:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40381740"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.1/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.1 2008/06/12 14:02:13 klueska Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.22 $ $Date: 2009/10/28 21:09:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="32(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2009/10/28 05:29:02 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingActiveMessageC.BlockingStdControlC" loc="37(BlockingActiveMessageC.BlockingStdControlC):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingStdControlC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockingStdControlP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingStdControlImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SystemCallQueueC" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/syscall_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SystemCallQueueP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockingAMReceiverP" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingAMReceiverP.BlockingAMReceiverImplP" loc="36(BlockingAMReceiverP.BlockingAMReceiverImplP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMReceiverImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="BlockingAMSnooperP" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockingAMSnooperP.BlockingAMReceiverImplP" loc="36(BlockingAMSnooperP.BlockingAMReceiverImplP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockingAMReceiverImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="BlockingAMSenderP" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <configuration/>
    </component>
    <component qname="BlockingAMSenderP.BlockingAMSenderImplP" loc="37(BlockingAMSenderP.BlockingAMSenderImplP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMSenderImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="MutexC" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MutexP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ThreadSynchronizationC" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BarrierC" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/barrier.h">
        <short>&#10; Header file declaring struct for barrier synchronization as used&#10; with tosthreads.</short>
        <long>&#10; Header file declaring struct for barrier synchronization as used&#10; with tosthreads.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BarrierP" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
        <short>&#10; This is the barrier implementation.</short>
        <long>&#10; This is the barrier implementation.  Every barrier has a pointer to &#10; a linked list of threads.  When a thread calls block() on a barrier &#10; it is pushed onto the thread queue associated with that barrier and&#10; it is blocked.  Once some thread calls unblock() on a particular &#10; barrier, all threads on that barrier's thread queue are popped off &#10; and woken up. &#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SemaphoreC" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/coroutines/types/semaphore.h">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ConditionVariableC" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/condvar.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ConditionVariableP" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
        <short>&#10; This is the barrier implementation.</short>
        <long>&#10; This is the barrier implementation.  Every barrier has a pointer to &#10; a linked list of threads.  When a thread calls block() on a barrier &#10; it is pushed onto the thread queue associated with that barrier and&#10; it is blocked.  Once some thread calls unblock() on a particular &#10; barrier, all threads on that barrier's thread queue are popped off &#10; and woken up. &#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SemaphoreP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReferenceCounterC" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/refcounter.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ReferenceCounterP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BarrierBounceAppC.BounceThread0" loc="38(BarrierBounceAppC.BounceThread0):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ThreadC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BarrierBounceAppC.BounceThread0.ThreadInfoP" loc="36(BarrierBounceAppC.BounceThread0.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BarrierBounceAppC.BlockingAMSender0" loc="38(BarrierBounceAppC.BlockingAMSender0):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMSenderC"/>
        <arguments>
          <value cst="I:144">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BarrierBounceAppC.BlockingAMReceiver0" loc="39(BarrierBounceAppC.BlockingAMReceiver0):/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang (cliang4@cs.jhu.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockingAMReceiverC"/>
        <arguments>
          <value cst="I:144">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BarrierBounceAppC.SyncThread" loc="38(BarrierBounceAppC.SyncThread):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ThreadC"/>
        <arguments>
          <value cst="I:800">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BarrierBounceAppC.SyncThread.ThreadInfoP" loc="36(BarrierBounceAppC.SyncThread.ThreadInfoP):/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ThreadInfoP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403f9dc8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f6010" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f6228" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40401238" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40401460" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40401688" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40401878" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4044e3d0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4044e5f8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4044e820" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4044ea10" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x406258f8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x406258f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40625ab8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40631bf8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40631bf8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40631db8" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061f838" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061f838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ced00" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ced00"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406ceee0" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4070c3e8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4070c3e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40921010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40921010"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40921230" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40909cc0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40909cc0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40917148" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40917148"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40917308" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40952be8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40952be8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4094e058" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4094e058"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40955ec0" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40955ec0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40960360" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40960360"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x409605c8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x409605c8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40960a38" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40960a38"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40960ca0" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4095f148" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4095f148"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40939bb8" loc="41:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40939bb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4096d038" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4096d038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4096d2a0" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4096d2a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4096d710" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4096d710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4096d978" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x409be8e8" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x409beb10" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x409bed38" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x409bef28" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.1/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40ae87c8" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40b04570" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingStdControlC" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockingAMReceiverImplP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingAMSenderImplP" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ThreadC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x40e73e98" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
          <component-ref qname="ThreadC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ThreadInfoP" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="stack_size" ref="0x40ebe310" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </constant>
        <constant name="thread_id" ref="0x40ebe530" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
          <component-ref qname="ThreadInfoP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockingAMSenderC" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ead840" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
          <component-ref qname="BlockingAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockingAMReceiverC" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10; @author Chieh-Jan Mike Liang (cliang4@cs.jhu.edu)&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40edb8d8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
          <component-ref qname="BlockingAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x404ab5a0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404ab5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ab778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404ab188" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404ab188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404ab360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a59c8" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a59c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404aa868" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404aa868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404aaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a5268" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a5440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a5520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a5600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a56e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x4049d3f0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x4049d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049d010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4049d7f8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4049d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404a9908" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404a9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404a9538" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404a9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a9710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404ad2f0" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ad4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x404af8f0" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x404af8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404afac8"/>
        <function-ref name="isInput" scoped="" ref="0x404afba8"/>
        <function-ref name="toggle" scoped="" ref="0x404afc88"/>
        <function-ref name="isOutput" scoped="" ref="0x404afd68"/>
        <function-ref name="get" scoped="" ref="0x404afe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aff28"/>
        <function-ref name="set" scoped="" ref="0x404ad018"/>
        <function-ref name="clr" scoped="" ref="0x404ad0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404af4c8" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404af4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404af6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403f34b0" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403f34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3888"/>
        <function-ref name="isInput" scoped="" ref="0x403f3968"/>
        <function-ref name="toggle" scoped="" ref="0x403f3a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403f3b28"/>
        <function-ref name="get" scoped="" ref="0x403f3c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f3ce8"/>
        <function-ref name="set" scoped="" ref="0x403f3dc8"/>
        <function-ref name="clr" scoped="" ref="0x403f3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403e5a28" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403e5a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5c00"/>
        <function-ref name="isInput" scoped="" ref="0x403e5ce0"/>
        <function-ref name="toggle" scoped="" ref="0x403e5dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5ea0"/>
        <function-ref name="get" scoped="" ref="0x403e4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e40f0"/>
        <function-ref name="set" scoped="" ref="0x403e41d0"/>
        <function-ref name="clr" scoped="" ref="0x403e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403e70a0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403e70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7278"/>
        <function-ref name="isInput" scoped="" ref="0x403e7358"/>
        <function-ref name="toggle" scoped="" ref="0x403e7438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7518"/>
        <function-ref name="get" scoped="" ref="0x403e75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e76d8"/>
        <function-ref name="set" scoped="" ref="0x403e77b8"/>
        <function-ref name="clr" scoped="" ref="0x403e7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403ec210" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403ec210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ec3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ec4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ec5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ec688"/>
        <function-ref name="get" scoped="" ref="0x403ec768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ec848"/>
        <function-ref name="set" scoped="" ref="0x403ec928"/>
        <function-ref name="clr" scoped="" ref="0x403eca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403d3670" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3848"/>
        <function-ref name="isInput" scoped="" ref="0x403d3928"/>
        <function-ref name="toggle" scoped="" ref="0x403d3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3ae8"/>
        <function-ref name="get" scoped="" ref="0x403d3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d3ca8"/>
        <function-ref name="set" scoped="" ref="0x403d3d88"/>
        <function-ref name="clr" scoped="" ref="0x403d3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403eece8" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eeec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ed010"/>
        <function-ref name="toggle" scoped="" ref="0x403ed0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed1d0"/>
        <function-ref name="get" scoped="" ref="0x403ed2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed390"/>
        <function-ref name="set" scoped="" ref="0x403ed470"/>
        <function-ref name="clr" scoped="" ref="0x403ed550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403d2a98" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403d2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d2d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2f10"/>
        <function-ref name="get" scoped="" ref="0x403db010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db0f0"/>
        <function-ref name="set" scoped="" ref="0x403db1d0"/>
        <function-ref name="clr" scoped="" ref="0x403db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403df210" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403df210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403df4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403df5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403df688"/>
        <function-ref name="get" scoped="" ref="0x403df768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df848"/>
        <function-ref name="set" scoped="" ref="0x403df928"/>
        <function-ref name="clr" scoped="" ref="0x403dfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403e38e0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403e38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e3b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3d58"/>
        <function-ref name="get" scoped="" ref="0x403e3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3f18"/>
        <function-ref name="set" scoped="" ref="0x403e2010"/>
        <function-ref name="clr" scoped="" ref="0x403e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403e6ea8" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403e6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ef1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ef280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef360"/>
        <function-ref name="get" scoped="" ref="0x403ef440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef520"/>
        <function-ref name="set" scoped="" ref="0x403ef600"/>
        <function-ref name="clr" scoped="" ref="0x403ef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403d62f8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403d62f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d64d0"/>
        <function-ref name="isInput" scoped="" ref="0x403d65b0"/>
        <function-ref name="toggle" scoped="" ref="0x403d6690"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6770"/>
        <function-ref name="get" scoped="" ref="0x403d6850"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6930"/>
        <function-ref name="set" scoped="" ref="0x403d6a10"/>
        <function-ref name="clr" scoped="" ref="0x403d6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403da8e0" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403da8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403daab8"/>
        <function-ref name="isInput" scoped="" ref="0x403dab98"/>
        <function-ref name="toggle" scoped="" ref="0x403dac78"/>
        <function-ref name="isOutput" scoped="" ref="0x403dad58"/>
        <function-ref name="get" scoped="" ref="0x403dae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403daf18"/>
        <function-ref name="set" scoped="" ref="0x403d9010"/>
        <function-ref name="clr" scoped="" ref="0x403d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403dd0a0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd278"/>
        <function-ref name="isInput" scoped="" ref="0x403dd358"/>
        <function-ref name="toggle" scoped="" ref="0x403dd438"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd518"/>
        <function-ref name="get" scoped="" ref="0x403dd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd6d8"/>
        <function-ref name="set" scoped="" ref="0x403dd7b8"/>
        <function-ref name="clr" scoped="" ref="0x403dd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403e1750" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1928"/>
        <function-ref name="isInput" scoped="" ref="0x403e1a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1bc8"/>
        <function-ref name="get" scoped="" ref="0x403e1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1d88"/>
        <function-ref name="set" scoped="" ref="0x403e1e68"/>
        <function-ref name="clr" scoped="" ref="0x403ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403f40a0" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403f40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4278"/>
        <function-ref name="isInput" scoped="" ref="0x403f4358"/>
        <function-ref name="toggle" scoped="" ref="0x403f4438"/>
        <function-ref name="isOutput" scoped="" ref="0x403f4518"/>
        <function-ref name="get" scoped="" ref="0x403f45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f46d8"/>
        <function-ref name="set" scoped="" ref="0x403f47b8"/>
        <function-ref name="clr" scoped="" ref="0x403f4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403f1590" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403f1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1768"/>
        <function-ref name="isInput" scoped="" ref="0x403f1848"/>
        <function-ref name="toggle" scoped="" ref="0x403f1928"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1a08"/>
        <function-ref name="get" scoped="" ref="0x403f1ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1bc8"/>
        <function-ref name="set" scoped="" ref="0x403f1ca8"/>
        <function-ref name="clr" scoped="" ref="0x403f1d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403eac08" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403eac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eade0"/>
        <function-ref name="isInput" scoped="" ref="0x403eaec0"/>
        <function-ref name="toggle" scoped="" ref="0x403e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e90f0"/>
        <function-ref name="get" scoped="" ref="0x403e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e92b0"/>
        <function-ref name="set" scoped="" ref="0x403e9390"/>
        <function-ref name="clr" scoped="" ref="0x403e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403d4210" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403d4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d43e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d44c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d45a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4688"/>
        <function-ref name="get" scoped="" ref="0x403d4768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4848"/>
        <function-ref name="set" scoped="" ref="0x403d4928"/>
        <function-ref name="clr" scoped="" ref="0x403d4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403d8830" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403d8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8a08"/>
        <function-ref name="isInput" scoped="" ref="0x403d8ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403d8bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8ca8"/>
        <function-ref name="get" scoped="" ref="0x403d8d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8e68"/>
        <function-ref name="set" scoped="" ref="0x403d7010"/>
        <function-ref name="clr" scoped="" ref="0x403d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403f20c0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403f20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2298"/>
        <function-ref name="isInput" scoped="" ref="0x403f2378"/>
        <function-ref name="toggle" scoped="" ref="0x403f2458"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2538"/>
        <function-ref name="get" scoped="" ref="0x403f2618"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f26f8"/>
        <function-ref name="set" scoped="" ref="0x403f27d8"/>
        <function-ref name="clr" scoped="" ref="0x403f28b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403d7ce8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403d7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e0010"/>
        <function-ref name="toggle" scoped="" ref="0x403e00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e01d0"/>
        <function-ref name="get" scoped="" ref="0x403e02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0390"/>
        <function-ref name="set" scoped="" ref="0x403e0470"/>
        <function-ref name="clr" scoped="" ref="0x403e0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403e44b0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403e44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4688"/>
        <function-ref name="isInput" scoped="" ref="0x403e4768"/>
        <function-ref name="toggle" scoped="" ref="0x403e4848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4928"/>
        <function-ref name="get" scoped="" ref="0x403e4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4ae8"/>
        <function-ref name="set" scoped="" ref="0x403e4bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403e7a98" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403e7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e7d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e7e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7f10"/>
        <function-ref name="get" scoped="" ref="0x403e6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e60f0"/>
        <function-ref name="set" scoped="" ref="0x403e61d0"/>
        <function-ref name="clr" scoped="" ref="0x403e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403ecc08" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403ecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ecde0"/>
        <function-ref name="isInput" scoped="" ref="0x403ecec0"/>
        <function-ref name="toggle" scoped="" ref="0x403eb010"/>
        <function-ref name="isOutput" scoped="" ref="0x403eb0f0"/>
        <function-ref name="get" scoped="" ref="0x403eb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eb2b0"/>
        <function-ref name="set" scoped="" ref="0x403eb390"/>
        <function-ref name="clr" scoped="" ref="0x403eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403d20a0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2278"/>
        <function-ref name="isInput" scoped="" ref="0x403d2358"/>
        <function-ref name="toggle" scoped="" ref="0x403d2438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2518"/>
        <function-ref name="get" scoped="" ref="0x403d25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d26d8"/>
        <function-ref name="set" scoped="" ref="0x403d27b8"/>
        <function-ref name="clr" scoped="" ref="0x403d2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403db4b0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db688"/>
        <function-ref name="isInput" scoped="" ref="0x403db768"/>
        <function-ref name="toggle" scoped="" ref="0x403db848"/>
        <function-ref name="isOutput" scoped="" ref="0x403db928"/>
        <function-ref name="get" scoped="" ref="0x403dba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dbae8"/>
        <function-ref name="set" scoped="" ref="0x403dbbc8"/>
        <function-ref name="clr" scoped="" ref="0x403dbca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403dfc08" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403dfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dfde0"/>
        <function-ref name="isInput" scoped="" ref="0x403dfec0"/>
        <function-ref name="toggle" scoped="" ref="0x403de010"/>
        <function-ref name="isOutput" scoped="" ref="0x403de0f0"/>
        <function-ref name="get" scoped="" ref="0x403de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de2b0"/>
        <function-ref name="set" scoped="" ref="0x403de390"/>
        <function-ref name="clr" scoped="" ref="0x403de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403e22f0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e24c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e25a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e2688"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2768"/>
        <function-ref name="get" scoped="" ref="0x403e2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2928"/>
        <function-ref name="set" scoped="" ref="0x403e2a08"/>
        <function-ref name="clr" scoped="" ref="0x403e2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403ef8e0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403ef8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403efab8"/>
        <function-ref name="isInput" scoped="" ref="0x403efb98"/>
        <function-ref name="toggle" scoped="" ref="0x403efc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403efd58"/>
        <function-ref name="get" scoped="" ref="0x403efe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403eff18"/>
        <function-ref name="set" scoped="" ref="0x403ee010"/>
        <function-ref name="clr" scoped="" ref="0x403ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403d6cf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403d6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6ec8"/>
        <function-ref name="isInput" scoped="" ref="0x403d5010"/>
        <function-ref name="toggle" scoped="" ref="0x403d50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d51d0"/>
        <function-ref name="get" scoped="" ref="0x403d52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5390"/>
        <function-ref name="set" scoped="" ref="0x403d5470"/>
        <function-ref name="clr" scoped="" ref="0x403d5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403d92f0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9548"/>
        <function-ref name="isInput" scoped="" ref="0x403d9628"/>
        <function-ref name="toggle" scoped="" ref="0x403d9708"/>
        <function-ref name="isOutput" scoped="" ref="0x403d97e8"/>
        <function-ref name="get" scoped="" ref="0x403d98c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d99a8"/>
        <function-ref name="set" scoped="" ref="0x403d9a88"/>
        <function-ref name="clr" scoped="" ref="0x403d9b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403dda98" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403dda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ddc70"/>
        <function-ref name="isInput" scoped="" ref="0x403ddd50"/>
        <function-ref name="toggle" scoped="" ref="0x403dde30"/>
        <function-ref name="isOutput" scoped="" ref="0x403ddf10"/>
        <function-ref name="get" scoped="" ref="0x403dc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc0f0"/>
        <function-ref name="set" scoped="" ref="0x403dc1d0"/>
        <function-ref name="clr" scoped="" ref="0x403dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403f4a98" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403f4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f4c70"/>
        <function-ref name="isInput" scoped="" ref="0x403f4d50"/>
        <function-ref name="toggle" scoped="" ref="0x403f4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403f4f10"/>
        <function-ref name="get" scoped="" ref="0x403f3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f30f0"/>
        <function-ref name="set" scoped="" ref="0x403f31d0"/>
        <function-ref name="clr" scoped="" ref="0x403f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403dcea8" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403dcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5208"/>
        <function-ref name="isInput" scoped="" ref="0x403e52e8"/>
        <function-ref name="toggle" scoped="" ref="0x403e53c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e54a8"/>
        <function-ref name="get" scoped="" ref="0x403e5588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5668"/>
        <function-ref name="set" scoped="" ref="0x403e5748"/>
        <function-ref name="clr" scoped="" ref="0x403e5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403e9670" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e9848"/>
        <function-ref name="isInput" scoped="" ref="0x403e9928"/>
        <function-ref name="toggle" scoped="" ref="0x403e9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403e9ae8"/>
        <function-ref name="get" scoped="" ref="0x403e9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e9ca8"/>
        <function-ref name="set" scoped="" ref="0x403e9d88"/>
        <function-ref name="clr" scoped="" ref="0x403e9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403ed750" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed928"/>
        <function-ref name="isInput" scoped="" ref="0x403eda08"/>
        <function-ref name="toggle" scoped="" ref="0x403edae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403edbc8"/>
        <function-ref name="get" scoped="" ref="0x403edca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403edd88"/>
        <function-ref name="set" scoped="" ref="0x403ede68"/>
        <function-ref name="clr" scoped="" ref="0x403ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403f0010" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403f0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f01e8"/>
        <function-ref name="isInput" scoped="" ref="0x403f02c8"/>
        <function-ref name="toggle" scoped="" ref="0x403f03a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f0488"/>
        <function-ref name="get" scoped="" ref="0x403f0568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f0648"/>
        <function-ref name="set" scoped="" ref="0x403f0728"/>
        <function-ref name="clr" scoped="" ref="0x403f0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403d4c08" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403d4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d3010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d30f0"/>
        <function-ref name="get" scoped="" ref="0x403d31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d32b0"/>
        <function-ref name="set" scoped="" ref="0x403d3390"/>
        <function-ref name="clr" scoped="" ref="0x403d3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403d72f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d74c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d75a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d7688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7768"/>
        <function-ref name="get" scoped="" ref="0x403d7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7928"/>
        <function-ref name="set" scoped="" ref="0x403d7a08"/>
        <function-ref name="clr" scoped="" ref="0x403d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403ee2f0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403ee5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403ee688"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee768"/>
        <function-ref name="get" scoped="" ref="0x403ee848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee928"/>
        <function-ref name="set" scoped="" ref="0x403eea08"/>
        <function-ref name="clr" scoped="" ref="0x403eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403e0750" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403e0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0928"/>
        <function-ref name="isInput" scoped="" ref="0x403e0a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0bc8"/>
        <function-ref name="get" scoped="" ref="0x403e0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0d88"/>
        <function-ref name="set" scoped="" ref="0x403e0e68"/>
        <function-ref name="clr" scoped="" ref="0x403df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403e4ea8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403e4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e30c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e31a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e3280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3360"/>
        <function-ref name="get" scoped="" ref="0x403e3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3520"/>
        <function-ref name="set" scoped="" ref="0x403e3600"/>
        <function-ref name="clr" scoped="" ref="0x403e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403e64b0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403e64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6688"/>
        <function-ref name="isInput" scoped="" ref="0x403e6768"/>
        <function-ref name="toggle" scoped="" ref="0x403e6848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6928"/>
        <function-ref name="get" scoped="" ref="0x403e6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ae8"/>
        <function-ref name="set" scoped="" ref="0x403e6bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403eb670" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403eb848"/>
        <function-ref name="isInput" scoped="" ref="0x403eb928"/>
        <function-ref name="toggle" scoped="" ref="0x403eba08"/>
        <function-ref name="isOutput" scoped="" ref="0x403ebae8"/>
        <function-ref name="get" scoped="" ref="0x403ebbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ebca8"/>
        <function-ref name="set" scoped="" ref="0x403ebd88"/>
        <function-ref name="clr" scoped="" ref="0x403ebe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403cf8f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403cf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cfac8"/>
        <function-ref name="isInput" scoped="" ref="0x403cfba8"/>
        <function-ref name="toggle" scoped="" ref="0x403cfc88"/>
        <function-ref name="isOutput" scoped="" ref="0x403cfd68"/>
        <function-ref name="get" scoped="" ref="0x403cfe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cff28"/>
        <function-ref name="set" scoped="" ref="0x403d6018"/>
        <function-ref name="clr" scoped="" ref="0x403d60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403dbea8" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403dbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403da1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403da280"/>
        <function-ref name="isOutput" scoped="" ref="0x403da360"/>
        <function-ref name="get" scoped="" ref="0x403da440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da520"/>
        <function-ref name="set" scoped="" ref="0x403da600"/>
        <function-ref name="clr" scoped="" ref="0x403da6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403de670" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de848"/>
        <function-ref name="isInput" scoped="" ref="0x403de928"/>
        <function-ref name="toggle" scoped="" ref="0x403dea08"/>
        <function-ref name="isOutput" scoped="" ref="0x403deae8"/>
        <function-ref name="get" scoped="" ref="0x403debc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403deca8"/>
        <function-ref name="set" scoped="" ref="0x403ded88"/>
        <function-ref name="clr" scoped="" ref="0x403dee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403e2ce8" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403e2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403f2ab8" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403f2ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f2c90"/>
        <function-ref name="isInput" scoped="" ref="0x403f2d70"/>
        <function-ref name="toggle" scoped="" ref="0x403f2e50"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1010"/>
        <function-ref name="get" scoped="" ref="0x403f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f11d0"/>
        <function-ref name="set" scoped="" ref="0x403f12b0"/>
        <function-ref name="clr" scoped="" ref="0x403f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403ea210" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403ea210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea3e8"/>
        <function-ref name="isInput" scoped="" ref="0x403ea4c8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea688"/>
        <function-ref name="get" scoped="" ref="0x403ea768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea848"/>
        <function-ref name="set" scoped="" ref="0x403ea928"/>
        <function-ref name="clr" scoped="" ref="0x403eaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403dc4b0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403dc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc688"/>
        <function-ref name="isInput" scoped="" ref="0x403dc768"/>
        <function-ref name="toggle" scoped="" ref="0x403dc848"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc928"/>
        <function-ref name="get" scoped="" ref="0x403dca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dcae8"/>
        <function-ref name="set" scoped="" ref="0x403dcbc8"/>
        <function-ref name="clr" scoped="" ref="0x403dcca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403d5750" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403d5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5928"/>
        <function-ref name="isInput" scoped="" ref="0x403d5a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5bc8"/>
        <function-ref name="get" scoped="" ref="0x403d5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5d88"/>
        <function-ref name="set" scoped="" ref="0x403d5e68"/>
        <function-ref name="clr" scoped="" ref="0x403d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403d9d68" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403d9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8010"/>
        <function-ref name="isInput" scoped="" ref="0x403d80f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d82b0"/>
        <function-ref name="get" scoped="" ref="0x403d8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8470"/>
        <function-ref name="set" scoped="" ref="0x403d8550"/>
        <function-ref name="clr" scoped="" ref="0x403d8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404214f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404214f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404216c8"/>
        <function-ref name="isInput" scoped="" ref="0x404217a8"/>
        <function-ref name="toggle" scoped="" ref="0x40421888"/>
        <function-ref name="isOutput" scoped="" ref="0x40421968"/>
        <function-ref name="get" scoped="" ref="0x40421a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421b28"/>
        <function-ref name="set" scoped="" ref="0x40421c08"/>
        <function-ref name="clr" scoped="" ref="0x40421ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041f170" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f348"/>
        <function-ref name="isInput" scoped="" ref="0x4041f428"/>
        <function-ref name="toggle" scoped="" ref="0x4041f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f5e8"/>
        <function-ref name="get" scoped="" ref="0x4041f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f7a8"/>
        <function-ref name="set" scoped="" ref="0x4041f888"/>
        <function-ref name="clr" scoped="" ref="0x4041f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40418228" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40418228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418400"/>
        <function-ref name="isInput" scoped="" ref="0x404184e0"/>
        <function-ref name="toggle" scoped="" ref="0x404185c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404186a0"/>
        <function-ref name="get" scoped="" ref="0x40418780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418860"/>
        <function-ref name="set" scoped="" ref="0x40418940"/>
        <function-ref name="clr" scoped="" ref="0x40418a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40421e48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40421e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420050"/>
        <function-ref name="isInput" scoped="" ref="0x40420130"/>
        <function-ref name="toggle" scoped="" ref="0x40420210"/>
        <function-ref name="isOutput" scoped="" ref="0x404202f0"/>
        <function-ref name="get" scoped="" ref="0x404203d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404204b0"/>
        <function-ref name="set" scoped="" ref="0x40420590"/>
        <function-ref name="clr" scoped="" ref="0x40420670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041fac8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4041fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4041fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e010"/>
        <function-ref name="get" scoped="" ref="0x4041e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e1d0"/>
        <function-ref name="set" scoped="" ref="0x4041e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4041e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40418b80" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40418b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418d58"/>
        <function-ref name="isInput" scoped="" ref="0x40418e38"/>
        <function-ref name="toggle" scoped="" ref="0x40418f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40421010"/>
        <function-ref name="get" scoped="" ref="0x404210f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404211d0"/>
        <function-ref name="set" scoped="" ref="0x404212b0"/>
        <function-ref name="clr" scoped="" ref="0x40421390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404207d0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404207d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404209a8"/>
        <function-ref name="isInput" scoped="" ref="0x40420a88"/>
        <function-ref name="toggle" scoped="" ref="0x40420b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40420c48"/>
        <function-ref name="get" scoped="" ref="0x40420d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420e08"/>
        <function-ref name="set" scoped="" ref="0x40420ee8"/>
        <function-ref name="clr" scoped="" ref="0x4041f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041e4f0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e968"/>
        <function-ref name="get" scoped="" ref="0x4041ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041eb28"/>
        <function-ref name="set" scoped="" ref="0x4041ec08"/>
        <function-ref name="clr" scoped="" ref="0x4041ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef0228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef0400"/>
        <function-ref name="isInput" scoped="" ref="0x40ef04e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ef05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef06a0"/>
        <function-ref name="get" scoped="" ref="0x40ef0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef0860"/>
        <function-ref name="set" scoped="" ref="0x40ef0940"/>
        <function-ref name="clr" scoped="" ref="0x40ef0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eefc08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eefc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eefde0"/>
        <function-ref name="isInput" scoped="" ref="0x40eefec0"/>
        <function-ref name="toggle" scoped="" ref="0x40eee010"/>
        <function-ref name="isOutput" scoped="" ref="0x40eee0f0"/>
        <function-ref name="get" scoped="" ref="0x40eee1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eee2b0"/>
        <function-ref name="set" scoped="" ref="0x40eee390"/>
        <function-ref name="clr" scoped="" ref="0x40eee470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eed6c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eed898"/>
        <function-ref name="isInput" scoped="" ref="0x40eed978"/>
        <function-ref name="toggle" scoped="" ref="0x40eeda58"/>
        <function-ref name="isOutput" scoped="" ref="0x40eedb38"/>
        <function-ref name="get" scoped="" ref="0x40eedc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eedcf8"/>
        <function-ref name="set" scoped="" ref="0x40eeddd8"/>
        <function-ref name="clr" scoped="" ref="0x40eedeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eeb0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eeb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eeb288"/>
        <function-ref name="isInput" scoped="" ref="0x40eeb368"/>
        <function-ref name="toggle" scoped="" ref="0x40eeb448"/>
        <function-ref name="isOutput" scoped="" ref="0x40eeb528"/>
        <function-ref name="get" scoped="" ref="0x40eeb608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eeb6e8"/>
        <function-ref name="set" scoped="" ref="0x40eeb7c8"/>
        <function-ref name="clr" scoped="" ref="0x40eeb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eeaa88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eeaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eeac60"/>
        <function-ref name="isInput" scoped="" ref="0x40eead40"/>
        <function-ref name="toggle" scoped="" ref="0x40eeae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40eeaf00"/>
        <function-ref name="get" scoped="" ref="0x40ee9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee90f0"/>
        <function-ref name="set" scoped="" ref="0x40ee91d0"/>
        <function-ref name="clr" scoped="" ref="0x40ee92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee8538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee8710"/>
        <function-ref name="isInput" scoped="" ref="0x40ee87f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee89b0"/>
        <function-ref name="get" scoped="" ref="0x40ee8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee8b70"/>
        <function-ref name="set" scoped="" ref="0x40ee8c50"/>
        <function-ref name="clr" scoped="" ref="0x40ee8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee6010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee61e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ee62c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ee63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee6488"/>
        <function-ref name="get" scoped="" ref="0x40ee6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee6648"/>
        <function-ref name="set" scoped="" ref="0x40ee6728"/>
        <function-ref name="clr" scoped="" ref="0x40ee6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee59e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ee5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ee5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee5e60"/>
        <function-ref name="get" scoped="" ref="0x40ee4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee40f0"/>
        <function-ref name="set" scoped="" ref="0x40ee41d0"/>
        <function-ref name="clr" scoped="" ref="0x40ee42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40424e48" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40424e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423050"/>
        <function-ref name="isInput" scoped="" ref="0x40423130"/>
        <function-ref name="toggle" scoped="" ref="0x40423210"/>
        <function-ref name="isOutput" scoped="" ref="0x404232f0"/>
        <function-ref name="get" scoped="" ref="0x404233d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404234b0"/>
        <function-ref name="set" scoped="" ref="0x40423590"/>
        <function-ref name="clr" scoped="" ref="0x40423670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40422ac8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40422ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40422d80"/>
        <function-ref name="toggle" scoped="" ref="0x40422e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d010"/>
        <function-ref name="get" scoped="" ref="0x4042d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d1d0"/>
        <function-ref name="set" scoped="" ref="0x4042d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40425b00" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40425b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40425db8"/>
        <function-ref name="toggle" scoped="" ref="0x40425e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40424010"/>
        <function-ref name="get" scoped="" ref="0x404240f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404241d0"/>
        <function-ref name="set" scoped="" ref="0x404242b0"/>
        <function-ref name="clr" scoped="" ref="0x40424390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404237d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404237d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404239a8"/>
        <function-ref name="isInput" scoped="" ref="0x40423a88"/>
        <function-ref name="toggle" scoped="" ref="0x40423b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40423c48"/>
        <function-ref name="get" scoped="" ref="0x40423d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423e08"/>
        <function-ref name="set" scoped="" ref="0x40423ee8"/>
        <function-ref name="clr" scoped="" ref="0x40422010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042d4f0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d968"/>
        <function-ref name="get" scoped="" ref="0x4042da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042db28"/>
        <function-ref name="set" scoped="" ref="0x4042dc08"/>
        <function-ref name="clr" scoped="" ref="0x4042dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404244f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404244f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404246c8"/>
        <function-ref name="isInput" scoped="" ref="0x404247a8"/>
        <function-ref name="toggle" scoped="" ref="0x40424888"/>
        <function-ref name="isOutput" scoped="" ref="0x40424968"/>
        <function-ref name="get" scoped="" ref="0x40424a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424b28"/>
        <function-ref name="set" scoped="" ref="0x40424c08"/>
        <function-ref name="clr" scoped="" ref="0x40424ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40422170" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40422170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422348"/>
        <function-ref name="isInput" scoped="" ref="0x40422428"/>
        <function-ref name="toggle" scoped="" ref="0x40422508"/>
        <function-ref name="isOutput" scoped="" ref="0x404225e8"/>
        <function-ref name="get" scoped="" ref="0x404226c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404227a8"/>
        <function-ref name="set" scoped="" ref="0x40422888"/>
        <function-ref name="clr" scoped="" ref="0x40422968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042de48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c050"/>
        <function-ref name="isInput" scoped="" ref="0x4042c130"/>
        <function-ref name="toggle" scoped="" ref="0x4042c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c2f0"/>
        <function-ref name="get" scoped="" ref="0x4042c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c4b0"/>
        <function-ref name="set" scoped="" ref="0x4042c590"/>
        <function-ref name="clr" scoped="" ref="0x4042c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f2bde8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f2bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f27010"/>
        <function-ref name="isInput" scoped="" ref="0x40f270f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f271d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f272b0"/>
        <function-ref name="get" scoped="" ref="0x40f27390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f27470"/>
        <function-ref name="set" scoped="" ref="0x40f27550"/>
        <function-ref name="clr" scoped="" ref="0x40f27630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f267f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f267f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f269d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f26ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f26b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f26c70"/>
        <function-ref name="get" scoped="" ref="0x40f26d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f26e30"/>
        <function-ref name="set" scoped="" ref="0x40f26f10"/>
        <function-ref name="clr" scoped="" ref="0x40f24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f23228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f23228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f23400"/>
        <function-ref name="isInput" scoped="" ref="0x40f234e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f235c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f236a0"/>
        <function-ref name="get" scoped="" ref="0x40f23780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f23860"/>
        <function-ref name="set" scoped="" ref="0x40f23940"/>
        <function-ref name="clr" scoped="" ref="0x40f23a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f22c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f22c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f22de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f22ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f21010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f210f0"/>
        <function-ref name="get" scoped="" ref="0x40f211d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f212b0"/>
        <function-ref name="set" scoped="" ref="0x40f21390"/>
        <function-ref name="clr" scoped="" ref="0x40f21470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f206c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f206c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f20898"/>
        <function-ref name="isInput" scoped="" ref="0x40f20978"/>
        <function-ref name="toggle" scoped="" ref="0x40f20a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f20b38"/>
        <function-ref name="get" scoped="" ref="0x40f20c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f20cf8"/>
        <function-ref name="set" scoped="" ref="0x40f20dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f20eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1e0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1e288"/>
        <function-ref name="isInput" scoped="" ref="0x40f1e368"/>
        <function-ref name="toggle" scoped="" ref="0x40f1e448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1e528"/>
        <function-ref name="get" scoped="" ref="0x40f1e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1e6e8"/>
        <function-ref name="set" scoped="" ref="0x40f1e7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f1e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1da88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1dc60"/>
        <function-ref name="isInput" scoped="" ref="0x40f1dd40"/>
        <function-ref name="toggle" scoped="" ref="0x40f1de20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1df00"/>
        <function-ref name="get" scoped="" ref="0x40f53010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f530f0"/>
        <function-ref name="set" scoped="" ref="0x40f531d0"/>
        <function-ref name="clr" scoped="" ref="0x40f532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f52538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f52538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f52710"/>
        <function-ref name="isInput" scoped="" ref="0x40f527f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f528d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f529b0"/>
        <function-ref name="get" scoped="" ref="0x40f52a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f52b70"/>
        <function-ref name="set" scoped="" ref="0x40f52c50"/>
        <function-ref name="clr" scoped="" ref="0x40f52d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404336b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433888"/>
        <function-ref name="isInput" scoped="" ref="0x40433968"/>
        <function-ref name="toggle" scoped="" ref="0x40433a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40433b28"/>
        <function-ref name="get" scoped="" ref="0x40433c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433ce8"/>
        <function-ref name="set" scoped="" ref="0x40433dc8"/>
        <function-ref name="clr" scoped="" ref="0x40433ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40431330" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40431330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431508"/>
        <function-ref name="isInput" scoped="" ref="0x404315e8"/>
        <function-ref name="toggle" scoped="" ref="0x404316c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404317a8"/>
        <function-ref name="get" scoped="" ref="0x40431888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431968"/>
        <function-ref name="set" scoped="" ref="0x40431a48"/>
        <function-ref name="clr" scoped="" ref="0x40431b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404293d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404293d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404295b0"/>
        <function-ref name="isInput" scoped="" ref="0x40429690"/>
        <function-ref name="toggle" scoped="" ref="0x40429770"/>
        <function-ref name="isOutput" scoped="" ref="0x40429850"/>
        <function-ref name="get" scoped="" ref="0x40429930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429a10"/>
        <function-ref name="set" scoped="" ref="0x40429af0"/>
        <function-ref name="clr" scoped="" ref="0x40429bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40432030" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40432030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432208"/>
        <function-ref name="isInput" scoped="" ref="0x404322e8"/>
        <function-ref name="toggle" scoped="" ref="0x404323c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404324a8"/>
        <function-ref name="get" scoped="" ref="0x40432588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432668"/>
        <function-ref name="set" scoped="" ref="0x40432748"/>
        <function-ref name="clr" scoped="" ref="0x40432828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40431c88" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40431c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431e60"/>
        <function-ref name="isInput" scoped="" ref="0x40430010"/>
        <function-ref name="toggle" scoped="" ref="0x404300f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404301d0"/>
        <function-ref name="get" scoped="" ref="0x404302b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430390"/>
        <function-ref name="set" scoped="" ref="0x40430470"/>
        <function-ref name="clr" scoped="" ref="0x40430550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40429d30" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40429d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429f08"/>
        <function-ref name="isInput" scoped="" ref="0x40433010"/>
        <function-ref name="toggle" scoped="" ref="0x404330f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404331d0"/>
        <function-ref name="get" scoped="" ref="0x404332b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433390"/>
        <function-ref name="set" scoped="" ref="0x40433470"/>
        <function-ref name="clr" scoped="" ref="0x40433550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40432988" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40432988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432b60"/>
        <function-ref name="isInput" scoped="" ref="0x40432c40"/>
        <function-ref name="toggle" scoped="" ref="0x40432d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40432e00"/>
        <function-ref name="get" scoped="" ref="0x40432ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431010"/>
        <function-ref name="set" scoped="" ref="0x404310f0"/>
        <function-ref name="clr" scoped="" ref="0x404311d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404306b0" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404306b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430888"/>
        <function-ref name="isInput" scoped="" ref="0x40430968"/>
        <function-ref name="toggle" scoped="" ref="0x40430a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40430b28"/>
        <function-ref name="get" scoped="" ref="0x40430c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430ce8"/>
        <function-ref name="set" scoped="" ref="0x40430dc8"/>
        <function-ref name="clr" scoped="" ref="0x40430ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5e938" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5eb10"/>
        <function-ref name="isInput" scoped="" ref="0x40f5ebf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f5ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5edb0"/>
        <function-ref name="get" scoped="" ref="0x40f5ee90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5d010"/>
        <function-ref name="set" scoped="" ref="0x40f5d0f0"/>
        <function-ref name="clr" scoped="" ref="0x40f5d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5c3b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5c588"/>
        <function-ref name="isInput" scoped="" ref="0x40f5c668"/>
        <function-ref name="toggle" scoped="" ref="0x40f5c748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5c828"/>
        <function-ref name="get" scoped="" ref="0x40f5c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5c9e8"/>
        <function-ref name="set" scoped="" ref="0x40f5cac8"/>
        <function-ref name="clr" scoped="" ref="0x40f5cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f5bd70" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f5bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f5a010"/>
        <function-ref name="isInput" scoped="" ref="0x40f5a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f5a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f5a2b0"/>
        <function-ref name="get" scoped="" ref="0x40f5a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f5a470"/>
        <function-ref name="set" scoped="" ref="0x40f5a550"/>
        <function-ref name="clr" scoped="" ref="0x40f5a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f597f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f597f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f599d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f59ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f59b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f59c70"/>
        <function-ref name="get" scoped="" ref="0x40f59d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f59e30"/>
        <function-ref name="set" scoped="" ref="0x40f59f10"/>
        <function-ref name="clr" scoped="" ref="0x40f58010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f57228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f57228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f57400"/>
        <function-ref name="isInput" scoped="" ref="0x40f574e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f575c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f576a0"/>
        <function-ref name="get" scoped="" ref="0x40f57780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f57860"/>
        <function-ref name="set" scoped="" ref="0x40f57940"/>
        <function-ref name="clr" scoped="" ref="0x40f57a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f56c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f56c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f56de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f56ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f55010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f550f0"/>
        <function-ref name="get" scoped="" ref="0x40f551d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f552b0"/>
        <function-ref name="set" scoped="" ref="0x40f55390"/>
        <function-ref name="clr" scoped="" ref="0x40f55470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f546c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f54898"/>
        <function-ref name="isInput" scoped="" ref="0x40f54978"/>
        <function-ref name="toggle" scoped="" ref="0x40f54a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f54b38"/>
        <function-ref name="get" scoped="" ref="0x40f54c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f54cf8"/>
        <function-ref name="set" scoped="" ref="0x40f54dd8"/>
        <function-ref name="clr" scoped="" ref="0x40f54eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8a0b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8a288"/>
        <function-ref name="isInput" scoped="" ref="0x40f8a368"/>
        <function-ref name="toggle" scoped="" ref="0x40f8a448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8a528"/>
        <function-ref name="get" scoped="" ref="0x40f8a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8a6e8"/>
        <function-ref name="set" scoped="" ref="0x40f8a7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f8a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40437170" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40437170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437348"/>
        <function-ref name="isInput" scoped="" ref="0x40437428"/>
        <function-ref name="toggle" scoped="" ref="0x40437508"/>
        <function-ref name="isOutput" scoped="" ref="0x404375e8"/>
        <function-ref name="get" scoped="" ref="0x404376c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404377a8"/>
        <function-ref name="set" scoped="" ref="0x40437888"/>
        <function-ref name="clr" scoped="" ref="0x40437968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40436e48" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40436e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435050"/>
        <function-ref name="isInput" scoped="" ref="0x40435130"/>
        <function-ref name="toggle" scoped="" ref="0x40435210"/>
        <function-ref name="isOutput" scoped="" ref="0x404352f0"/>
        <function-ref name="get" scoped="" ref="0x404353d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404354b0"/>
        <function-ref name="set" scoped="" ref="0x40435590"/>
        <function-ref name="clr" scoped="" ref="0x40435670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40439dc8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40439dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438010"/>
        <function-ref name="isInput" scoped="" ref="0x404380f0"/>
        <function-ref name="toggle" scoped="" ref="0x404381d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404382b0"/>
        <function-ref name="get" scoped="" ref="0x40438390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438470"/>
        <function-ref name="set" scoped="" ref="0x40438550"/>
        <function-ref name="clr" scoped="" ref="0x40438630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40437ac8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40437ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40437d80"/>
        <function-ref name="toggle" scoped="" ref="0x40437e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40436010"/>
        <function-ref name="get" scoped="" ref="0x404360f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404361d0"/>
        <function-ref name="set" scoped="" ref="0x404362b0"/>
        <function-ref name="clr" scoped="" ref="0x40436390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404357d0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404357d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404359a8"/>
        <function-ref name="isInput" scoped="" ref="0x40435a88"/>
        <function-ref name="toggle" scoped="" ref="0x40435b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40435c48"/>
        <function-ref name="get" scoped="" ref="0x40435d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435e08"/>
        <function-ref name="set" scoped="" ref="0x40435ee8"/>
        <function-ref name="clr" scoped="" ref="0x4043f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40438790" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40438790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438968"/>
        <function-ref name="isInput" scoped="" ref="0x40438a48"/>
        <function-ref name="toggle" scoped="" ref="0x40438b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40438c08"/>
        <function-ref name="get" scoped="" ref="0x40438ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438dc8"/>
        <function-ref name="set" scoped="" ref="0x40438ea8"/>
        <function-ref name="clr" scoped="" ref="0x40437010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404364f0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404364f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404366c8"/>
        <function-ref name="isInput" scoped="" ref="0x404367a8"/>
        <function-ref name="toggle" scoped="" ref="0x40436888"/>
        <function-ref name="isOutput" scoped="" ref="0x40436968"/>
        <function-ref name="get" scoped="" ref="0x40436a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436b28"/>
        <function-ref name="set" scoped="" ref="0x40436c08"/>
        <function-ref name="clr" scoped="" ref="0x40436ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4043f170" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4043f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f348"/>
        <function-ref name="isInput" scoped="" ref="0x4043f428"/>
        <function-ref name="toggle" scoped="" ref="0x4043f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f5e8"/>
        <function-ref name="get" scoped="" ref="0x4043f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f7a8"/>
        <function-ref name="set" scoped="" ref="0x4043f888"/>
        <function-ref name="clr" scoped="" ref="0x4043f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f95538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f95538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f95710"/>
        <function-ref name="isInput" scoped="" ref="0x40f957f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f958d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f959b0"/>
        <function-ref name="get" scoped="" ref="0x40f95a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f95b70"/>
        <function-ref name="set" scoped="" ref="0x40f95c50"/>
        <function-ref name="clr" scoped="" ref="0x40f95d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f93010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f931e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f932c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f933a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f93488"/>
        <function-ref name="get" scoped="" ref="0x40f93568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f93648"/>
        <function-ref name="set" scoped="" ref="0x40f93728"/>
        <function-ref name="clr" scoped="" ref="0x40f93808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f929e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f929e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f92bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f92ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f92d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f92e60"/>
        <function-ref name="get" scoped="" ref="0x40f91010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f910f0"/>
        <function-ref name="set" scoped="" ref="0x40f911d0"/>
        <function-ref name="clr" scoped="" ref="0x40f912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f90538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f90538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f90710"/>
        <function-ref name="isInput" scoped="" ref="0x40f907f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f908d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f909b0"/>
        <function-ref name="get" scoped="" ref="0x40f90a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f90b70"/>
        <function-ref name="set" scoped="" ref="0x40f90c50"/>
        <function-ref name="clr" scoped="" ref="0x40f90d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8e010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f8e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f8e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8e488"/>
        <function-ref name="get" scoped="" ref="0x40f8e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8e648"/>
        <function-ref name="set" scoped="" ref="0x40f8e728"/>
        <function-ref name="clr" scoped="" ref="0x40f8e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8d9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f8dca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f8dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8de60"/>
        <function-ref name="get" scoped="" ref="0x40f8c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8c0f0"/>
        <function-ref name="set" scoped="" ref="0x40f8c1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f8c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc4538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc4710"/>
        <function-ref name="isInput" scoped="" ref="0x40fc47f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc49b0"/>
        <function-ref name="get" scoped="" ref="0x40fc4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc4b70"/>
        <function-ref name="set" scoped="" ref="0x40fc4c50"/>
        <function-ref name="clr" scoped="" ref="0x40fc4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc2010" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc21e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fc22c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fc23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc2488"/>
        <function-ref name="get" scoped="" ref="0x40fc2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc2648"/>
        <function-ref name="set" scoped="" ref="0x40fc2728"/>
        <function-ref name="clr" scoped="" ref="0x40fc2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4043b9e8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4043b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4043bca0"/>
        <function-ref name="toggle" scoped="" ref="0x4043bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4043be60"/>
        <function-ref name="get" scoped="" ref="0x4043a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a0f0"/>
        <function-ref name="set" scoped="" ref="0x4043a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4043a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40445790" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40445790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445968"/>
        <function-ref name="isInput" scoped="" ref="0x40445a48"/>
        <function-ref name="toggle" scoped="" ref="0x40445b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40445c08"/>
        <function-ref name="get" scoped="" ref="0x40445ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40445dc8"/>
        <function-ref name="set" scoped="" ref="0x40445ea8"/>
        <function-ref name="clr" scoped="" ref="0x40444010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043c6f8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4043c9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4043ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x4043cb70"/>
        <function-ref name="get" scoped="" ref="0x4043cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043cd30"/>
        <function-ref name="set" scoped="" ref="0x4043ce10"/>
        <function-ref name="clr" scoped="" ref="0x4043cef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4043a410" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4043a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a888"/>
        <function-ref name="get" scoped="" ref="0x4043a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043aa48"/>
        <function-ref name="set" scoped="" ref="0x4043ab28"/>
        <function-ref name="clr" scoped="" ref="0x4043ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40444170" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40444170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444348"/>
        <function-ref name="isInput" scoped="" ref="0x40444428"/>
        <function-ref name="toggle" scoped="" ref="0x40444508"/>
        <function-ref name="isOutput" scoped="" ref="0x404445e8"/>
        <function-ref name="get" scoped="" ref="0x404446c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404447a8"/>
        <function-ref name="set" scoped="" ref="0x40444888"/>
        <function-ref name="clr" scoped="" ref="0x40444968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043b090" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b268"/>
        <function-ref name="isInput" scoped="" ref="0x4043b348"/>
        <function-ref name="toggle" scoped="" ref="0x4043b428"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b508"/>
        <function-ref name="get" scoped="" ref="0x4043b5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b6c8"/>
        <function-ref name="set" scoped="" ref="0x4043b7a8"/>
        <function-ref name="clr" scoped="" ref="0x4043b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4043ad68" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4043ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40445010"/>
        <function-ref name="isInput" scoped="" ref="0x404450f0"/>
        <function-ref name="toggle" scoped="" ref="0x404451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404452b0"/>
        <function-ref name="get" scoped="" ref="0x40445390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40445470"/>
        <function-ref name="set" scoped="" ref="0x40445550"/>
        <function-ref name="clr" scoped="" ref="0x40445630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40444ac8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40444ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40444d80"/>
        <function-ref name="toggle" scoped="" ref="0x40444e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40443010"/>
        <function-ref name="get" scoped="" ref="0x404430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404431d0"/>
        <function-ref name="set" scoped="" ref="0x404432b0"/>
        <function-ref name="clr" scoped="" ref="0x40443390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fd0418" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fd0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd05f0"/>
        <function-ref name="isInput" scoped="" ref="0x40fd06d0"/>
        <function-ref name="toggle" scoped="" ref="0x40fd07b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd0890"/>
        <function-ref name="get" scoped="" ref="0x40fd0970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd0a50"/>
        <function-ref name="set" scoped="" ref="0x40fd0b30"/>
        <function-ref name="clr" scoped="" ref="0x40fd0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcfde0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fce010"/>
        <function-ref name="isInput" scoped="" ref="0x40fce0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fce1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fce2b0"/>
        <function-ref name="get" scoped="" ref="0x40fce390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fce470"/>
        <function-ref name="set" scoped="" ref="0x40fce550"/>
        <function-ref name="clr" scoped="" ref="0x40fce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcd7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fcdab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fcdb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcdc70"/>
        <function-ref name="get" scoped="" ref="0x40fcdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcde30"/>
        <function-ref name="set" scoped="" ref="0x40fcdf10"/>
        <function-ref name="clr" scoped="" ref="0x40fcc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcb228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcb400"/>
        <function-ref name="isInput" scoped="" ref="0x40fcb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fcb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fcb6a0"/>
        <function-ref name="get" scoped="" ref="0x40fcb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fcb860"/>
        <function-ref name="set" scoped="" ref="0x40fcb940"/>
        <function-ref name="clr" scoped="" ref="0x40fcba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fcac08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fcac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fcade0"/>
        <function-ref name="isInput" scoped="" ref="0x40fcaec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc9010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc90f0"/>
        <function-ref name="get" scoped="" ref="0x40fc91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc92b0"/>
        <function-ref name="set" scoped="" ref="0x40fc9390"/>
        <function-ref name="clr" scoped="" ref="0x40fc9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc86c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc8898"/>
        <function-ref name="isInput" scoped="" ref="0x40fc8978"/>
        <function-ref name="toggle" scoped="" ref="0x40fc8a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc8b38"/>
        <function-ref name="get" scoped="" ref="0x40fc8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc8cf8"/>
        <function-ref name="set" scoped="" ref="0x40fc8dd8"/>
        <function-ref name="clr" scoped="" ref="0x40fc8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc60b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc6288"/>
        <function-ref name="isInput" scoped="" ref="0x40fc6368"/>
        <function-ref name="toggle" scoped="" ref="0x40fc6448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc6528"/>
        <function-ref name="get" scoped="" ref="0x40fc6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc66e8"/>
        <function-ref name="set" scoped="" ref="0x40fc67c8"/>
        <function-ref name="clr" scoped="" ref="0x40fc68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc5a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc5c60"/>
        <function-ref name="isInput" scoped="" ref="0x40fc5d40"/>
        <function-ref name="toggle" scoped="" ref="0x40fc5e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc5f00"/>
        <function-ref name="get" scoped="" ref="0x40ffe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ffe0f0"/>
        <function-ref name="set" scoped="" ref="0x40ffe1d0"/>
        <function-ref name="clr" scoped="" ref="0x40ffe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4044a330" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4044a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044a508"/>
        <function-ref name="isInput" scoped="" ref="0x4044a5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044a7a8"/>
        <function-ref name="get" scoped="" ref="0x4044a888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a968"/>
        <function-ref name="set" scoped="" ref="0x4044aa48"/>
        <function-ref name="clr" scoped="" ref="0x4044ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40448030" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40448030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448208"/>
        <function-ref name="isInput" scoped="" ref="0x404482e8"/>
        <function-ref name="toggle" scoped="" ref="0x404483c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404484a8"/>
        <function-ref name="get" scoped="" ref="0x40448588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40448668"/>
        <function-ref name="set" scoped="" ref="0x40448748"/>
        <function-ref name="clr" scoped="" ref="0x40448828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4044b010" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4044b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4044b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4044b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b488"/>
        <function-ref name="get" scoped="" ref="0x4044b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b648"/>
        <function-ref name="set" scoped="" ref="0x4044b728"/>
        <function-ref name="clr" scoped="" ref="0x4044b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4044ac88" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4044ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044ae60"/>
        <function-ref name="isInput" scoped="" ref="0x40449010"/>
        <function-ref name="toggle" scoped="" ref="0x404490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404491d0"/>
        <function-ref name="get" scoped="" ref="0x404492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449390"/>
        <function-ref name="set" scoped="" ref="0x40449470"/>
        <function-ref name="clr" scoped="" ref="0x40449550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40448988" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40448988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40448b60"/>
        <function-ref name="isInput" scoped="" ref="0x40448c40"/>
        <function-ref name="toggle" scoped="" ref="0x40448d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40448e00"/>
        <function-ref name="get" scoped="" ref="0x40448ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447010"/>
        <function-ref name="set" scoped="" ref="0x404470f0"/>
        <function-ref name="clr" scoped="" ref="0x404471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4044b968" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4044b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044bb40"/>
        <function-ref name="isInput" scoped="" ref="0x4044bc20"/>
        <function-ref name="toggle" scoped="" ref="0x4044bd00"/>
        <function-ref name="isOutput" scoped="" ref="0x4044bde0"/>
        <function-ref name="get" scoped="" ref="0x4044bec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044a010"/>
        <function-ref name="set" scoped="" ref="0x4044a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4044a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404496b0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404496b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449888"/>
        <function-ref name="isInput" scoped="" ref="0x40449968"/>
        <function-ref name="toggle" scoped="" ref="0x40449a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40449b28"/>
        <function-ref name="get" scoped="" ref="0x40449c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449ce8"/>
        <function-ref name="set" scoped="" ref="0x40449dc8"/>
        <function-ref name="clr" scoped="" ref="0x40449ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40447330" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40447330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447508"/>
        <function-ref name="isInput" scoped="" ref="0x404475e8"/>
        <function-ref name="toggle" scoped="" ref="0x404476c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404477a8"/>
        <function-ref name="get" scoped="" ref="0x40447888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447968"/>
        <function-ref name="set" scoped="" ref="0x40447a48"/>
        <function-ref name="clr" scoped="" ref="0x40447b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41010de8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41010de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100b010"/>
        <function-ref name="isInput" scoped="" ref="0x4100b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4100b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4100b2b0"/>
        <function-ref name="get" scoped="" ref="0x4100b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100b470"/>
        <function-ref name="set" scoped="" ref="0x4100b550"/>
        <function-ref name="clr" scoped="" ref="0x4100b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4100a7f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4100a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4100a9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4100aab0"/>
        <function-ref name="toggle" scoped="" ref="0x4100ab90"/>
        <function-ref name="isOutput" scoped="" ref="0x4100ac70"/>
        <function-ref name="get" scoped="" ref="0x4100ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4100ae30"/>
        <function-ref name="set" scoped="" ref="0x4100af10"/>
        <function-ref name="clr" scoped="" ref="0x41009010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41008228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41008228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41008400"/>
        <function-ref name="isInput" scoped="" ref="0x410084e0"/>
        <function-ref name="toggle" scoped="" ref="0x410085c0"/>
        <function-ref name="isOutput" scoped="" ref="0x410086a0"/>
        <function-ref name="get" scoped="" ref="0x41008780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41008860"/>
        <function-ref name="set" scoped="" ref="0x41008940"/>
        <function-ref name="clr" scoped="" ref="0x41008a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41007c08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41007c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41007de0"/>
        <function-ref name="isInput" scoped="" ref="0x41007ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41006010"/>
        <function-ref name="isOutput" scoped="" ref="0x410060f0"/>
        <function-ref name="get" scoped="" ref="0x410061d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x410062b0"/>
        <function-ref name="set" scoped="" ref="0x41006390"/>
        <function-ref name="clr" scoped="" ref="0x41006470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410056c0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410056c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41005898"/>
        <function-ref name="isInput" scoped="" ref="0x41005978"/>
        <function-ref name="toggle" scoped="" ref="0x41005a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41005b38"/>
        <function-ref name="get" scoped="" ref="0x41005c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41005cf8"/>
        <function-ref name="set" scoped="" ref="0x41005dd8"/>
        <function-ref name="clr" scoped="" ref="0x41005eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x410030b0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x410030b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41003288"/>
        <function-ref name="isInput" scoped="" ref="0x41003368"/>
        <function-ref name="toggle" scoped="" ref="0x41003448"/>
        <function-ref name="isOutput" scoped="" ref="0x41003528"/>
        <function-ref name="get" scoped="" ref="0x41003608"/>
        <function-ref name="makeOutput" scoped="" ref="0x410036e8"/>
        <function-ref name="set" scoped="" ref="0x410037c8"/>
        <function-ref name="clr" scoped="" ref="0x410038a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41002a88" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41002a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41002c60"/>
        <function-ref name="isInput" scoped="" ref="0x41002d40"/>
        <function-ref name="toggle" scoped="" ref="0x41002e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41002f00"/>
        <function-ref name="get" scoped="" ref="0x41001010"/>
        <function-ref name="makeOutput" scoped="" ref="0x410010f0"/>
        <function-ref name="set" scoped="" ref="0x410011d0"/>
        <function-ref name="clr" scoped="" ref="0x410012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41000538" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41000538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41000710"/>
        <function-ref name="isInput" scoped="" ref="0x410007f0"/>
        <function-ref name="toggle" scoped="" ref="0x410008d0"/>
        <function-ref name="isOutput" scoped="" ref="0x410009b0"/>
        <function-ref name="get" scoped="" ref="0x41000a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41000b70"/>
        <function-ref name="set" scoped="" ref="0x41000c50"/>
        <function-ref name="clr" scoped="" ref="0x41000d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404502d0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404502d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404504a8"/>
        <function-ref name="isInput" scoped="" ref="0x40450588"/>
        <function-ref name="toggle" scoped="" ref="0x40450668"/>
        <function-ref name="isOutput" scoped="" ref="0x40450748"/>
        <function-ref name="get" scoped="" ref="0x40450828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450908"/>
        <function-ref name="set" scoped="" ref="0x404509e8"/>
        <function-ref name="clr" scoped="" ref="0x40450ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404588a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458a78"/>
        <function-ref name="isInput" scoped="" ref="0x40458b58"/>
        <function-ref name="toggle" scoped="" ref="0x40458c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40458d18"/>
        <function-ref name="get" scoped="" ref="0x40458df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458ed8"/>
        <function-ref name="set" scoped="" ref="0x40463010"/>
        <function-ref name="clr" scoped="" ref="0x404630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40462ec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40462ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404610c0"/>
        <function-ref name="isInput" scoped="" ref="0x404611a0"/>
        <function-ref name="toggle" scoped="" ref="0x40461280"/>
        <function-ref name="isOutput" scoped="" ref="0x40461360"/>
        <function-ref name="get" scoped="" ref="0x40461440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461520"/>
        <function-ref name="set" scoped="" ref="0x40461600"/>
        <function-ref name="clr" scoped="" ref="0x404616e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045f538" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f710"/>
        <function-ref name="isInput" scoped="" ref="0x4045f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4045f8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f9b0"/>
        <function-ref name="get" scoped="" ref="0x4045fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fb70"/>
        <function-ref name="set" scoped="" ref="0x4045fc50"/>
        <function-ref name="clr" scoped="" ref="0x4045fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40468b68" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40468b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468d40"/>
        <function-ref name="isInput" scoped="" ref="0x40468e20"/>
        <function-ref name="toggle" scoped="" ref="0x40468f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40467010"/>
        <function-ref name="get" scoped="" ref="0x404670f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404671d0"/>
        <function-ref name="set" scoped="" ref="0x404672b0"/>
        <function-ref name="clr" scoped="" ref="0x40467390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40465228" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40465228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465400"/>
        <function-ref name="isInput" scoped="" ref="0x404654e0"/>
        <function-ref name="toggle" scoped="" ref="0x404655c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404656a0"/>
        <function-ref name="get" scoped="" ref="0x40465780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465860"/>
        <function-ref name="set" scoped="" ref="0x40465940"/>
        <function-ref name="clr" scoped="" ref="0x40465a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046f8f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fac8"/>
        <function-ref name="isInput" scoped="" ref="0x4046fba8"/>
        <function-ref name="toggle" scoped="" ref="0x4046fc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fd68"/>
        <function-ref name="get" scoped="" ref="0x4046fe48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ff28"/>
        <function-ref name="set" scoped="" ref="0x4046e018"/>
        <function-ref name="clr" scoped="" ref="0x4046e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046cec0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046cec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b360"/>
        <function-ref name="get" scoped="" ref="0x4046b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b520"/>
        <function-ref name="set" scoped="" ref="0x4046b600"/>
        <function-ref name="clr" scoped="" ref="0x4046b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404753e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404753e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404755c0"/>
        <function-ref name="isInput" scoped="" ref="0x404756a0"/>
        <function-ref name="toggle" scoped="" ref="0x40475780"/>
        <function-ref name="isOutput" scoped="" ref="0x40475860"/>
        <function-ref name="get" scoped="" ref="0x40475940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475a20"/>
        <function-ref name="set" scoped="" ref="0x40475b00"/>
        <function-ref name="clr" scoped="" ref="0x40475be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404728f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404728f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472ac8"/>
        <function-ref name="isInput" scoped="" ref="0x40472ba8"/>
        <function-ref name="toggle" scoped="" ref="0x40472c88"/>
        <function-ref name="isOutput" scoped="" ref="0x40472d68"/>
        <function-ref name="get" scoped="" ref="0x40472e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472f28"/>
        <function-ref name="set" scoped="" ref="0x40471018"/>
        <function-ref name="clr" scoped="" ref="0x404710f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40470dd8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40470dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b010"/>
        <function-ref name="isInput" scoped="" ref="0x4047b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b2b0"/>
        <function-ref name="get" scoped="" ref="0x4047b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b470"/>
        <function-ref name="set" scoped="" ref="0x4047b550"/>
        <function-ref name="clr" scoped="" ref="0x4047b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404793b0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404793b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479588"/>
        <function-ref name="isInput" scoped="" ref="0x40479668"/>
        <function-ref name="toggle" scoped="" ref="0x40479748"/>
        <function-ref name="isOutput" scoped="" ref="0x40479828"/>
        <function-ref name="get" scoped="" ref="0x40479908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404799e8"/>
        <function-ref name="set" scoped="" ref="0x40479ac8"/>
        <function-ref name="clr" scoped="" ref="0x40479ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404768a0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476a78"/>
        <function-ref name="isInput" scoped="" ref="0x40476b58"/>
        <function-ref name="toggle" scoped="" ref="0x40476c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40476d18"/>
        <function-ref name="get" scoped="" ref="0x40476df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476ed8"/>
        <function-ref name="set" scoped="" ref="0x40481010"/>
        <function-ref name="clr" scoped="" ref="0x404810f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b64d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b64d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404b6888" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404b6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404b6a60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404b6b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404b6c20"/>
        <function-ref name="actualMicro" scoped="" ref="0x404b6d00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404b6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404cc220" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404cc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404b0090" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b0090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b0268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TinyOSBoot" ref="0x404cd3f8" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404cd3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404cde20" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404cde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x404cd798" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x404cd798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x404cd970"/>
        <function-ref name="init" scoped="" ref="0x404cda50"/>
        <function-ref name="taskLoop" scoped="" ref="0x404cdb30"/>
        <function-ref name="runNextTask" scoped="" ref="0x404cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404cc568" loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404cc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404cc740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404cc820"/>
        <function-ref name="led1On" scoped="" ref="0x404cc900"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404cc9e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404ccac0"/>
        <function-ref name="get" scoped="" ref="0x404ccba0"/>
        <function-ref name="led1Off" scoped="" ref="0x404ccc80"/>
        <function-ref name="led2Off" scoped="" ref="0x404cb018"/>
        <function-ref name="set" scoped="" ref="0x404ccd60"/>
        <function-ref name="led0On" scoped="" ref="0x404cce40"/>
        <function-ref name="led2On" scoped="" ref="0x404ccf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x404b0ef0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyOSMainP.nc">
      <component-ref qname="TinyOSMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404b0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404cd0e0"/>
        <function-ref name="reset" scoped="" ref="0x404cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d14e8" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404a0cb0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a0e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404d10e0" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404d10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d12b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSchedulerBoot" ref="0x404dc0f0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/RealMainImplP.nc">
      <component-ref qname="RealMainImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404dc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404dc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x403119e0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x403119e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40311bb8"/>
        <function-ref name="stopThread" scoped="" ref="0x40311c98"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40311d78"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40311e58"/>
        <function-ref name="startThread" scoped="" ref="0x402fd010"/>
        <function-ref name="threadInfo" scoped="" ref="0x402fd0f0"/>
        <function-ref name="initThread" scoped="" ref="0x402fd1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x402fd2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x402fd390"/>
        <function-ref name="joinThread" scoped="" ref="0x402fd470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x402fd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fed58" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402f4010"/>
        <function-ref name="runTask" scoped="" ref="0x402f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x402f64c8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyTaskSchedulerC.nc">
      <component-ref qname="TinyTaskSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x402f64c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x402f66a0"/>
        <function-ref name="init" scoped="" ref="0x402f6780"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f6860"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f6940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4038ca48" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4038ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4038cc20"/>
        <function-ref name="stopThread" scoped="" ref="0x4038cd00"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4038cde0"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4038cec0"/>
        <function-ref name="startThread" scoped="" ref="0x4038b010"/>
        <function-ref name="threadInfo" scoped="" ref="0x4038b0f0"/>
        <function-ref name="initThread" scoped="" ref="0x4038b1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x4038b2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4038b390"/>
        <function-ref name="joinThread" scoped="" ref="0x4038b470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4038b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038c598" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038c770"/>
        <function-ref name="runTask" scoped="" ref="0x4038c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskScheduler" ref="0x40385c68" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x40385c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x40385e40"/>
        <function-ref name="init" scoped="" ref="0x40385f20"/>
        <function-ref name="taskLoop" scoped="" ref="0x4038c018"/>
        <function-ref name="runNextTask" scoped="" ref="0x4038c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403936d8" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403936d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403938b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40393990"/>
        <function-ref name="led1On" scoped="" ref="0x40393a70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40393b50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40393c30"/>
        <function-ref name="get" scoped="" ref="0x40393d10"/>
        <function-ref name="led1Off" scoped="" ref="0x40393df0"/>
        <function-ref name="led2Off" scoped="" ref="0x4038a1d0"/>
        <function-ref name="set" scoped="" ref="0x40393ed0"/>
        <function-ref name="led0On" scoped="" ref="0x4038a010"/>
        <function-ref name="led2On" scoped="" ref="0x4038a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403a8e88" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403a8e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403a4070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403a2440" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403a2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403a2618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403a9148" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403a9148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403a9320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40316b60" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40316b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40316d38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40316e18"/>
        <function-ref name="led1On" scoped="" ref="0x40316ef8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403af010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403af0f0"/>
        <function-ref name="get" scoped="" ref="0x403af1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403af2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403af630"/>
        <function-ref name="set" scoped="" ref="0x403af390"/>
        <function-ref name="led0On" scoped="" ref="0x403af470"/>
        <function-ref name="led2On" scoped="" ref="0x403af550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x403b99a8" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403b99a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9b80"/>
        <function-ref name="isInput" scoped="" ref="0x403b9c60"/>
        <function-ref name="toggle" scoped="" ref="0x403b9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9e20"/>
        <function-ref name="get" scoped="" ref="0x403b9f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd010"/>
        <function-ref name="set" scoped="" ref="0x403bd0f0"/>
        <function-ref name="clr" scoped="" ref="0x403bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403b6778" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403b6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x403bd3c0" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403bd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd598"/>
        <function-ref name="isInput" scoped="" ref="0x403bd678"/>
        <function-ref name="toggle" scoped="" ref="0x403bd758"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd838"/>
        <function-ref name="get" scoped="" ref="0x403bd918"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd9f8"/>
        <function-ref name="set" scoped="" ref="0x403bdad8"/>
        <function-ref name="clr" scoped="" ref="0x403bdbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403b6ac0" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403b6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403b6c98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403b6d78"/>
        <function-ref name="led1On" scoped="" ref="0x403b6e58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403b5010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403b50f0"/>
        <function-ref name="get" scoped="" ref="0x403b51d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403b52b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403b5630"/>
        <function-ref name="set" scoped="" ref="0x403b5390"/>
        <function-ref name="led0On" scoped="" ref="0x403b5470"/>
        <function-ref name="led2On" scoped="" ref="0x403b5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x403bdda8" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403bdda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc010"/>
        <function-ref name="isInput" scoped="" ref="0x403bc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403bc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc2b0"/>
        <function-ref name="get" scoped="" ref="0x403bc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc470"/>
        <function-ref name="set" scoped="" ref="0x403bc550"/>
        <function-ref name="clr" scoped="" ref="0x403bc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x403d1010" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x403d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d11e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d12c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1488"/>
        <function-ref name="get" scoped="" ref="0x403d1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1648"/>
        <function-ref name="set" scoped="" ref="0x403d1728"/>
        <function-ref name="clr" scoped="" ref="0x403d1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x403d1a18" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x403d1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1bf0"/>
        <function-ref name="isInput" scoped="" ref="0x403d1cd0"/>
        <function-ref name="toggle" scoped="" ref="0x403d1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1e90"/>
        <function-ref name="get" scoped="" ref="0x403d0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d00f0"/>
        <function-ref name="set" scoped="" ref="0x403d01d0"/>
        <function-ref name="clr" scoped="" ref="0x403d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x403d0e48" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403d0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403cf050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x403d04c0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x403d04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0698"/>
        <function-ref name="isInput" scoped="" ref="0x403d0778"/>
        <function-ref name="toggle" scoped="" ref="0x403d0858"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0938"/>
        <function-ref name="get" scoped="" ref="0x403d0a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0af8"/>
        <function-ref name="set" scoped="" ref="0x403d0bd8"/>
        <function-ref name="clr" scoped="" ref="0x403d0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404da040" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404da040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404da218"/>
        <function-ref name="stopThread" scoped="" ref="0x404da2f8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404da3d8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404da4b8"/>
        <function-ref name="startThread" scoped="" ref="0x404da598"/>
        <function-ref name="threadInfo" scoped="" ref="0x404da678"/>
        <function-ref name="initThread" scoped="" ref="0x404da758"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x404da838"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404da918"/>
        <function-ref name="joinThread" scoped="" ref="0x404da9f8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404daad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404d7a38" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404d7a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404d7668" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404d7668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404d7840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404d7ea0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404d7ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404d90c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404d9548" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerC.nc">
      <component-ref qname="TinyThreadSchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404d9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404d9720"/>
        <function-ref name="reset" scoped="" ref="0x404d9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadScheduler" ref="0x404e3010" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x404e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x404e31e8"/>
        <function-ref name="stopThread" scoped="" ref="0x404e32c8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x404e33a8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x404e3488"/>
        <function-ref name="startThread" scoped="" ref="0x404e3568"/>
        <function-ref name="threadInfo" scoped="" ref="0x404e3648"/>
        <function-ref name="initThread" scoped="" ref="0x404e3728"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x404e3808"/>
        <function-ref name="wakeupThread" scoped="" ref="0x404e38e8"/>
        <function-ref name="joinThread" scoped="" ref="0x404e39c8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x404e3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyOSBoot" ref="0x404e3ca0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyOSBoot" scoped="" ref="0x404e3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404e3e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x404ea728" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x404ea728"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x404ea900"/>
        <function-ref name="isEmpty" scoped="" ref="0x404ea9e0"/>
        <function-ref name="init" scoped="" ref="0x404eaac0"/>
        <function-ref name="remove" scoped="" ref="0x404eaba0"/>
        <function-ref name="dequeue" scoped="" ref="0x404eac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitArrayUtils" ref="0x404e7ec8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x404e7ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x404e00c0"/>
        <function-ref name="clrArray" scoped="" ref="0x404e01a0"/>
        <function-ref name="getBit" scoped="" ref="0x404e0280"/>
        <function-ref name="setBit" scoped="" ref="0x404e0360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadCleanup" ref="0x404e2340" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x404e2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x404e2518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSchedulerBoot" ref="0x404e27a8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSchedulerBoot" scoped="" ref="0x404e27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404e2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x404e04f8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x404e04f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x404e06d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e0840" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e0a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e0af8"/>
        <function-ref name="led1On" scoped="" ref="0x404e0bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e0cb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e0d98"/>
        <function-ref name="get" scoped="" ref="0x404e0e78"/>
        <function-ref name="led1Off" scoped="" ref="0x404df010"/>
        <function-ref name="led2Off" scoped="" ref="0x404df390"/>
        <function-ref name="set" scoped="" ref="0x404df0f0"/>
        <function-ref name="led0On" scoped="" ref="0x404df1d0"/>
        <function-ref name="led2On" scoped="" ref="0x404df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x404e2e08" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TinyThreadSchedulerP.nc">
      <component-ref qname="TinyThreadSchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x404e2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404e1010"/>
        <function-ref name="reset" scoped="" ref="0x404e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitArrayUtils" ref="0x404d6730" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BitArrayUtilsC.nc">
      <component-ref qname="BitArrayUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitArrayUtils" scoped="" ref="0x404d6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitArrayUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="clrBit" scoped="" ref="0x404d6908"/>
        <function-ref name="clrArray" scoped="" ref="0x404d69e8"/>
        <function-ref name="getBit" scoped="" ref="0x404d6ac8"/>
        <function-ref name="setBit" scoped="" ref="0x404d6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x40556838" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueC.nc">
      <component-ref qname="ThreadQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40556838"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40556a10"/>
        <function-ref name="isEmpty" scoped="" ref="0x40556af0"/>
        <function-ref name="init" scoped="" ref="0x40556bd0"/>
        <function-ref name="remove" scoped="" ref="0x40556cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x40556d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkedList" ref="0x40579680" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/LinkedListC.nc">
      <component-ref qname="LinkedListC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40579680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40579858"/>
        <function-ref name="getLast" scoped="" ref="0x40579938"/>
        <function-ref name="indexOf" scoped="" ref="0x40579a18"/>
        <function-ref name="addAfter" scoped="" ref="0x40579af8"/>
        <function-ref name="addLast" scoped="" ref="0x40579bd8"/>
        <function-ref name="removeAt" scoped="" ref="0x40579cb8"/>
        <function-ref name="init" scoped="" ref="0x40579d98"/>
        <function-ref name="addAt" scoped="" ref="0x40579e78"/>
        <function-ref name="addFirst" scoped="" ref="0x40568010"/>
        <function-ref name="remove" scoped="" ref="0x405680f0"/>
        <function-ref name="removeBefore" scoped="" ref="0x405681d0"/>
        <function-ref name="getAfter" scoped="" ref="0x405682b0"/>
        <function-ref name="getAt" scoped="" ref="0x40568390"/>
        <function-ref name="removeLast" scoped="" ref="0x405684f0"/>
        <function-ref name="getBefore" scoped="" ref="0x405685d0"/>
        <function-ref name="addBefore" scoped="" ref="0x405686b0"/>
        <function-ref name="removeAfter" scoped="" ref="0x40568790"/>
        <function-ref name="getFirst" scoped="" ref="0x40568870"/>
        <function-ref name="removeFirst" scoped="" ref="0x40568950"/>
        <function-ref name="size" scoped="" ref="0x40568a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadQueue" ref="0x4056a700" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x4056a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4056a8d8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4056a9b8"/>
        <function-ref name="init" scoped="" ref="0x4056aa98"/>
        <function-ref name="remove" scoped="" ref="0x4056ab78"/>
        <function-ref name="dequeue" scoped="" ref="0x4056ac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x4056ae40" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadQueueP.nc">
      <component-ref qname="ThreadQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x4056ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405af050"/>
        <function-ref name="getLast" scoped="" ref="0x405af130"/>
        <function-ref name="indexOf" scoped="" ref="0x405af210"/>
        <function-ref name="addAfter" scoped="" ref="0x405af2f0"/>
        <function-ref name="addLast" scoped="" ref="0x405af3d0"/>
        <function-ref name="removeAt" scoped="" ref="0x405af4b0"/>
        <function-ref name="init" scoped="" ref="0x405af590"/>
        <function-ref name="addAt" scoped="" ref="0x405af670"/>
        <function-ref name="addFirst" scoped="" ref="0x405af750"/>
        <function-ref name="remove" scoped="" ref="0x405af830"/>
        <function-ref name="removeBefore" scoped="" ref="0x405af910"/>
        <function-ref name="getAfter" scoped="" ref="0x405af9f0"/>
        <function-ref name="getAt" scoped="" ref="0x405afad0"/>
        <function-ref name="removeLast" scoped="" ref="0x405afc30"/>
        <function-ref name="getBefore" scoped="" ref="0x405afd10"/>
        <function-ref name="addBefore" scoped="" ref="0x405afdf0"/>
        <function-ref name="removeAfter" scoped="" ref="0x405afed0"/>
        <function-ref name="getFirst" scoped="" ref="0x405ae010"/>
        <function-ref name="removeFirst" scoped="" ref="0x405ae0f0"/>
        <function-ref name="size" scoped="" ref="0x405ae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x405b7f08" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x405b7f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x405b60f0"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x405b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x405c46b8" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x405c46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x405c4890"/>
        <function-ref name="pause" scoped="" ref="0x405c4970"/>
        <function-ref name="resume" scoped="" ref="0x405c4a50"/>
        <function-ref name="join" scoped="" ref="0x405c4b30"/>
        <function-ref name="run" scoped="" ref="0x405c4c10"/>
        <function-ref name="start" scoped="" ref="0x405c4cf0"/>
        <function-ref name="sleep" scoped="" ref="0x405c4dd0"/>
        <function-ref name="stop" scoped="" ref="0x405c4eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405c0cd8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405c0cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405c0eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x405c0658" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x405c0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x405c0830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x405b6698" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadC.nc">
      <component-ref qname="StaticThreadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405b6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405b6870"/>
        <function-ref name="reset" scoped="" ref="0x405b6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x405bea98" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x405bea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x405bec70"/>
        <function-ref name="stopThread" scoped="" ref="0x405bed50"/>
        <function-ref name="currentThreadId" scoped="" ref="0x405bee30"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x405bef10"/>
        <function-ref name="startThread" scoped="" ref="0x405cf010"/>
        <function-ref name="threadInfo" scoped="" ref="0x405cf0f0"/>
        <function-ref name="initThread" scoped="" ref="0x405cf1d0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x405cf2b0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x405cf390"/>
        <function-ref name="joinThread" scoped="" ref="0x405cf470"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x405cf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x405be5c8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x405be5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x405be7a0"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x405be880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x405c2878" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x405c2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x405c2a50"/>
        <function-ref name="pause" scoped="" ref="0x405c2b30"/>
        <function-ref name="resume" scoped="" ref="0x405c2c10"/>
        <function-ref name="join" scoped="" ref="0x405c2cf0"/>
        <function-ref name="run" scoped="" ref="0x405c2dd0"/>
        <function-ref name="start" scoped="" ref="0x405c2eb0"/>
        <function-ref name="sleep" scoped="" ref="0x405be010"/>
        <function-ref name="stop" scoped="" ref="0x405be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405cc4b8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405cc4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405cc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadFunction" ref="0x405cedd8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x405cedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x405cc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadSleep" ref="0x405ce010" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadInfo" ref="0x405ce670" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405ce848"/>
        <function-ref name="reset" scoped="" ref="0x405ce928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405cc800" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/StaticThreadP.nc">
      <component-ref qname="StaticThreadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405cc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405cc9d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405ccab8"/>
        <function-ref name="led1On" scoped="" ref="0x405ccb98"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405ccc78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405ccd58"/>
        <function-ref name="get" scoped="" ref="0x405cce38"/>
        <function-ref name="led1Off" scoped="" ref="0x405ccf18"/>
        <function-ref name="led2Off" scoped="" ref="0x405cb2b0"/>
        <function-ref name="set" scoped="" ref="0x405cb010"/>
        <function-ref name="led0On" scoped="" ref="0x405cb0f0"/>
        <function-ref name="led2On" scoped="" ref="0x405cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x405ea2a8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405ea2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405ea480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x405eaa10" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x405eaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405eabe8"/>
        <function-ref name="reset" scoped="" ref="0x405eacc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x405c1b20" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405c1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405c1cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x405e9238" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapC.nc">
      <component-ref qname="ThreadMapC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e9238"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e9410"/>
        <function-ref name="reset" scoped="" ref="0x405e94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DynamicThreadCleanup" ref="0x405e4100" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadCleanup" scoped="" ref="0x405e4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e42d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StaticThreadInfo" ref="0x405e4868" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadInfo" scoped="" ref="0x405e4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e4a40"/>
        <function-ref name="reset" scoped="" ref="0x405e4b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadCleanup" ref="0x405e3860" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadCleanup" scoped="" ref="0x405e3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e3a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StaticThreadCleanup" ref="0x405e6940" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StaticThreadCleanup" scoped="" ref="0x405e6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadCleanup"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x405e6b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DynamicThreadInfo" ref="0x405e3100" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DynamicThreadInfo" scoped="" ref="0x405e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e32d8"/>
        <function-ref name="reset" scoped="" ref="0x405e33b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405e3ba8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405e3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405e3d80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405e3e60"/>
        <function-ref name="led1On" scoped="" ref="0x405e2010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405e20f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405e21d0"/>
        <function-ref name="get" scoped="" ref="0x405e22b0"/>
        <function-ref name="led1Off" scoped="" ref="0x405e2390"/>
        <function-ref name="led2Off" scoped="" ref="0x405e2710"/>
        <function-ref name="set" scoped="" ref="0x405e2470"/>
        <function-ref name="led0On" scoped="" ref="0x405e2550"/>
        <function-ref name="led2On" scoped="" ref="0x405e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x405e6100" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadMapP.nc">
      <component-ref qname="ThreadMapP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x405e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405e62d8"/>
        <function-ref name="reset" scoped="" ref="0x405e63b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x405f81d0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepC.nc">
      <component-ref qname="ThreadSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405f81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405f83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x406007c0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadTimersC.nc">
      <component-ref qname="ThreadTimersC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x406007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405f4330"/>
        <function-ref name="fired" scoped="" ref="0x405f5560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405f5c68"/>
        <function-ref name="isOneShot" scoped="" ref="0x405f5a10"/>
        <function-ref name="getdt" scoped="" ref="0x405f47e0"/>
        <function-ref name="gett0" scoped="" ref="0x405f4588"/>
        <function-ref name="isRunning" scoped="" ref="0x405f57b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40600de8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405f4010"/>
        <function-ref name="startOneShot" scoped="" ref="0x405f5088"/>
        <function-ref name="stop" scoped="" ref="0x405f5308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405fe660" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="ThreadTimersC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405fe660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4071a170"/>
        <function-ref name="fired" scoped="" ref="0x405fd3f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405fdb00"/>
        <function-ref name="isOneShot" scoped="" ref="0x405fd8a8"/>
        <function-ref name="getdt" scoped="" ref="0x4071a620"/>
        <function-ref name="gett0" scoped="" ref="0x4071a3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x405fd650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405fec88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405fde20"/>
        <function-ref name="startOneShot" scoped="" ref="0x405fef08"/>
        <function-ref name="stop" scoped="" ref="0x405fd1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40608010" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40608010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40606b00"/>
        <function-ref name="fired" scoped="" ref="0x40608d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406064c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40606268"/>
        <function-ref name="getdt" scoped="" ref="0x40617010"/>
        <function-ref name="gett0" scoped="" ref="0x40606d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40606010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40608638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406067e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406088b8"/>
        <function-ref name="stop" scoped="" ref="0x40608b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40614100" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40614100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40612be0"/>
        <function-ref name="fired" scoped="" ref="0x40614e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406125a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40612348"/>
        <function-ref name="getdt" scoped="" ref="0x406110b8"/>
        <function-ref name="gett0" scoped="" ref="0x40612e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406120f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40614728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406128c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406149a8"/>
        <function-ref name="stop" scoped="" ref="0x40614c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406100d0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406100d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40610718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40617890" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40617890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40617a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40626dc8" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40626dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40629530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40629a20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406297a8"/>
        <function-ref name="overflow" scoped="" ref="0x40629c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406207d8" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406207d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406209b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4061d1c8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4061d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40618690"/>
        <function-ref name="fired" scoped="" ref="0x4061de30"/>
        <function-ref name="startAt" scoped="" ref="0x40618350"/>
        <function-ref name="isRunning" scoped="" ref="0x406180d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40618908"/>
        <function-ref name="start" scoped="" ref="0x4061d918"/>
        <function-ref name="stop" scoped="" ref="0x4061dbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40623dd0" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40623dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bf350"/>
        <function-ref name="fired" scoped="" ref="0x406c0a88"/>
        <function-ref name="startAt" scoped="" ref="0x406bf010"/>
        <function-ref name="isRunning" scoped="" ref="0x406c0d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bf5c8"/>
        <function-ref name="start" scoped="" ref="0x406c0570"/>
        <function-ref name="stop" scoped="" ref="0x406c0810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40623998" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40623998"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40623b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406bf8f8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406bf8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406be068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406be558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406be2e0"/>
        <function-ref name="overflow" scoped="" ref="0x406be7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41075b60" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41075b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41075d38"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41075e18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41075ef8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x410b5010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x410b50f0"/>
        <function-ref name="setControl" scoped="" ref="0x410b51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4107cd18" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4107cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410791e8"/>
        <function-ref name="fired" scoped="" ref="0x4107b990"/>
        <function-ref name="startAt" scoped="" ref="0x4107be80"/>
        <function-ref name="isRunning" scoped="" ref="0x4107bc08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41079460"/>
        <function-ref name="start" scoped="" ref="0x4107b478"/>
        <function-ref name="stop" scoped="" ref="0x4107b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4107c8e0" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4107c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4107cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41079790" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41079790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41079ee0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410783e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41078170"/>
        <function-ref name="overflow" scoped="" ref="0x41078660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x410b4dc0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x410b4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x410b3010"/>
        <function-ref name="compareBusy" scoped="" ref="0x410b30f0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x410b31d0"/>
        <function-ref name="countBusy" scoped="" ref="0x410b32b0"/>
        <function-ref name="getAssr" scoped="" ref="0x410b3390"/>
        <function-ref name="setAssr" scoped="" ref="0x410b3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x410b53c0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x410b53c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x410b4918"/>
        <function-ref name="fired" scoped="" ref="0x410b5f20"/>
        <function-ref name="get" scoped="" ref="0x410b5a08"/>
        <function-ref name="reset" scoped="" ref="0x410b41b0"/>
        <function-ref name="isOn" scoped="" ref="0x410b4b90"/>
        <function-ref name="set" scoped="" ref="0x410b5c80"/>
        <function-ref name="start" scoped="" ref="0x410b4428"/>
        <function-ref name="stop" scoped="" ref="0x410b46a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41078950" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41078950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41075418"/>
        <function-ref name="test" scoped="" ref="0x41077f08"/>
        <function-ref name="get" scoped="" ref="0x41077010"/>
        <function-ref name="setScale" scoped="" ref="0x41075690"/>
        <function-ref name="getScale" scoped="" ref="0x41075930"/>
        <function-ref name="reset" scoped="" ref="0x410777a0"/>
        <function-ref name="overflow" scoped="" ref="0x41077528"/>
        <function-ref name="isOn" scoped="" ref="0x410751a0"/>
        <function-ref name="set" scoped="" ref="0x41077288"/>
        <function-ref name="start" scoped="" ref="0x41077a18"/>
        <function-ref name="stop" scoped="" ref="0x41077c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40679010" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40679010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406791e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406792c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406793a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40679488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40679568"/>
        <function-ref name="setControl" scoped="" ref="0x40679648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406764f8" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406764f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406766d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x406767b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40676890"/>
        <function-ref name="countBusy" scoped="" ref="0x40676970"/>
        <function-ref name="getAssr" scoped="" ref="0x40676a50"/>
        <function-ref name="setAssr" scoped="" ref="0x40676b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40679970" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40679970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40678f08"/>
        <function-ref name="fired" scoped="" ref="0x40678528"/>
        <function-ref name="get" scoped="" ref="0x40678010"/>
        <function-ref name="reset" scoped="" ref="0x406787a0"/>
        <function-ref name="isOn" scoped="" ref="0x406761a0"/>
        <function-ref name="set" scoped="" ref="0x40678288"/>
        <function-ref name="start" scoped="" ref="0x40678a18"/>
        <function-ref name="stop" scoped="" ref="0x40678c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4066bcb8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4066bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40666778"/>
        <function-ref name="test" scoped="" ref="0x40666288"/>
        <function-ref name="get" scoped="" ref="0x40667318"/>
        <function-ref name="setScale" scoped="" ref="0x406669f0"/>
        <function-ref name="getScale" scoped="" ref="0x40666c90"/>
        <function-ref name="reset" scoped="" ref="0x40667aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40667830"/>
        <function-ref name="isOn" scoped="" ref="0x40666500"/>
        <function-ref name="set" scoped="" ref="0x40667590"/>
        <function-ref name="start" scoped="" ref="0x40667d20"/>
        <function-ref name="stop" scoped="" ref="0x40666010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406718b0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406718b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40671a88"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40671b68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40671c48"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40671d28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40671e08"/>
        <function-ref name="setControl" scoped="" ref="0x40671ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40682ce0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40682ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40682eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x4067e178" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x4067e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x4067e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406811a8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406811a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40681380"/>
        <function-ref name="compareBusy" scoped="" ref="0x40681460"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40681540"/>
        <function-ref name="countBusy" scoped="" ref="0x40681620"/>
        <function-ref name="getAssr" scoped="" ref="0x40681700"/>
        <function-ref name="setAssr" scoped="" ref="0x406817e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40683248" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40683248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406827b0"/>
        <function-ref name="fired" scoped="" ref="0x40683da8"/>
        <function-ref name="get" scoped="" ref="0x40683890"/>
        <function-ref name="reset" scoped="" ref="0x40682048"/>
        <function-ref name="isOn" scoped="" ref="0x40682a28"/>
        <function-ref name="set" scoped="" ref="0x40683b08"/>
        <function-ref name="start" scoped="" ref="0x406822c0"/>
        <function-ref name="stop" scoped="" ref="0x40682538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406755d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40671048"/>
        <function-ref name="test" scoped="" ref="0x40672b30"/>
        <function-ref name="get" scoped="" ref="0x40675c18"/>
        <function-ref name="setScale" scoped="" ref="0x406712c0"/>
        <function-ref name="getScale" scoped="" ref="0x40671560"/>
        <function-ref name="reset" scoped="" ref="0x406723c8"/>
        <function-ref name="overflow" scoped="" ref="0x40672150"/>
        <function-ref name="isOn" scoped="" ref="0x40672da8"/>
        <function-ref name="set" scoped="" ref="0x40675e90"/>
        <function-ref name="start" scoped="" ref="0x40672640"/>
        <function-ref name="stop" scoped="" ref="0x406728b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x40673cf0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/PlatformInterruptC.nc">
      <component-ref qname="PlatformInterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x40673cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x40673ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x406b04e8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x406b04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x406b06c0"/>
        <function-ref name="stopThread" scoped="" ref="0x406b07a0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x406b0880"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x406b0960"/>
        <function-ref name="startThread" scoped="" ref="0x406b0a40"/>
        <function-ref name="threadInfo" scoped="" ref="0x406b0b20"/>
        <function-ref name="initThread" scoped="" ref="0x406b0c00"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x406b0ce0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x406b0dc0"/>
        <function-ref name="joinThread" scoped="" ref="0x406b0ea0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x406af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInterrupt" ref="0x406b3aa8" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x406b3aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x406b3c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TaskScheduler" ref="0x406b3e88" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskScheduler" scoped="" ref="0x406b3e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="hasTasks" scoped="" ref="0x406b0070"/>
        <function-ref name="init" scoped="" ref="0x406b0150"/>
        <function-ref name="taskLoop" scoped="" ref="0x406b0230"/>
        <function-ref name="runNextTask" scoped="" ref="0x406b0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406af180" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/TOSThreadsInterruptP.nc">
      <component-ref qname="TOSThreadsInterruptP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406af180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406af358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406af438"/>
        <function-ref name="led1On" scoped="" ref="0x406af518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406af5f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406af6d8"/>
        <function-ref name="get" scoped="" ref="0x406af7b8"/>
        <function-ref name="led1Off" scoped="" ref="0x406af898"/>
        <function-ref name="led2Off" scoped="" ref="0x406afc18"/>
        <function-ref name="set" scoped="" ref="0x406af978"/>
        <function-ref name="led0On" scoped="" ref="0x406afa58"/>
        <function-ref name="led2On" scoped="" ref="0x406afb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406cf9a8" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406cf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406cfb80"/>
        <function-ref name="runTask" scoped="" ref="0x406cfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406d1010" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406d1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cf4e0"/>
        <function-ref name="fired" scoped="" ref="0x406d1c78"/>
        <function-ref name="startAt" scoped="" ref="0x406cf1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x406d1ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406cf758"/>
        <function-ref name="start" scoped="" ref="0x406d1760"/>
        <function-ref name="stop" scoped="" ref="0x406d1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406bbcb0" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406d27c0"/>
        <function-ref name="fired" scoped="" ref="0x406d3a40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406d2180"/>
        <function-ref name="isOneShot" scoped="" ref="0x406d3ef0"/>
        <function-ref name="getdt" scoped="" ref="0x406d2c70"/>
        <function-ref name="gett0" scoped="" ref="0x406d2a18"/>
        <function-ref name="isRunning" scoped="" ref="0x406d3c98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d32e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406d24a0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d3568"/>
        <function-ref name="stop" scoped="" ref="0x406d37e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406fa050" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406fa050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406fa228"/>
        <function-ref name="runTask" scoped="" ref="0x406fa308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406fee30" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406fee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fb920"/>
        <function-ref name="fired" scoped="" ref="0x406fcbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fb2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fb088"/>
        <function-ref name="getdt" scoped="" ref="0x406fbdd0"/>
        <function-ref name="gett0" scoped="" ref="0x406fbb78"/>
        <function-ref name="isRunning" scoped="" ref="0x406fce18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406fc468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fb600"/>
        <function-ref name="startOneShot" scoped="" ref="0x406fc6e8"/>
        <function-ref name="stop" scoped="" ref="0x406fc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e2a60" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fe670"/>
        <function-ref name="fired" scoped="" ref="0x40700840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fe010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40700d10"/>
        <function-ref name="getdt" scoped="" ref="0x406feb40"/>
        <function-ref name="gett0" scoped="" ref="0x406fe8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40700aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407000b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fe340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40700348"/>
        <function-ref name="stop" scoped="" ref="0x407005d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4070f460" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4070f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4070fdf8" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4070fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070d570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070da60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070d7e8"/>
        <function-ref name="overflow" scoped="" ref="0x4070dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40712010" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40712010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407121e8"/>
        <function-ref name="runTask" scoped="" ref="0x407122c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40716d28" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40716d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407148a8"/>
        <function-ref name="fired" scoped="" ref="0x40715ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40714268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40714010"/>
        <function-ref name="getdt" scoped="" ref="0x40714d58"/>
        <function-ref name="gett0" scoped="" ref="0x40714b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40715d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40715370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40714588"/>
        <function-ref name="startOneShot" scoped="" ref="0x407155f0"/>
        <function-ref name="stop" scoped="" ref="0x40715870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40719918" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="ThreadTimersC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40719918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40716568"/>
        <function-ref name="fired" scoped="" ref="0x40718798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40718ed0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40718c68"/>
        <function-ref name="getdt" scoped="" ref="0x40716a38"/>
        <function-ref name="gett0" scoped="" ref="0x407167d0"/>
        <function-ref name="isRunning" scoped="" ref="0x40718a00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40718010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40716238"/>
        <function-ref name="startOneShot" scoped="" ref="0x407182a0"/>
        <function-ref name="stop" scoped="" ref="0x40718530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40725378" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40725378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40725550"/>
        <function-ref name="stopThread" scoped="" ref="0x40725630"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40725710"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x407257f0"/>
        <function-ref name="startThread" scoped="" ref="0x407258d0"/>
        <function-ref name="threadInfo" scoped="" ref="0x407259b0"/>
        <function-ref name="initThread" scoped="" ref="0x40725a90"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40725b70"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40725c50"/>
        <function-ref name="joinThread" scoped="" ref="0x40725d30"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40725e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMilli" ref="0x407243f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40721ed0"/>
        <function-ref name="fired" scoped="" ref="0x40721188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40721890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40721638"/>
        <function-ref name="getdt" scoped="" ref="0x407203a8"/>
        <function-ref name="gett0" scoped="" ref="0x40720150"/>
        <function-ref name="isRunning" scoped="" ref="0x407213e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40724a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40721bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40724c98"/>
        <function-ref name="stop" scoped="" ref="0x40724f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40723ea0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40723ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x407250c0"/>
        <function-ref name="start" scoped="" ref="0x407251a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407205e8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407205e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407207c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407208a0"/>
        <function-ref name="led1On" scoped="" ref="0x40720980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40720a60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40720b40"/>
        <function-ref name="get" scoped="" ref="0x40720c20"/>
        <function-ref name="led1Off" scoped="" ref="0x40720d00"/>
        <function-ref name="led2Off" scoped="" ref="0x4071f0f0"/>
        <function-ref name="set" scoped="" ref="0x40720de0"/>
        <function-ref name="led0On" scoped="" ref="0x40720ec0"/>
        <function-ref name="led2On" scoped="" ref="0x4071f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadSleep" ref="0x405f7698" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSleepP.nc">
      <component-ref qname="ThreadSleepP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadSleep" scoped="" ref="0x405f7698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x405f7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x405f6b38" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallC.nc">
      <component-ref qname="SystemCallC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x405f6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x405f6d10"/>
        <function-ref name="start" scoped="" ref="0x405f6df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x4072e980" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x4072e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x4072eb58"/>
        <function-ref name="stopThread" scoped="" ref="0x4072ec38"/>
        <function-ref name="currentThreadId" scoped="" ref="0x4072ed18"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x4072edf8"/>
        <function-ref name="startThread" scoped="" ref="0x4072eed8"/>
        <function-ref name="threadInfo" scoped="" ref="0x4072b010"/>
        <function-ref name="initThread" scoped="" ref="0x4072b0f0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x4072b1d0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x4072b2b0"/>
        <function-ref name="joinThread" scoped="" ref="0x4072b390"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x4072b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCall" ref="0x4072e4b0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x4072e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x4072e688"/>
        <function-ref name="start" scoped="" ref="0x4072e768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="threadTask" ref="0x4072a010" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallP.nc">
      <component-ref qname="SystemCallP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="threadTask" scoped="" ref="0x4072a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4072a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4072a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40738670" loc="58:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40738670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40738848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BounceThread0" ref="0x40737240" loc="62:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BounceThread0" scoped="" ref="0x40737240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x40737418"/>
        <function-ref name="pause" scoped="" ref="0x407374f8"/>
        <function-ref name="resume" scoped="" ref="0x407375d8"/>
        <function-ref name="join" scoped="" ref="0x407376b8"/>
        <function-ref name="run" scoped="" ref="0x40737798"/>
        <function-ref name="start" scoped="" ref="0x40737878"/>
        <function-ref name="sleep" scoped="" ref="0x40737958"/>
        <function-ref name="stop" scoped="" ref="0x40737a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4077c010" loc="65:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4077c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077c1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4077c2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4077c3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077c488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4077c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncThread" ref="0x4077c770" loc="67:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncThread" scoped="" ref="0x4077c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x4077c948"/>
        <function-ref name="pause" scoped="" ref="0x4077ca28"/>
        <function-ref name="resume" scoped="" ref="0x4077cb08"/>
        <function-ref name="join" scoped="" ref="0x4077cbe8"/>
        <function-ref name="run" scoped="" ref="0x4077ccc8"/>
        <function-ref name="start" scoped="" ref="0x4077cda8"/>
        <function-ref name="sleep" scoped="" ref="0x4077ce88"/>
        <function-ref name="stop" scoped="" ref="0x40776010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Barrier" ref="0x40762c68" loc="60:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Barrier" scoped="" ref="0x40762c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Barrier"/>
      </instance>
      <interface-functions>
        <function-ref name="isBlocking" scoped="" ref="0x40762e40"/>
        <function-ref name="reset" scoped="" ref="0x40762f20"/>
        <function-ref name="block" scoped="" ref="0x40737018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockingAMSend0" ref="0x4077a5a0" loc="63:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend0" scoped="" ref="0x4077a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4077a778"/>
        <function-ref name="getPayload" scoped="" ref="0x4077a858"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077a938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockingReceive0" ref="0x40779e98" loc="64:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive0" scoped="" ref="0x40779e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407360c0"/>
        <function-ref name="getPayload" scoped="" ref="0x407361a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40776180" loc="69:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40776180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40776358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40776438"/>
        <function-ref name="led1On" scoped="" ref="0x40776518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407765f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407766d8"/>
        <function-ref name="get" scoped="" ref="0x407767b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40776898"/>
        <function-ref name="led2Off" scoped="" ref="0x40776c18"/>
        <function-ref name="set" scoped="" ref="0x40776978"/>
        <function-ref name="led0On" scoped="" ref="0x40776a58"/>
        <function-ref name="led2On" scoped="" ref="0x40776b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockingAMControl" ref="0x407658e0" loc="59:BarrierBounceC.nc">
      <component-ref qname="BarrierBounceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMControl" scoped="" ref="0x407658e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40765ab8"/>
        <function-ref name="stop" scoped="" ref="0x40765b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingSnoop" ref="0x4077fd90" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingSnoop" scoped="" ref="0x4077fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4077e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4077e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x4077f578" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x4077f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4077f750"/>
        <function-ref name="getPayload" scoped="" ref="0x4077f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4077d040" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4077d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4077d218"/>
        <function-ref name="payloadLength" scoped="" ref="0x4077d2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4077d3d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4077d598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x4077eaf8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x4077eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4077ecd0"/>
        <function-ref name="getPayload" scoped="" ref="0x4077edb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077ee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x4077f010" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x4077f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4077f1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4077f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40793010" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40793010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407931e8"/>
        <function-ref name="noAck" scoped="" ref="0x407932c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x407933a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x404a27e0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x404a27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404a29b8"/>
        <function-ref name="stop" scoped="" ref="0x404a2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4078bdf8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4078bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40794010"/>
        <function-ref name="source" scoped="" ref="0x407940f0"/>
        <function-ref name="address" scoped="" ref="0x407941d0"/>
        <function-ref name="destination" scoped="" ref="0x407942b0"/>
        <function-ref name="setSource" scoped="" ref="0x40794390"/>
        <function-ref name="setDestination" scoped="" ref="0x40794470"/>
        <function-ref name="type" scoped="" ref="0x40794550"/>
        <function-ref name="setType" scoped="" ref="0x40794630"/>
        <function-ref name="isForMe" scoped="" ref="0x40794710"/>
        <function-ref name="setGroup" scoped="" ref="0x407947f0"/>
        <function-ref name="localGroup" scoped="" ref="0x407948d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingSnoopAny" ref="0x4077e390" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingActiveMessageC.nc">
      <component-ref qname="BlockingActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingSnoopAny" scoped="" ref="0x4077e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4077e568"/>
        <function-ref name="getPayload" scoped="" ref="0x4077e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40799d30" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40799d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40799f08"/>
        <function-ref name="stopDone" scoped="" ref="0x4079c010"/>
        <function-ref name="start" scoped="" ref="0x4079c0f0"/>
        <function-ref name="stop" scoped="" ref="0x4079c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x407a4af8" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x407a4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x407b76b8"/>
        <function-ref name="clear" scoped="" ref="0x407b7a68"/>
        <function-ref name="isValid" scoped="" ref="0x407b7308"/>
        <function-ref name="set" scoped="" ref="0x407b7e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407a9670" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407a9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a9848"/>
        <function-ref name="getPayload" scoped="" ref="0x407a9928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a9a08"/>
        <function-ref name="cancel" scoped="" ref="0x407a9ae8"/>
        <function-ref name="sendDone" scoped="" ref="0x407a9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4079b890" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4079b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4079ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40797368" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40797368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40797540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40797620"/>
        <function-ref name="getPayload" scoped="" ref="0x40797700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407977e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407978c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x407a5100" loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x407a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x407a5c00"/>
        <function-ref name="clear" scoped="" ref="0x407a4010"/>
        <function-ref name="isValid" scoped="" ref="0x407a5850"/>
        <function-ref name="set" scoped="" ref="0x407a43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407a7ac8" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x407a8770" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407a8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407a8948"/>
        <function-ref name="noAck" scoped="" ref="0x407a8a28"/>
        <function-ref name="wasAcked" scoped="" ref="0x407a8b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4079b1f8" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4079b1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4079b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40797a58" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40797a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40797c30"/>
        <function-ref name="source" scoped="" ref="0x40797d10"/>
        <function-ref name="address" scoped="" ref="0x40797df0"/>
        <function-ref name="destination" scoped="" ref="0x40797ed0"/>
        <function-ref name="setSource" scoped="" ref="0x407a8010"/>
        <function-ref name="setDestination" scoped="" ref="0x407a80f0"/>
        <function-ref name="type" scoped="" ref="0x407a81d0"/>
        <function-ref name="setType" scoped="" ref="0x407a82b0"/>
        <function-ref name="isForMe" scoped="" ref="0x407a8390"/>
        <function-ref name="setGroup" scoped="" ref="0x407a8470"/>
        <function-ref name="localGroup" scoped="" ref="0x407a8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40797010" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40797010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407971e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407b33c8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407b33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407b35a0"/>
        <function-ref name="stopDone" scoped="" ref="0x407b3680"/>
        <function-ref name="start" scoped="" ref="0x407b3760"/>
        <function-ref name="stop" scoped="" ref="0x407b3840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x407bc7f0" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x407bc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407bc9c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407bcaa8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407bcb88"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407bcc68"/>
        <function-ref name="setCca" scoped="" ref="0x407bcd48"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407bce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407bb120" loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407bb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407bb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407afb50" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407afb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407afd28"/>
        <function-ref name="payloadLength" scoped="" ref="0x407afe08"/>
        <function-ref name="getPayload" scoped="" ref="0x407afee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ae010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407b3ca0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407b3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407b3e78"/>
        <function-ref name="getPayload" scoped="" ref="0x407b2010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407b20f0"/>
        <function-ref name="cancel" scoped="" ref="0x407b21d0"/>
        <function-ref name="sendDone" scoped="" ref="0x407b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407b04d0" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407b06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x407ad040" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407ad040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407ad218"/>
        <function-ref name="setNetwork" scoped="" ref="0x407ad2f8"/>
        <function-ref name="getRssi" scoped="" ref="0x407ad3d8"/>
        <function-ref name="getNetwork" scoped="" ref="0x407ad4b8"/>
        <function-ref name="getPower" scoped="" ref="0x407ad598"/>
        <function-ref name="getLqi" scoped="" ref="0x407ad678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x407d2b30" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x407d2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x407d2d88"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x407d2e68"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x407c0010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407b2718" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407b2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x407ad898" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407ad898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407ada70"/>
        <function-ref name="noAck" scoped="" ref="0x407adb50"/>
        <function-ref name="wasAcked" scoped="" ref="0x407adc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x407b2e08" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x407b2e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407d0628" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407d0628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407d0800"/>
        <function-ref name="setRetries" scoped="" ref="0x407d08e0"/>
        <function-ref name="getRetries" scoped="" ref="0x407d09c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407d0aa0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407d0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407b0f20" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407b0f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407af110"/>
        <function-ref name="source" scoped="" ref="0x407af1f0"/>
        <function-ref name="address" scoped="" ref="0x407af2d0"/>
        <function-ref name="destination" scoped="" ref="0x407af3b0"/>
        <function-ref name="setSource" scoped="" ref="0x407af490"/>
        <function-ref name="setDestination" scoped="" ref="0x407af570"/>
        <function-ref name="type" scoped="" ref="0x407af650"/>
        <function-ref name="setType" scoped="" ref="0x407af730"/>
        <function-ref name="isForMe" scoped="" ref="0x407af810"/>
        <function-ref name="setGroup" scoped="" ref="0x407af8f0"/>
        <function-ref name="localGroup" scoped="" ref="0x407af9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x407c1cc8" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x407c1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x407c1ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x407b0bb0" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x407b0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407b0d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407c92c0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407c92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407c9498"/>
        <function-ref name="stopDone" scoped="" ref="0x407c9578"/>
        <function-ref name="start" scoped="" ref="0x407c9658"/>
        <function-ref name="stop" scoped="" ref="0x407c9738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x407c79b8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407c79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407c7b90"/>
        <function-ref name="setNetwork" scoped="" ref="0x407c7c70"/>
        <function-ref name="getRssi" scoped="" ref="0x407c7d50"/>
        <function-ref name="getNetwork" scoped="" ref="0x407c7e30"/>
        <function-ref name="getPower" scoped="" ref="0x407c7f10"/>
        <function-ref name="getLqi" scoped="" ref="0x407dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407d73d8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407d73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407d75b0"/>
        <function-ref name="getPayload" scoped="" ref="0x407d7690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407d7770"/>
        <function-ref name="cancel" scoped="" ref="0x407d7850"/>
        <function-ref name="sendDone" scoped="" ref="0x407d7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x407d7e88" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x407d7e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c7070"/>
        <function-ref name="getPayload" scoped="" ref="0x407c7150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407c7230"/>
        <function-ref name="cancel" scoped="" ref="0x407c7310"/>
        <function-ref name="sendDone" scoped="" ref="0x407c73f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x407ddb88" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x407ddb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x407ddd60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x407dde40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x407ddf20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407d8018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407d7ab8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407d7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407d7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x407dd230" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407dd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407dd408"/>
        <function-ref name="noAck" scoped="" ref="0x407dd4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x407dd5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407dec98" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407dec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407dee70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407c8010"/>
        <function-ref name="request" scoped="" ref="0x407c80f0"/>
        <function-ref name="granted" scoped="" ref="0x407c81d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x407c7620" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x407c7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407c77f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x407d81c0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x407d81c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x407d8398"/>
        <function-ref name="setRetries" scoped="" ref="0x407d8478"/>
        <function-ref name="getRetries" scoped="" ref="0x407d8558"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407d8638"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407d8718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x407dd7c0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x407dd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x407dd998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407ec720" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407ec720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407ec8f8"/>
        <function-ref name="stopDone" scoped="" ref="0x407ec9d8"/>
        <function-ref name="start" scoped="" ref="0x407ecab8"/>
        <function-ref name="stop" scoped="" ref="0x407ecb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x407eb810" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x407eb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407eb9e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407ebac8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407ebba8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407ebc88"/>
        <function-ref name="setCca" scoped="" ref="0x407ebd68"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407ebe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407ecd28" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407ecd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ecf00"/>
        <function-ref name="getPayload" scoped="" ref="0x407eb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407eb0f0"/>
        <function-ref name="cancel" scoped="" ref="0x407eb1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x407eb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407eb458" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407eb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407ea7a0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407ea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407ea978"/>
        <function-ref name="stopDone" scoped="" ref="0x407eaa58"/>
        <function-ref name="start" scoped="" ref="0x407eab38"/>
        <function-ref name="stop" scoped="" ref="0x407eac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x407e7570" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x407e7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407e7748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407e7828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407e7908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407e79e8"/>
        <function-ref name="setCca" scoped="" ref="0x407e7ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407e7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x407fa800" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x407fa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x407fa9d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x407faab8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x407fab98"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x407fac78"/>
        <function-ref name="setCca" scoped="" ref="0x407fad58"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x407fae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x407f4e18" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x407f4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x407f3010"/>
        <function-ref name="setNetwork" scoped="" ref="0x407f30f0"/>
        <function-ref name="getRssi" scoped="" ref="0x407f31d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x407f32b0"/>
        <function-ref name="getPower" scoped="" ref="0x407f3390"/>
        <function-ref name="getLqi" scoped="" ref="0x407f3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x407fa040" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x407fa040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407fa218"/>
        <function-ref name="cancel" scoped="" ref="0x407fa2f8"/>
        <function-ref name="modify" scoped="" ref="0x407fa3d8"/>
        <function-ref name="sendDone" scoped="" ref="0x407fa4b8"/>
        <function-ref name="resend" scoped="" ref="0x407fa598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407eada8" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407eada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e7010"/>
        <function-ref name="getPayload" scoped="" ref="0x407e70f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e71d0"/>
        <function-ref name="cancel" scoped="" ref="0x407e72b0"/>
        <function-ref name="sendDone" scoped="" ref="0x407e7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x407f8ca8" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407f8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x407f8e80"/>
        <function-ref name="rand32" scoped="" ref="0x407f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x407f99f0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x407f99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407f9bc8"/>
        <function-ref name="stop" scoped="" ref="0x407f9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x407f0f10" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x407f0f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x407f2108"/>
        <function-ref name="getMetadata" scoped="" ref="0x407f21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x407e5010" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x407e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x407e51e8"/>
        <function-ref name="rfOff" scoped="" ref="0x407e52c8"/>
        <function-ref name="rxOn" scoped="" ref="0x407e53a8"/>
        <function-ref name="startVReg" scoped="" ref="0x407e5488"/>
        <function-ref name="stopVReg" scoped="" ref="0x407e5568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x407e5648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x407e5728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x407e5808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407f41a0" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407f41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407f4378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407f4458"/>
        <function-ref name="led1On" scoped="" ref="0x407f4538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407f4618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407f46f8"/>
        <function-ref name="get" scoped="" ref="0x407f47d8"/>
        <function-ref name="led1Off" scoped="" ref="0x407f48b8"/>
        <function-ref name="led2Off" scoped="" ref="0x407f4c38"/>
        <function-ref name="set" scoped="" ref="0x407f4998"/>
        <function-ref name="led0On" scoped="" ref="0x407f4a78"/>
        <function-ref name="led2On" scoped="" ref="0x407f4b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407e7d60" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e6010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e60f0"/>
        <function-ref name="request" scoped="" ref="0x407e61d0"/>
        <function-ref name="granted" scoped="" ref="0x407e62b0"/>
        <function-ref name="isOwner" scoped="" ref="0x407e6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x408066e0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x408066e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40806938"/>
        <function-ref name="toIdle" scoped="" ref="0x40806a18"/>
        <function-ref name="isState" scoped="" ref="0x40806af8"/>
        <function-ref name="isIdle" scoped="" ref="0x40806bd8"/>
        <function-ref name="requestState" scoped="" ref="0x40806cb8"/>
        <function-ref name="forceState" scoped="" ref="0x40806d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40804820" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40804820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408049f8"/>
        <function-ref name="runTask" scoped="" ref="0x40804ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x40804010" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x40804010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408041e8"/>
        <function-ref name="runTask" scoped="" ref="0x408042c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x408057b0" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x408057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40805988"/>
        <function-ref name="runTask" scoped="" ref="0x40805a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4083ca40" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4083ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4083cc18"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4083ccf8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4083cdd8"/>
        <function-ref name="syncDone" scoped="" ref="0x4083ceb8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40827010"/>
        <function-ref name="setShortAddr" scoped="" ref="0x408270f0"/>
        <function-ref name="setChannel" scoped="" ref="0x408271d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x408272b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40827390"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40827470"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40827550"/>
        <function-ref name="sync" scoped="" ref="0x40827630"/>
        <function-ref name="getChannel" scoped="" ref="0x40827710"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40827870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x408398e0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x408398e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40839f08"/>
        <function-ref name="readDone" scoped="" ref="0x4083b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40827a40" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40827a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40827c18"/>
        <function-ref name="rfOff" scoped="" ref="0x40827cf8"/>
        <function-ref name="rxOn" scoped="" ref="0x40827dd8"/>
        <function-ref name="startVReg" scoped="" ref="0x40827eb8"/>
        <function-ref name="stopVReg" scoped="" ref="0x40826010"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x408260f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x408261d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x408262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4082bf00" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4082bf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408280f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408281d0"/>
        <function-ref name="request" scoped="" ref="0x408282b0"/>
        <function-ref name="granted" scoped="" ref="0x40828390"/>
        <function-ref name="isOwner" scoped="" ref="0x40828470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40836748" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40836748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40836920"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40836a00"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40836ae0"/>
        <function-ref name="syncDone" scoped="" ref="0x40836bc0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40836ca0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40836d80"/>
        <function-ref name="setChannel" scoped="" ref="0x40836e60"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40835010"/>
        <function-ref name="setPanAddr" scoped="" ref="0x408350f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x408351d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x408352b0"/>
        <function-ref name="sync" scoped="" ref="0x40835390"/>
        <function-ref name="getChannel" scoped="" ref="0x40835470"/>
        <function-ref name="getPanAddr" scoped="" ref="0x408355d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40841a40" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40841a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40841c18"/>
        <function-ref name="write" scoped="" ref="0x40841cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x40833128" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x40833128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40832600"/>
        <function-ref name="fired" scoped="" ref="0x40833d90"/>
        <function-ref name="startAt" scoped="" ref="0x408322c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40832048"/>
        <function-ref name="getAlarm" scoped="" ref="0x40832878"/>
        <function-ref name="start" scoped="" ref="0x40833878"/>
        <function-ref name="stop" scoped="" ref="0x40833b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x40841010" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40841010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408411e8"/>
        <function-ref name="write" scoped="" ref="0x408412c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x408305a0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x408305a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40830778"/>
        <function-ref name="isInput" scoped="" ref="0x40830858"/>
        <function-ref name="toggle" scoped="" ref="0x40830938"/>
        <function-ref name="isOutput" scoped="" ref="0x40830a18"/>
        <function-ref name="get" scoped="" ref="0x40830af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40830bd8"/>
        <function-ref name="set" scoped="" ref="0x40830cb8"/>
        <function-ref name="clr" scoped="" ref="0x40830d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40834300" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40834300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40834928"/>
        <function-ref name="readDone" scoped="" ref="0x40834b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x40852308" loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x40852308"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408524e0"/>
        <function-ref name="runTask" scoped="" ref="0x408525c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4083f010" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4083f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4083f1e8"/>
        <function-ref name="write" scoped="" ref="0x4083f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x4084a598" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4084a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4084a770"/>
        <function-ref name="write" scoped="" ref="0x4084a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x408450d8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408450d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x408452b0"/>
        <function-ref name="changed" scoped="" ref="0x40845390"/>
        <function-ref name="amGroup" scoped="" ref="0x40845470"/>
        <function-ref name="setAddress" scoped="" ref="0x40845550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40832b48" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40832b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40832d20"/>
        <function-ref name="isInput" scoped="" ref="0x40832e00"/>
        <function-ref name="toggle" scoped="" ref="0x40832ee0"/>
        <function-ref name="isOutput" scoped="" ref="0x40830010"/>
        <function-ref name="get" scoped="" ref="0x408300f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408301d0"/>
        <function-ref name="set" scoped="" ref="0x408302b0"/>
        <function-ref name="clr" scoped="" ref="0x40830390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x4083e6e0" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x4083e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4083e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x4084b010" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x4084b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4084b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4084b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4084b488"/>
        <function-ref name="get" scoped="" ref="0x4084b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084b648"/>
        <function-ref name="set" scoped="" ref="0x4084b728"/>
        <function-ref name="clr" scoped="" ref="0x4084b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4083bc68" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4083bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4083be40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40841530" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40841530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40841708"/>
        <function-ref name="write" scoped="" ref="0x408417e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x4083eb00" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x4083eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4083ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4083ef20" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4083ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40858110"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408581f0"/>
        <function-ref name="request" scoped="" ref="0x408582d0"/>
        <function-ref name="granted" scoped="" ref="0x408583b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40858490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40857010" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40857010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408571e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408572c8"/>
        <function-ref name="request" scoped="" ref="0x408573a8"/>
        <function-ref name="granted" scoped="" ref="0x40857488"/>
        <function-ref name="isOwner" scoped="" ref="0x40857568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x408357a0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x408357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40835978"/>
        <function-ref name="rfOff" scoped="" ref="0x40835a58"/>
        <function-ref name="rxOn" scoped="" ref="0x40835b38"/>
        <function-ref name="startVReg" scoped="" ref="0x40835c18"/>
        <function-ref name="stopVReg" scoped="" ref="0x40835cf8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40835dd8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40835eb8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40834010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4084aaa0" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4084aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4084ac78"/>
        <function-ref name="write" scoped="" ref="0x4084ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x4084a010" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4084a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4084a268"/>
        <function-ref name="write" scoped="" ref="0x4084a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x4083fe80" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x4083fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4083e070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408576f8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408576f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408578d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408579b0"/>
        <function-ref name="led1On" scoped="" ref="0x40857a90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40857b70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40857c50"/>
        <function-ref name="get" scoped="" ref="0x40857d30"/>
        <function-ref name="led1Off" scoped="" ref="0x40857e10"/>
        <function-ref name="led2Off" scoped="" ref="0x408561d0"/>
        <function-ref name="set" scoped="" ref="0x40857ef0"/>
        <function-ref name="led0On" scoped="" ref="0x40856010"/>
        <function-ref name="led2On" scoped="" ref="0x408560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40853ae8" loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x40853ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40853cc0"/>
        <function-ref name="runTask" scoped="" ref="0x40853da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40836010" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40836010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408361e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408362c8"/>
        <function-ref name="request" scoped="" ref="0x408363a8"/>
        <function-ref name="granted" scoped="" ref="0x40836488"/>
        <function-ref name="isOwner" scoped="" ref="0x40836568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40842700" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40842700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408428d8"/>
        <function-ref name="write" scoped="" ref="0x408429b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40847118" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40847118"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408472f0"/>
        <function-ref name="disable" scoped="" ref="0x408473d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408474b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40847590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x408586e8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x408586e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408589c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40858aa0"/>
        <function-ref name="request" scoped="" ref="0x40858b80"/>
        <function-ref name="granted" scoped="" ref="0x40858c60"/>
        <function-ref name="isOwner" scoped="" ref="0x40858d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x4083e2b0" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x4083e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4083e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40885798" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40885798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40885970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x40885d60" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x40885d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4089d258"/>
        <function-ref name="fired" scoped="" ref="0x4089ea00"/>
        <function-ref name="startAt" scoped="" ref="0x4089eef0"/>
        <function-ref name="isRunning" scoped="" ref="0x4089ec78"/>
        <function-ref name="getAlarm" scoped="" ref="0x4089d4d0"/>
        <function-ref name="start" scoped="" ref="0x4089e4e8"/>
        <function-ref name="stop" scoped="" ref="0x4089e788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4089ca60" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4089ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4098d010"/>
        <function-ref name="fired" scoped="" ref="0x4089b718"/>
        <function-ref name="startAt" scoped="" ref="0x4089bc08"/>
        <function-ref name="isRunning" scoped="" ref="0x4089b990"/>
        <function-ref name="getAlarm" scoped="" ref="0x4098d288"/>
        <function-ref name="start" scoped="" ref="0x4089b200"/>
        <function-ref name="stop" scoped="" ref="0x4089b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4098d4b8" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4098d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4098d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410d95d8" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410d95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410d8ab8"/>
        <function-ref name="fired" scoped="" ref="0x410d8288"/>
        <function-ref name="startAt" scoped="" ref="0x410d8778"/>
        <function-ref name="isRunning" scoped="" ref="0x410d8500"/>
        <function-ref name="getAlarm" scoped="" ref="0x410d8d30"/>
        <function-ref name="start" scoped="" ref="0x410d9d28"/>
        <function-ref name="stop" scoped="" ref="0x410d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410d5448" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410d5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41114908"/>
        <function-ref name="fired" scoped="" ref="0x411140d8"/>
        <function-ref name="startAt" scoped="" ref="0x411145c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41114350"/>
        <function-ref name="getAlarm" scoped="" ref="0x41114b80"/>
        <function-ref name="start" scoped="" ref="0x410d5b98"/>
        <function-ref name="stop" scoped="" ref="0x410d5e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x408bce28" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x408bce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x408a3050"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x408a3130"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x408a3210"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x408a32f0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408a33d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408a34b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x408a3590"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x408a3670"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x408a3750"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x408a3830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x408b7c38" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x408b7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x408b6778"/>
        <function-ref name="test" scoped="" ref="0x408b6288"/>
        <function-ref name="get" scoped="" ref="0x408a2298"/>
        <function-ref name="captured" scoped="" ref="0x408a27b0"/>
        <function-ref name="reset" scoped="" ref="0x408a2a50"/>
        <function-ref name="isOn" scoped="" ref="0x408b6500"/>
        <function-ref name="set" scoped="" ref="0x408a2510"/>
        <function-ref name="start" scoped="" ref="0x408a2cc8"/>
        <function-ref name="stop" scoped="" ref="0x408b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x408b6e88" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x408b6e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408b4418"/>
        <function-ref name="fired" scoped="" ref="0x408b5a10"/>
        <function-ref name="get" scoped="" ref="0x408b54f8"/>
        <function-ref name="reset" scoped="" ref="0x408b5c88"/>
        <function-ref name="isOn" scoped="" ref="0x408b4690"/>
        <function-ref name="set" scoped="" ref="0x408b5770"/>
        <function-ref name="start" scoped="" ref="0x408b5f00"/>
        <function-ref name="stop" scoped="" ref="0x408b41a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408aae38" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408aae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x408a6898"/>
        <function-ref name="test" scoped="" ref="0x408a63a8"/>
        <function-ref name="get" scoped="" ref="0x408a7498"/>
        <function-ref name="setScale" scoped="" ref="0x408a6b10"/>
        <function-ref name="getScale" scoped="" ref="0x408a6db0"/>
        <function-ref name="reset" scoped="" ref="0x408a7c28"/>
        <function-ref name="overflow" scoped="" ref="0x408a79b0"/>
        <function-ref name="isOn" scoped="" ref="0x408a6620"/>
        <function-ref name="set" scoped="" ref="0x408a7710"/>
        <function-ref name="start" scoped="" ref="0x408a7ea0"/>
        <function-ref name="stop" scoped="" ref="0x408a6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x408ae610" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x408ae610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x408ae7e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x408ae8c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x408ae9a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x408aea88"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408aeb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408aec48"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x408aed28"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x408aee08"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x408aeee8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x408ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x408c1610" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x408c1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x408c17e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x408c18c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x408c19a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x408c1a88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x408c1b68"/>
        <function-ref name="setControl" scoped="" ref="0x408c1c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x408c8268" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x408c8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408c77d0"/>
        <function-ref name="fired" scoped="" ref="0x408c8dc8"/>
        <function-ref name="get" scoped="" ref="0x408c88b0"/>
        <function-ref name="reset" scoped="" ref="0x408c7068"/>
        <function-ref name="isOn" scoped="" ref="0x408c7a48"/>
        <function-ref name="set" scoped="" ref="0x408c8b28"/>
        <function-ref name="start" scoped="" ref="0x408c72e0"/>
        <function-ref name="stop" scoped="" ref="0x408c7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x408ca348" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x408ca348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x408c9dc8"/>
        <function-ref name="test" scoped="" ref="0x408c98d8"/>
        <function-ref name="get" scoped="" ref="0x408ca990"/>
        <function-ref name="captured" scoped="" ref="0x408caea8"/>
        <function-ref name="reset" scoped="" ref="0x408c9170"/>
        <function-ref name="isOn" scoped="" ref="0x408c9b50"/>
        <function-ref name="set" scoped="" ref="0x408cac08"/>
        <function-ref name="start" scoped="" ref="0x408c93e8"/>
        <function-ref name="stop" scoped="" ref="0x408c9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x408c1e58" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x408c1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x408c0050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x408c7e60" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x408c7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408c43e8"/>
        <function-ref name="fired" scoped="" ref="0x408c59f0"/>
        <function-ref name="get" scoped="" ref="0x408c54d8"/>
        <function-ref name="reset" scoped="" ref="0x408c5c68"/>
        <function-ref name="isOn" scoped="" ref="0x408c4660"/>
        <function-ref name="set" scoped="" ref="0x408c5750"/>
        <function-ref name="start" scoped="" ref="0x408c5ee0"/>
        <function-ref name="stop" scoped="" ref="0x408c4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x408c4a78" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x408c4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408c1010"/>
        <function-ref name="fired" scoped="" ref="0x408c35f0"/>
        <function-ref name="get" scoped="" ref="0x408c30d8"/>
        <function-ref name="reset" scoped="" ref="0x408c3868"/>
        <function-ref name="isOn" scoped="" ref="0x408c1288"/>
        <function-ref name="set" scoped="" ref="0x408c3350"/>
        <function-ref name="start" scoped="" ref="0x408c3ae0"/>
        <function-ref name="stop" scoped="" ref="0x408c3d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408b02e0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408b02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x408afd30"/>
        <function-ref name="test" scoped="" ref="0x408af840"/>
        <function-ref name="get" scoped="" ref="0x408b0928"/>
        <function-ref name="setScale" scoped="" ref="0x408ae010"/>
        <function-ref name="getScale" scoped="" ref="0x408ae2b0"/>
        <function-ref name="reset" scoped="" ref="0x408af0d8"/>
        <function-ref name="overflow" scoped="" ref="0x408b0e40"/>
        <function-ref name="isOn" scoped="" ref="0x408afab8"/>
        <function-ref name="set" scoped="" ref="0x408b0ba0"/>
        <function-ref name="start" scoped="" ref="0x408af350"/>
        <function-ref name="stop" scoped="" ref="0x408af5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40923860" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40923860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40923a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40923c48" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40923c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4091b6a0"/>
        <function-ref name="test" scoped="" ref="0x4091b1b0"/>
        <function-ref name="get" scoped="" ref="0x409222a8"/>
        <function-ref name="setScale" scoped="" ref="0x4091b918"/>
        <function-ref name="getScale" scoped="" ref="0x4091bbb8"/>
        <function-ref name="reset" scoped="" ref="0x40922a38"/>
        <function-ref name="overflow" scoped="" ref="0x409227c0"/>
        <function-ref name="isOn" scoped="" ref="0x4091b428"/>
        <function-ref name="set" scoped="" ref="0x40922520"/>
        <function-ref name="start" scoped="" ref="0x40922cb0"/>
        <function-ref name="stop" scoped="" ref="0x40922f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41109210" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41109210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f53d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f53d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411086c8"/>
        <function-ref name="fired" scoped="" ref="0x41109e78"/>
        <function-ref name="startAt" scoped="" ref="0x41108388"/>
        <function-ref name="isRunning" scoped="" ref="0x41108110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41108940"/>
        <function-ref name="start" scoped="" ref="0x41109960"/>
        <function-ref name="stop" scoped="" ref="0x41109c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41105e68" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41105e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x411033e8"/>
        <function-ref name="fired" scoped="" ref="0x411049f0"/>
        <function-ref name="get" scoped="" ref="0x411044d8"/>
        <function-ref name="reset" scoped="" ref="0x41104c68"/>
        <function-ref name="isOn" scoped="" ref="0x41103660"/>
        <function-ref name="set" scoped="" ref="0x41104750"/>
        <function-ref name="start" scoped="" ref="0x41104ee0"/>
        <function-ref name="stop" scoped="" ref="0x41103170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41108c00" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41108c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41105690"/>
        <function-ref name="test" scoped="" ref="0x411051a0"/>
        <function-ref name="get" scoped="" ref="0x41107278"/>
        <function-ref name="setScale" scoped="" ref="0x41105908"/>
        <function-ref name="getScale" scoped="" ref="0x41105ba8"/>
        <function-ref name="reset" scoped="" ref="0x41107a08"/>
        <function-ref name="overflow" scoped="" ref="0x41107790"/>
        <function-ref name="isOn" scoped="" ref="0x41105418"/>
        <function-ref name="set" scoped="" ref="0x411074f0"/>
        <function-ref name="start" scoped="" ref="0x41107c80"/>
        <function-ref name="stop" scoped="" ref="0x41107ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40937410" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40937410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40937b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40936068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40937dd8"/>
        <function-ref name="overflow" scoped="" ref="0x409362e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40936de0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40936de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40953570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40953a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409537e8"/>
        <function-ref name="overflow" scoped="" ref="0x40953cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40951540" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40951540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40951c90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409461a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40951f08"/>
        <function-ref name="overflow" scoped="" ref="0x40946418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x409466f8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409466f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x409631a0"/>
        <function-ref name="test" scoped="" ref="0x40965c90"/>
        <function-ref name="get" scoped="" ref="0x40946d40"/>
        <function-ref name="setScale" scoped="" ref="0x40963418"/>
        <function-ref name="getScale" scoped="" ref="0x409636b8"/>
        <function-ref name="reset" scoped="" ref="0x40965528"/>
        <function-ref name="overflow" scoped="" ref="0x409652b0"/>
        <function-ref name="isOn" scoped="" ref="0x40965f08"/>
        <function-ref name="set" scoped="" ref="0x40965010"/>
        <function-ref name="start" scoped="" ref="0x409657a0"/>
        <function-ref name="stop" scoped="" ref="0x40965a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40961ae8" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40961ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40971308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409717f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40971580"/>
        <function-ref name="overflow" scoped="" ref="0x40971a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409547f0" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409547f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40961010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40961500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40961288"/>
        <function-ref name="overflow" scoped="" ref="0x40961778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41113dd0" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41113dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41110350"/>
        <function-ref name="fired" scoped="" ref="0x41111a88"/>
        <function-ref name="startAt" scoped="" ref="0x41110010"/>
        <function-ref name="isRunning" scoped="" ref="0x41111d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x411105c8"/>
        <function-ref name="start" scoped="" ref="0x41111570"/>
        <function-ref name="stop" scoped="" ref="0x41111810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4110fb60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4110fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="TOne" ref="0x40381238"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4110d068"/>
        <function-ref name="fired" scoped="" ref="0x4110e820"/>
        <function-ref name="startAt" scoped="" ref="0x4110ed10"/>
        <function-ref name="isRunning" scoped="" ref="0x4110ea98"/>
        <function-ref name="getAlarm" scoped="" ref="0x4110d2e0"/>
        <function-ref name="start" scoped="" ref="0x4110e308"/>
        <function-ref name="stop" scoped="" ref="0x4110e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41110918" loc="57:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41110918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4110f088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4110f578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4110f300"/>
        <function-ref name="overflow" scoped="" ref="0x4110f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4098e798" loc="18:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4098e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4098e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x40989660" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40989660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40989838"/>
        <function-ref name="isInput" scoped="" ref="0x40989918"/>
        <function-ref name="toggle" scoped="" ref="0x409899f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40989ad8"/>
        <function-ref name="get" scoped="" ref="0x40989bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40989c98"/>
        <function-ref name="set" scoped="" ref="0x40989d78"/>
        <function-ref name="clr" scoped="" ref="0x40989e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x40988068" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40988068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40988240"/>
        <function-ref name="isInput" scoped="" ref="0x40988320"/>
        <function-ref name="toggle" scoped="" ref="0x40988400"/>
        <function-ref name="isOutput" scoped="" ref="0x409884e0"/>
        <function-ref name="get" scoped="" ref="0x409885c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409886a0"/>
        <function-ref name="set" scoped="" ref="0x40988780"/>
        <function-ref name="clr" scoped="" ref="0x40988860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40988a50" loc="70:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40988a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40988c28"/>
        <function-ref name="isInput" scoped="" ref="0x40988d08"/>
        <function-ref name="toggle" scoped="" ref="0x40988de8"/>
        <function-ref name="isOutput" scoped="" ref="0x40988ec8"/>
        <function-ref name="get" scoped="" ref="0x40987010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409870f0"/>
        <function-ref name="set" scoped="" ref="0x409871d0"/>
        <function-ref name="clr" scoped="" ref="0x409872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4098ac48" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4098ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4098ae20"/>
        <function-ref name="isInput" scoped="" ref="0x4098af00"/>
        <function-ref name="toggle" scoped="" ref="0x40989010"/>
        <function-ref name="isOutput" scoped="" ref="0x409890f0"/>
        <function-ref name="get" scoped="" ref="0x409891d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409892b0"/>
        <function-ref name="set" scoped="" ref="0x40989390"/>
        <function-ref name="clr" scoped="" ref="0x40989470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x40987e78" loc="72:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40987e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409a5070"/>
        <function-ref name="isInput" scoped="" ref="0x409a5150"/>
        <function-ref name="toggle" scoped="" ref="0x409a5230"/>
        <function-ref name="isOutput" scoped="" ref="0x409a5310"/>
        <function-ref name="get" scoped="" ref="0x409a53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409a54d0"/>
        <function-ref name="set" scoped="" ref="0x409a55b0"/>
        <function-ref name="clr" scoped="" ref="0x409a5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4098a270" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4098a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4098a448"/>
        <function-ref name="isInput" scoped="" ref="0x4098a528"/>
        <function-ref name="toggle" scoped="" ref="0x4098a608"/>
        <function-ref name="isOutput" scoped="" ref="0x4098a6e8"/>
        <function-ref name="get" scoped="" ref="0x4098a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4098a8a8"/>
        <function-ref name="set" scoped="" ref="0x4098a988"/>
        <function-ref name="clr" scoped="" ref="0x4098aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x40987490" loc="71:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40987490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40987668"/>
        <function-ref name="isInput" scoped="" ref="0x40987748"/>
        <function-ref name="toggle" scoped="" ref="0x40987828"/>
        <function-ref name="isOutput" scoped="" ref="0x40987908"/>
        <function-ref name="get" scoped="" ref="0x409879e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40987ac8"/>
        <function-ref name="set" scoped="" ref="0x40987ba8"/>
        <function-ref name="clr" scoped="" ref="0x40987c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x4099c7f0" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x4099c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x4099c9c8"/>
        <function-ref name="disable" scoped="" ref="0x4099caa8"/>
        <function-ref name="captured" scoped="" ref="0x4099cb88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x4099cc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x4099cef0" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4099cef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099e0e0"/>
        <function-ref name="disable" scoped="" ref="0x4099e1c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4099e2a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4099e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x4099e618" loc="41:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x4099e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099e7f0"/>
        <function-ref name="disable" scoped="" ref="0x4099e8d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4099e9b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4099ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x409b2c50" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409b2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409b2e28"/>
        <function-ref name="disable" scoped="" ref="0x409b2f08"/>
        <function-ref name="captured" scoped="" ref="0x4099b010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x4099b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x4099b300" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x4099b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4099ad88"/>
        <function-ref name="test" scoped="" ref="0x4099a898"/>
        <function-ref name="get" scoped="" ref="0x4099b948"/>
        <function-ref name="captured" scoped="" ref="0x4099be60"/>
        <function-ref name="reset" scoped="" ref="0x4099a130"/>
        <function-ref name="isOn" scoped="" ref="0x4099ab10"/>
        <function-ref name="set" scoped="" ref="0x4099bbc0"/>
        <function-ref name="start" scoped="" ref="0x4099a3a8"/>
        <function-ref name="stop" scoped="" ref="0x4099a620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x409af678" loc="9:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x409af678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409af850"/>
        <function-ref name="fired" scoped="" ref="0x409af930"/>
        <function-ref name="disable" scoped="" ref="0x409afa10"/>
        <function-ref name="edge" scoped="" ref="0x409afaf0"/>
        <function-ref name="enable" scoped="" ref="0x409afbd0"/>
        <function-ref name="getValue" scoped="" ref="0x409afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x409af080" loc="8:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x409af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409af258"/>
        <function-ref name="disable" scoped="" ref="0x409af338"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409af418"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409af4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x409c1010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x409c1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c11e8"/>
        <function-ref name="fired" scoped="" ref="0x409c12c8"/>
        <function-ref name="disable" scoped="" ref="0x409c13a8"/>
        <function-ref name="edge" scoped="" ref="0x409c1488"/>
        <function-ref name="enable" scoped="" ref="0x409c1568"/>
        <function-ref name="getValue" scoped="" ref="0x409c1648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x409c4418" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x409c4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c45f0"/>
        <function-ref name="fired" scoped="" ref="0x409c46d0"/>
        <function-ref name="disable" scoped="" ref="0x409c47b0"/>
        <function-ref name="edge" scoped="" ref="0x409c4890"/>
        <function-ref name="enable" scoped="" ref="0x409c4970"/>
        <function-ref name="getValue" scoped="" ref="0x409c4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x409c3e58" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x409c3e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c2050"/>
        <function-ref name="fired" scoped="" ref="0x409c2130"/>
        <function-ref name="disable" scoped="" ref="0x409c2210"/>
        <function-ref name="edge" scoped="" ref="0x409c22f0"/>
        <function-ref name="enable" scoped="" ref="0x409c23d0"/>
        <function-ref name="getValue" scoped="" ref="0x409c24b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x409c1890" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x409c1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c1a68"/>
        <function-ref name="fired" scoped="" ref="0x409c1b48"/>
        <function-ref name="disable" scoped="" ref="0x409c1c28"/>
        <function-ref name="edge" scoped="" ref="0x409c1d08"/>
        <function-ref name="enable" scoped="" ref="0x409c1de8"/>
        <function-ref name="getValue" scoped="" ref="0x409c1ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x409c4c98" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x409c4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c4e70"/>
        <function-ref name="fired" scoped="" ref="0x409c3010"/>
        <function-ref name="disable" scoped="" ref="0x409c30f0"/>
        <function-ref name="edge" scoped="" ref="0x409c31d0"/>
        <function-ref name="enable" scoped="" ref="0x409c32b0"/>
        <function-ref name="getValue" scoped="" ref="0x409c3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x409c26f8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x409c26f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c28d0"/>
        <function-ref name="fired" scoped="" ref="0x409c29b0"/>
        <function-ref name="disable" scoped="" ref="0x409c2a90"/>
        <function-ref name="edge" scoped="" ref="0x409c2b70"/>
        <function-ref name="enable" scoped="" ref="0x409c2c50"/>
        <function-ref name="getValue" scoped="" ref="0x409c2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x409aeac0" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x409aeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409aec98"/>
        <function-ref name="fired" scoped="" ref="0x409aed78"/>
        <function-ref name="disable" scoped="" ref="0x409aee58"/>
        <function-ref name="edge" scoped="" ref="0x409c4010"/>
        <function-ref name="enable" scoped="" ref="0x409c40f0"/>
        <function-ref name="getValue" scoped="" ref="0x409c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x409c35d8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x409c35d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c37b0"/>
        <function-ref name="fired" scoped="" ref="0x409c3890"/>
        <function-ref name="disable" scoped="" ref="0x409c3970"/>
        <function-ref name="edge" scoped="" ref="0x409c3a50"/>
        <function-ref name="enable" scoped="" ref="0x409c3b30"/>
        <function-ref name="getValue" scoped="" ref="0x409c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x409bcd78" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x409bcd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x409ba698" loc="35:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x409ba698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409ba870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x409bc488" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x409bc488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x409bb2b0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x409bb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bb488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x409bab10" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x409bab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bace8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x409bb698" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x409bb698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x409bb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x409bc900" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x409bc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x409ba220" loc="34:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x409ba220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409ba3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x409bc010" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x409bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409bc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409bd998" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409bd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409bdb70"/>
        <function-ref name="fired" scoped="" ref="0x409bdc50"/>
        <function-ref name="disable" scoped="" ref="0x409bdd30"/>
        <function-ref name="edge" scoped="" ref="0x409bde10"/>
        <function-ref name="enable" scoped="" ref="0x409bdef0"/>
        <function-ref name="getValue" scoped="" ref="0x409cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409cb190" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409cb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409cb368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409e1b68" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409e1b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e1d40"/>
        <function-ref name="fired" scoped="" ref="0x409e1e20"/>
        <function-ref name="disable" scoped="" ref="0x409e1f00"/>
        <function-ref name="edge" scoped="" ref="0x409e0010"/>
        <function-ref name="enable" scoped="" ref="0x409e00f0"/>
        <function-ref name="getValue" scoped="" ref="0x409e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409e0350" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409e0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409e0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409dfc70" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409dfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409dfe48"/>
        <function-ref name="fired" scoped="" ref="0x409dff28"/>
        <function-ref name="disable" scoped="" ref="0x409de018"/>
        <function-ref name="edge" scoped="" ref="0x409de0f8"/>
        <function-ref name="enable" scoped="" ref="0x409de1d8"/>
        <function-ref name="getValue" scoped="" ref="0x409de2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409de438" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409de438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409de610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409ddd60" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409dc010"/>
        <function-ref name="fired" scoped="" ref="0x409dc0f0"/>
        <function-ref name="disable" scoped="" ref="0x409dc1d0"/>
        <function-ref name="edge" scoped="" ref="0x409dc2b0"/>
        <function-ref name="enable" scoped="" ref="0x409dc390"/>
        <function-ref name="getValue" scoped="" ref="0x409dc470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409dc5f0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409dc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409dc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409da050" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409da050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409da228"/>
        <function-ref name="fired" scoped="" ref="0x409da308"/>
        <function-ref name="disable" scoped="" ref="0x409da3e8"/>
        <function-ref name="edge" scoped="" ref="0x409da4c8"/>
        <function-ref name="enable" scoped="" ref="0x409da5a8"/>
        <function-ref name="getValue" scoped="" ref="0x409da688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409da808" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409da808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409da9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409f92b0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409f92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f9488"/>
        <function-ref name="fired" scoped="" ref="0x409f9568"/>
        <function-ref name="disable" scoped="" ref="0x409f9648"/>
        <function-ref name="edge" scoped="" ref="0x409f9728"/>
        <function-ref name="enable" scoped="" ref="0x409f9808"/>
        <function-ref name="getValue" scoped="" ref="0x409f98e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409f9a68" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409f9a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409f7538" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409f7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f7710"/>
        <function-ref name="fired" scoped="" ref="0x409f77f0"/>
        <function-ref name="disable" scoped="" ref="0x409f78d0"/>
        <function-ref name="edge" scoped="" ref="0x409f79b0"/>
        <function-ref name="enable" scoped="" ref="0x409f7a90"/>
        <function-ref name="getValue" scoped="" ref="0x409f7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409f7cf0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409f7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x409f5718" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x409f5718"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f58f0"/>
        <function-ref name="fired" scoped="" ref="0x409f59d0"/>
        <function-ref name="disable" scoped="" ref="0x409f5ab0"/>
        <function-ref name="edge" scoped="" ref="0x409f5b90"/>
        <function-ref name="enable" scoped="" ref="0x409f5c70"/>
        <function-ref name="getValue" scoped="" ref="0x409f5d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x409f5ed0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x409f5ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f40c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x409ed410" loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x409ed410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409ed5e8"/>
        <function-ref name="isInput" scoped="" ref="0x409ed6c8"/>
        <function-ref name="toggle" scoped="" ref="0x409ed7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x409ed888"/>
        <function-ref name="get" scoped="" ref="0x409ed968"/>
        <function-ref name="makeOutput" scoped="" ref="0x409eda48"/>
        <function-ref name="set" scoped="" ref="0x409edb28"/>
        <function-ref name="clr" scoped="" ref="0x409edc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x409f0c88" loc="47:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409f0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409f0e60"/>
        <function-ref name="disable" scoped="" ref="0x409ed010"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409ed0f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x409ecc58" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x409ecc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409ece30"/>
        <function-ref name="runTask" scoped="" ref="0x409ecf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b4d190" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b4d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4d468"/>
        <function-ref name="write" scoped="" ref="0x40b4d548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b53548" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b53548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b53720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b507a0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b507a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50978"/>
        <function-ref name="write" scoped="" ref="0x40b50a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b4c010" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4c1e8"/>
        <function-ref name="write" scoped="" ref="0x40b4c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b4c448" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b4c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4c620"/>
        <function-ref name="write" scoped="" ref="0x40b4c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40b466e8" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40b466e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b468c0"/>
        <function-ref name="write" scoped="" ref="0x40b469a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40b475c8" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b475c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b477a0"/>
        <function-ref name="write" scoped="" ref="0x40b47880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b52010" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b52010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b521e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b48cb8" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b48cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b48e90"/>
        <function-ref name="write" scoped="" ref="0x40b47010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b4e030" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b4e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4e208"/>
        <function-ref name="write" scoped="" ref="0x40b4e2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b4e8a0" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b4e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4ea78"/>
        <function-ref name="write" scoped="" ref="0x40b4eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b4be38" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b4be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4a050"/>
        <function-ref name="write" scoped="" ref="0x40b4a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b4c880" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b4c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4ca58"/>
        <function-ref name="write" scoped="" ref="0x40b4cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b54958" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b54958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b54b30"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b54c10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b54cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b52d70" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b52d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b51190" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b51190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b513e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b51568" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b51568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b51740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40b47190" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b47190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b47368"/>
        <function-ref name="write" scoped="" ref="0x40b47448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b526c0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b526c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b52898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b4e468" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b4e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4e640"/>
        <function-ref name="write" scoped="" ref="0x40b4e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b50bd8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b50bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50db0"/>
        <function-ref name="write" scoped="" ref="0x40b50e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b531f0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b531f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b533c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40b462b0" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b462b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b46488"/>
        <function-ref name="write" scoped="" ref="0x40b46568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40b47a00" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b47a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b47bd8"/>
        <function-ref name="write" scoped="" ref="0x40b47cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b4a2b0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b4a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4a488"/>
        <function-ref name="write" scoped="" ref="0x40b4a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b48880" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b48a58"/>
        <function-ref name="write" scoped="" ref="0x40b48b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b4b190" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b4b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4b368"/>
        <function-ref name="write" scoped="" ref="0x40b4b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b46b20" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b46b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b46ef8"/>
        <function-ref name="writeDone" scoped="" ref="0x40b45010"/>
        <function-ref name="write" scoped="" ref="0x40b450f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b451d0"/>
        <function-ref name="readDone" scoped="" ref="0x40b452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b54e70" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b54e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b53070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b50368" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b50368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50540"/>
        <function-ref name="write" scoped="" ref="0x40b50620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b4ecd8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b4ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4eeb0"/>
        <function-ref name="write" scoped="" ref="0x40b4d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b4ccb8" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b4ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4ce90"/>
        <function-ref name="write" scoped="" ref="0x40b4b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b4d6c8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b4d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4d8a0"/>
        <function-ref name="write" scoped="" ref="0x40b4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b538a0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b538a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b53a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b4db00" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b4db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4dcd8"/>
        <function-ref name="write" scoped="" ref="0x40b4ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b542a0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b542a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b54478"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b54558"/>
        <function-ref name="request" scoped="" ref="0x40b54638"/>
        <function-ref name="granted" scoped="" ref="0x40b54718"/>
        <function-ref name="isOwner" scoped="" ref="0x40b547f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b518c0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b51a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b50010" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b50010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b501e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b48448" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b48448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b48620"/>
        <function-ref name="write" scoped="" ref="0x40b48700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b48010" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b481e8"/>
        <function-ref name="write" scoped="" ref="0x40b482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b52a18" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b52a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b52bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b4ab20" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b4ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4acf8"/>
        <function-ref name="write" scoped="" ref="0x40b4add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40b47e38" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40b47e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b46050"/>
        <function-ref name="write" scoped="" ref="0x40b46130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b4a6e8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b4a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4a8c0"/>
        <function-ref name="write" scoped="" ref="0x40b4a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b53bf8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b53bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b53dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b4ba00" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b4ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4bbd8"/>
        <function-ref name="write" scoped="" ref="0x40b4bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b52368" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b52368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b52540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b4b5c8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b4b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4b7a0"/>
        <function-ref name="write" scoped="" ref="0x40b4b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b51c18" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b51c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b51df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b45430" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b45430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b45608"/>
        <function-ref name="writeDone" scoped="" ref="0x40b456e8"/>
        <function-ref name="write" scoped="" ref="0x40b457c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40b458a8"/>
        <function-ref name="readDone" scoped="" ref="0x40b45988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40a2c7a8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40a2c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a2c980"/>
        <function-ref name="writeDone" scoped="" ref="0x40a2ca60"/>
        <function-ref name="write" scoped="" ref="0x40a2cb40"/>
        <function-ref name="beginRead" scoped="" ref="0x40a2cc20"/>
        <function-ref name="readDone" scoped="" ref="0x40a2cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a12f00" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a12f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a2c0f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a2c1d0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a2c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40a2b208" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40a2b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2b3e0"/>
        <function-ref name="write" scoped="" ref="0x40a2b4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40a2b9d0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40a2b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a2bba8"/>
        <function-ref name="write" scoped="" ref="0x40a2bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a127b0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a127b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a12988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a12a68"/>
        <function-ref name="request" scoped="" ref="0x40a12b48"/>
        <function-ref name="granted" scoped="" ref="0x40a12c28"/>
        <function-ref name="isOwner" scoped="" ref="0x40a12d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40a2a1f8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40a2a1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40a3e210" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a3e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3e3e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3e4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40a25100" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40a25100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a252d8"/>
        <function-ref name="writeDone" scoped="" ref="0x40a253b8"/>
        <function-ref name="write" scoped="" ref="0x40a25498"/>
        <function-ref name="beginRead" scoped="" ref="0x40a25578"/>
        <function-ref name="readDone" scoped="" ref="0x40a25658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a2ad68" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a2ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a26010"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a260f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a261d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40a23ed0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a23ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a220c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40a3e6e0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40a3e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a3e8b8"/>
        <function-ref name="toIdle" scoped="" ref="0x40a3e998"/>
        <function-ref name="isState" scoped="" ref="0x40a3ea78"/>
        <function-ref name="isIdle" scoped="" ref="0x40a3eb58"/>
        <function-ref name="requestState" scoped="" ref="0x40a3ec38"/>
        <function-ref name="forceState" scoped="" ref="0x40a3ed18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a24ee8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a24ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a230e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a231c0"/>
        <function-ref name="request" scoped="" ref="0x40a232a0"/>
        <function-ref name="granted" scoped="" ref="0x40a23380"/>
        <function-ref name="isOwner" scoped="" ref="0x40a23460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40a25b28" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40a25b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a25d00"/>
        <function-ref name="write" scoped="" ref="0x40a25de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x40a242f0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x40a242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a244c8"/>
        <function-ref name="write" scoped="" ref="0x40a245a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a3ee88" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a3ee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a21070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a21150"/>
        <function-ref name="led1On" scoped="" ref="0x40a21230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a21310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a213f0"/>
        <function-ref name="get" scoped="" ref="0x40a214d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a215b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a21930"/>
        <function-ref name="set" scoped="" ref="0x40a21690"/>
        <function-ref name="led0On" scoped="" ref="0x40a21770"/>
        <function-ref name="led2On" scoped="" ref="0x40a21850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a26648" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a26648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a26820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a26900"/>
        <function-ref name="request" scoped="" ref="0x40a269e0"/>
        <function-ref name="granted" scoped="" ref="0x40a26ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a26ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40a3fbd0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40a3fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a3fda8"/>
        <function-ref name="runTask" scoped="" ref="0x40a3fe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40a24aa8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40a24aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a24c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a531e8" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a531e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a533c0"/>
        <function-ref name="toIdle" scoped="" ref="0x40a534a0"/>
        <function-ref name="isState" scoped="" ref="0x40a53580"/>
        <function-ref name="isIdle" scoped="" ref="0x40a53660"/>
        <function-ref name="requestState" scoped="" ref="0x40a53740"/>
        <function-ref name="forceState" scoped="" ref="0x40a53820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a75578" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a75578"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a75750"/>
        <function-ref name="toIdle" scoped="" ref="0x40a75830"/>
        <function-ref name="isState" scoped="" ref="0x40a75910"/>
        <function-ref name="isIdle" scoped="" ref="0x40a759f0"/>
        <function-ref name="requestState" scoped="" ref="0x40a75ad0"/>
        <function-ref name="forceState" scoped="" ref="0x40a75bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a71598" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a71598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a71770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40a71bc8" loc="67:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40a71bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40a71da0"/>
        <function-ref name="toIdle" scoped="" ref="0x40a71e80"/>
        <function-ref name="isState" scoped="" ref="0x40a6e010"/>
        <function-ref name="isIdle" scoped="" ref="0x40a6e0f0"/>
        <function-ref name="requestState" scoped="" ref="0x40a6e1d0"/>
        <function-ref name="forceState" scoped="" ref="0x40a6e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40b3d010" loc="43:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40b3d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b3d1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a86c48" loc="42:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a86c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a86e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a86258" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a86258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a86430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a86590" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a86590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a86768"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a86848"/>
        <function-ref name="request" scoped="" ref="0x40a86928"/>
        <function-ref name="granted" scoped="" ref="0x40a86a08"/>
        <function-ref name="isOwner" scoped="" ref="0x40a86ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a7ea48" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a7ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a7ec20"/>
        <function-ref name="sendDone" scoped="" ref="0x40a7ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a821b8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a821b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a82390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a85d60" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a85d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a7e410" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a7e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a7e5e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a7e6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x40a7e7a8"/>
        <function-ref name="write" scoped="" ref="0x40a7e888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a811b0" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a811b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a81388"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a81468"/>
        <function-ref name="request" scoped="" ref="0x40a81548"/>
        <function-ref name="granted" scoped="" ref="0x40a81628"/>
        <function-ref name="isOwner" scoped="" ref="0x40a81708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a9a1e0" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a9a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a9a3b8"/>
        <function-ref name="runTask" scoped="" ref="0x40a9a498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a7a010" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a7a1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a7a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a78540" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a78540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a78718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a787f8"/>
        <function-ref name="request" scoped="" ref="0x40a788d8"/>
        <function-ref name="granted" scoped="" ref="0x40a789b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a78a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a7b628" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a7b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a7b2c8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a7b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a7b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a8c8f0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a8c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a8cac8"/>
        <function-ref name="sleep" scoped="" ref="0x40a79e98"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a8cc88"/>
        <function-ref name="dataReady" scoped="" ref="0x40a78010"/>
        <function-ref name="initMaster" scoped="" ref="0x40a8ce48"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a8cf28"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a79018"/>
        <function-ref name="read" scoped="" ref="0x40a790f8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a791d8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a792b8"/>
        <function-ref name="setClock" scoped="" ref="0x40a79398"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a79478"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a79558"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a796b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a79798"/>
        <function-ref name="write" scoped="" ref="0x40a79878"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a79958"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a79a38"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a79b18"/>
        <function-ref name="getClock" scoped="" ref="0x40a79bf8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a79cd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a8cba8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a8cd68"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a79db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40a7b9b0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a7b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a7bb88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a7bc68"/>
        <function-ref name="splitRead" scoped="" ref="0x40a7bd48"/>
        <function-ref name="write" scoped="" ref="0x40a7be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a7a740" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a7a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a7a918"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a7a9f8"/>
        <function-ref name="request" scoped="" ref="0x40a7aad8"/>
        <function-ref name="granted" scoped="" ref="0x40a7abb8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a7ac98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a89c30" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a89c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a89e08"/>
        <function-ref name="userId" scoped="" ref="0x40a89ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a8b0e8" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a8b0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a8b2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a7ce50" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a7ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40acc050"/>
        <function-ref name="sleep" scoped="" ref="0x40acb470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40acc210"/>
        <function-ref name="dataReady" scoped="" ref="0x40acb550"/>
        <function-ref name="initMaster" scoped="" ref="0x40acc3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40acc4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40acc590"/>
        <function-ref name="read" scoped="" ref="0x40acc670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40acc750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40acc830"/>
        <function-ref name="setClock" scoped="" ref="0x40acc910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40acc9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40accad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40accc30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40accd10"/>
        <function-ref name="write" scoped="" ref="0x40accdf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40acced0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40acb010"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40acb0f0"/>
        <function-ref name="getClock" scoped="" ref="0x40acb1d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40acb2b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40acc130"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40acc2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40acb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40ac5bf0" loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40ac5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac5dc8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac5ea8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac3010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac30f0"/>
        <function-ref name="get" scoped="" ref="0x40ac31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac32b0"/>
        <function-ref name="set" scoped="" ref="0x40ac3390"/>
        <function-ref name="clr" scoped="" ref="0x40ac3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40ac6810" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40ac6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac69e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ac6ac8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac6ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac6c88"/>
        <function-ref name="get" scoped="" ref="0x40ac6d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac6e48"/>
        <function-ref name="set" scoped="" ref="0x40ac6f28"/>
        <function-ref name="clr" scoped="" ref="0x40ac5018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInterrupt" ref="0x40ac3a40" loc="66:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInterrupt" scoped="" ref="0x40ac3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PlatformInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="postAmble" scoped="" ref="0x40ac3c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40ac4dc8" loc="61:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40ac4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac6010"/>
        <function-ref name="isInput" scoped="" ref="0x40ac60f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ac61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac62b0"/>
        <function-ref name="get" scoped="" ref="0x40ac6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac6470"/>
        <function-ref name="set" scoped="" ref="0x40ac6550"/>
        <function-ref name="clr" scoped="" ref="0x40ac6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40ac4908" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40ac4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ac4ae0"/>
        <function-ref name="stop" scoped="" ref="0x40ac4bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40ac3678" loc="65:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40ac3678"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ac3850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40ac8010" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40ac8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ac81e8"/>
        <function-ref name="sleep" scoped="" ref="0x40ac7630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ac83a8"/>
        <function-ref name="dataReady" scoped="" ref="0x40ac7710"/>
        <function-ref name="initMaster" scoped="" ref="0x40ac8568"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ac8648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ac8728"/>
        <function-ref name="read" scoped="" ref="0x40ac8808"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ac88e8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ac89c8"/>
        <function-ref name="setClock" scoped="" ref="0x40ac8aa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ac8b88"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40ac8c68"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40ac8dc8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40ac8ea8"/>
        <function-ref name="write" scoped="" ref="0x40ac7010"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ac70f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40ac71d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40ac72b0"/>
        <function-ref name="getClock" scoped="" ref="0x40ac7390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40ac7470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ac82c8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ac8488"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40ac7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40ac5208" loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/atm128/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40ac5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac53e0"/>
        <function-ref name="isInput" scoped="" ref="0x40ac54c0"/>
        <function-ref name="toggle" scoped="" ref="0x40ac55a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac5680"/>
        <function-ref name="get" scoped="" ref="0x40ac5760"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac5840"/>
        <function-ref name="set" scoped="" ref="0x40ac5920"/>
        <function-ref name="clr" scoped="" ref="0x40ac5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b23030" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b23030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b23218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b232f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b238e8" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b238e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b23ad0"/>
        <function-ref name="configure" scoped="" ref="0x40b23bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae68c0" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae6aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae6b88"/>
        <function-ref name="request" scoped="" ref="0x40ae6c68"/>
        <function-ref name="granted" scoped="" ref="0x40ae6d48"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b23438" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b23438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b23610"/>
        <function-ref name="userId" scoped="" ref="0x40b236f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4119a010" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4119a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4119a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4119a348" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4119a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4119a520"/>
        <function-ref name="isEmpty" scoped="" ref="0x4119a600"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4119a6e0"/>
        <function-ref name="dequeue" scoped="" ref="0x4119a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41199a90" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41199a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41199c78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41199d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411983a8" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411983a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41198590"/>
        <function-ref name="configure" scoped="" ref="0x41198670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411987d0" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411987d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411989a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41198a88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41198b68"/>
        <function-ref name="dequeue" scoped="" ref="0x41198c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41199350" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41199350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41199538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41199618"/>
        <function-ref name="request" scoped="" ref="0x411996f8"/>
        <function-ref name="granted" scoped="" ref="0x411997d8"/>
        <function-ref name="isOwner" scoped="" ref="0x411998b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41199e98" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41199e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411980c0"/>
        <function-ref name="userId" scoped="" ref="0x411981a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41198dc8" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41198dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41197010"/>
        <function-ref name="runTask" scoped="" ref="0x411970f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b1edf8" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b1edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b44010"/>
        <function-ref name="isInput" scoped="" ref="0x40b440f0"/>
        <function-ref name="toggle" scoped="" ref="0x40b441d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b442b0"/>
        <function-ref name="get" scoped="" ref="0x40b44390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b44470"/>
        <function-ref name="set" scoped="" ref="0x40b44550"/>
        <function-ref name="clr" scoped="" ref="0x40b44630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a83ef0" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a83ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1e0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b1e1c0"/>
        <function-ref name="request" scoped="" ref="0x40b1e2a0"/>
        <function-ref name="granted" scoped="" ref="0x40b1e380"/>
        <function-ref name="isOwner" scoped="" ref="0x40b1e460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40b1e6c8" loc="44:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40b1e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b1e8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b1e980"/>
        <function-ref name="request" scoped="" ref="0x40b1ea60"/>
        <function-ref name="granted" scoped="" ref="0x40b1eb40"/>
        <function-ref name="isOwner" scoped="" ref="0x40b1ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b61880" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b61880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b61b58"/>
        <function-ref name="write" scoped="" ref="0x40b61c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b67d38" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b67d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b67f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b63e50" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b62050"/>
        <function-ref name="write" scoped="" ref="0x40b62130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b5f6a8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b5f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5f880"/>
        <function-ref name="write" scoped="" ref="0x40b5f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b5fae0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b5fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5fcb8"/>
        <function-ref name="write" scoped="" ref="0x40b5fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40b59cb8" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40b59cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b59e90"/>
        <function-ref name="write" scoped="" ref="0x40b80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40b5bb20" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b5bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5bcf8"/>
        <function-ref name="write" scoped="" ref="0x40b5bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b65760" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b65760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b65938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b5b2b0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b5b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5b488"/>
        <function-ref name="write" scoped="" ref="0x40b5b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b626e8" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b626e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b628c0"/>
        <function-ref name="write" scoped="" ref="0x40b629a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b61010" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b61010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b611e8"/>
        <function-ref name="write" scoped="" ref="0x40b612c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b5d468" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b5d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5d640"/>
        <function-ref name="write" scoped="" ref="0x40b5d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b5ff18" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b5ff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5e108"/>
        <function-ref name="write" scoped="" ref="0x40b5e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b67170" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b67170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b67348"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b67428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b67508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b644e8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b644e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b646c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b64840" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b64840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b64a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b64c18" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b64c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b64df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40b5b6e8" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b5b6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5b8c0"/>
        <function-ref name="write" scoped="" ref="0x40b5b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b65e10" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b65e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b62b20" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b62b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b62cf8"/>
        <function-ref name="write" scoped="" ref="0x40b62dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b622b0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b622b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b62488"/>
        <function-ref name="write" scoped="" ref="0x40b62568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b679e0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b679e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b67bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40b59880" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b59880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b59a58"/>
        <function-ref name="write" scoped="" ref="0x40b59b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40b59010" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b59010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b591e8"/>
        <function-ref name="write" scoped="" ref="0x40b592c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b5d8a0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b5d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5da78"/>
        <function-ref name="write" scoped="" ref="0x40b5db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b5ce38" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b5ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5b050"/>
        <function-ref name="write" scoped="" ref="0x40b5b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b5e7a0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b5e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5e978"/>
        <function-ref name="write" scoped="" ref="0x40b5ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b80190" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b80190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b80568"/>
        <function-ref name="writeDone" scoped="" ref="0x40b80648"/>
        <function-ref name="write" scoped="" ref="0x40b80728"/>
        <function-ref name="beginRead" scoped="" ref="0x40b80808"/>
        <function-ref name="readDone" scoped="" ref="0x40b808e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b67688" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b67688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b67860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b63a18" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b63a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b63bf0"/>
        <function-ref name="write" scoped="" ref="0x40b63cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b61448" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b61448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b61620"/>
        <function-ref name="write" scoped="" ref="0x40b61700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b5e368" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b5e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5e540"/>
        <function-ref name="write" scoped="" ref="0x40b5e620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b61db8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b61db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5f010"/>
        <function-ref name="write" scoped="" ref="0x40b5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b650b0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b650b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b65288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b5f270" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b5f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5f448"/>
        <function-ref name="write" scoped="" ref="0x40b5f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b689e0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b689e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b68bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b68c98"/>
        <function-ref name="request" scoped="" ref="0x40b68d78"/>
        <function-ref name="granted" scoped="" ref="0x40b68e58"/>
        <function-ref name="isOwner" scoped="" ref="0x40b67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b63010" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b63010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b631e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b636c0" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b63898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b5ca00" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b5ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5cbd8"/>
        <function-ref name="write" scoped="" ref="0x40b5ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b5c5c8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b5c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5c7a0"/>
        <function-ref name="write" scoped="" ref="0x40b5c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b64190" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b64190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b64368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b5c190" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b5c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5c368"/>
        <function-ref name="write" scoped="" ref="0x40b5c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40b59448" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40b59448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b59620"/>
        <function-ref name="write" scoped="" ref="0x40b59700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b5dcd8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b5dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5deb0"/>
        <function-ref name="write" scoped="" ref="0x40b5c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b65408" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b65408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b655e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b5d030" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b5d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5d208"/>
        <function-ref name="write" scoped="" ref="0x40b5d2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b65ab8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b65ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b65c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b5ebd8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b5ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5edb0"/>
        <function-ref name="write" scoped="" ref="0x40b5ee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b63368" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b63368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b63540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b80a68" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b80a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b80c40"/>
        <function-ref name="writeDone" scoped="" ref="0x40b80d20"/>
        <function-ref name="write" scoped="" ref="0x40b80e00"/>
        <function-ref name="beginRead" scoped="" ref="0x40b80ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40b7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b76e38" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b76e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75208"/>
        <function-ref name="write" scoped="" ref="0x40b752e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b7b368" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b7b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b774b8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b774b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77690"/>
        <function-ref name="write" scoped="" ref="0x40b77770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b75cd8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b75cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75eb0"/>
        <function-ref name="write" scoped="" ref="0x40b74010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b74190" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b74190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b74368"/>
        <function-ref name="write" scoped="" ref="0x40b74448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40b6e448" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40b6e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6e620"/>
        <function-ref name="write" scoped="" ref="0x40b6e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40b6f2b0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40b6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6f488"/>
        <function-ref name="write" scoped="" ref="0x40b6f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b7bd70" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b7bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b70a00" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b70a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b70bd8"/>
        <function-ref name="write" scoped="" ref="0x40b70cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b77d28" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b77d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77f00"/>
        <function-ref name="write" scoped="" ref="0x40b76010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b765c8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b765c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b767a0"/>
        <function-ref name="write" scoped="" ref="0x40b76880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b73b20" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b73b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b73cf8"/>
        <function-ref name="write" scoped="" ref="0x40b73dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b745c8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b745c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b747a0"/>
        <function-ref name="write" scoped="" ref="0x40b74880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b7c758" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b7c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b7c930"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b7ca10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b7caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b7ab98" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7ab98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b7aef0" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b7aef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b79188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b79308" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b79308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b794e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40b70e38" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40b70e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6f050"/>
        <function-ref name="write" scoped="" ref="0x40b6f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b7a4e8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b76190" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b76190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76368"/>
        <function-ref name="write" scoped="" ref="0x40b76448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b778f0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77ac8"/>
        <function-ref name="write" scoped="" ref="0x40b77ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b7b010" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b7b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40b6e010" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40b6e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6e1e8"/>
        <function-ref name="write" scoped="" ref="0x40b6e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40b6f6e8" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40b6f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6f8c0"/>
        <function-ref name="write" scoped="" ref="0x40b6f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b71010" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b711e8"/>
        <function-ref name="write" scoped="" ref="0x40b712c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b705c8" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b705c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b707a0"/>
        <function-ref name="write" scoped="" ref="0x40b70880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b74e38" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b74e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b73050"/>
        <function-ref name="write" scoped="" ref="0x40b73130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b6e880" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b6e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b6ec58"/>
        <function-ref name="writeDone" scoped="" ref="0x40b6ed38"/>
        <function-ref name="write" scoped="" ref="0x40b6ee18"/>
        <function-ref name="beginRead" scoped="" ref="0x40b6eef8"/>
        <function-ref name="readDone" scoped="" ref="0x40b6d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b7cc70" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b7cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7ce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b77080" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b77080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77258"/>
        <function-ref name="write" scoped="" ref="0x40b77338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b76a00" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b76a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76bd8"/>
        <function-ref name="write" scoped="" ref="0x40b76cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b74a00" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b74a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b74bd8"/>
        <function-ref name="write" scoped="" ref="0x40b74cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b75468" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b75468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75640"/>
        <function-ref name="write" scoped="" ref="0x40b75720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b7b6c0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b7b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b758a0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75a78"/>
        <function-ref name="write" scoped="" ref="0x40b75b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b7c0a0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b7c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b7c278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b7c358"/>
        <function-ref name="request" scoped="" ref="0x40b7c438"/>
        <function-ref name="granted" scoped="" ref="0x40b7c518"/>
        <function-ref name="isOwner" scoped="" ref="0x40b7c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b79660" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b79660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b79838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b79d10" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b79d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b79ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b70190" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b70368"/>
        <function-ref name="write" scoped="" ref="0x40b70448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b71cb8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b71cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71e90"/>
        <function-ref name="write" scoped="" ref="0x40b70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b7a840" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7aa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40b71880" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40b71880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71a58"/>
        <function-ref name="write" scoped="" ref="0x40b71b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40b6fb20" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40b6fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6fcf8"/>
        <function-ref name="write" scoped="" ref="0x40b6fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b71448" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b71448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71620"/>
        <function-ref name="write" scoped="" ref="0x40b71700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b7ba18" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b7ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b736e8" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b736e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b738c0"/>
        <function-ref name="write" scoped="" ref="0x40b739a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b7a190" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b7a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b732b0" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b732b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b73488"/>
        <function-ref name="write" scoped="" ref="0x40b73568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b799b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b799b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b79b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b6d190" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b6d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b6d368"/>
        <function-ref name="writeDone" scoped="" ref="0x40b6d448"/>
        <function-ref name="write" scoped="" ref="0x40b6d528"/>
        <function-ref name="beginRead" scoped="" ref="0x40b6d608"/>
        <function-ref name="readDone" scoped="" ref="0x40b6d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40b92968" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b92968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40b92b40"/>
        <function-ref name="changed" scoped="" ref="0x40b92c20"/>
        <function-ref name="amGroup" scoped="" ref="0x40b92d00"/>
        <function-ref name="setAddress" scoped="" ref="0x40b92de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40ba8390" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40ba8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40ba8568"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40ba8648"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40ba8728"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40ba8808"/>
        <function-ref name="setCca" scoped="" ref="0x40ba88e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40ba89c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40ba5468" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40ba5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40ba5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x40b84c50" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x40b84c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b84e28"/>
        <function-ref name="cancel" scoped="" ref="0x40b84f08"/>
        <function-ref name="modify" scoped="" ref="0x40ba8010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba80f0"/>
        <function-ref name="resend" scoped="" ref="0x40ba81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b847c8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b847c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b849a0"/>
        <function-ref name="stop" scoped="" ref="0x40b84a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40ba58d0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40ba58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40ba5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40bbb010" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40bbb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40bbb1e8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40bbb2c8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40bbb3a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40bbb488"/>
        <function-ref name="setCca" scoped="" ref="0x40bbb568"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40bbb648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40bb8ce0" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40bb8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bb7828"/>
        <function-ref name="clear" scoped="" ref="0x40bb7bd8"/>
        <function-ref name="isValid" scoped="" ref="0x40bb7478"/>
        <function-ref name="set" scoped="" ref="0x40bb5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40bab970" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40bab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40babb48"/>
        <function-ref name="write" scoped="" ref="0x40babc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40babe38" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40babe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baa050"/>
        <function-ref name="write" scoped="" ref="0x40baa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x40bbb908" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x40bbb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40bbbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x40bac0d8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40bac0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x40bb4348" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x40bb4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40bb4520"/>
        <function-ref name="disable" scoped="" ref="0x40bb4600"/>
        <function-ref name="captured" scoped="" ref="0x40bb46e0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40bb47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x40bba400" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x40bba400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bb98b8"/>
        <function-ref name="fired" scoped="" ref="0x40bb9088"/>
        <function-ref name="startAt" scoped="" ref="0x40bb9578"/>
        <function-ref name="isRunning" scoped="" ref="0x40bb9300"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bb9b30"/>
        <function-ref name="start" scoped="" ref="0x40bbab50"/>
        <function-ref name="stop" scoped="" ref="0x40bbadf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40bb9de0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40bb9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40bb8010"/>
        <function-ref name="setNetwork" scoped="" ref="0x40bb80f0"/>
        <function-ref name="getRssi" scoped="" ref="0x40bb81d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40bb82b0"/>
        <function-ref name="getPower" scoped="" ref="0x40bb8390"/>
        <function-ref name="getLqi" scoped="" ref="0x40bb8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x40baee58" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40baee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bad050"/>
        <function-ref name="write" scoped="" ref="0x40bad130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x40bad380" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40bad380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bad558"/>
        <function-ref name="write" scoped="" ref="0x40bad638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x40bcf5e8" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40bcf5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcf7c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40bcf8a0"/>
        <function-ref name="sfd" scoped="" ref="0x40bcf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bbd8a8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bbd8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbda80"/>
        <function-ref name="cancel" scoped="" ref="0x40bbdb60"/>
        <function-ref name="modify" scoped="" ref="0x40bbdc40"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbdd20"/>
        <function-ref name="resend" scoped="" ref="0x40bbde00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x40bae0f8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bae0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bae2d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bae3b0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bae490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x40bac508" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40bac508"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40bb34b0" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40bb34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb3688"/>
        <function-ref name="isInput" scoped="" ref="0x40bb3768"/>
        <function-ref name="toggle" scoped="" ref="0x40bb3848"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb3928"/>
        <function-ref name="get" scoped="" ref="0x40bb3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb3ae8"/>
        <function-ref name="set" scoped="" ref="0x40bb3bc8"/>
        <function-ref name="clr" scoped="" ref="0x40bb3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bbd010" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bb8678" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bb8850"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bb8930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x40bb0bf0" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bb0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bb0dc8"/>
        <function-ref name="isSet" scoped="" ref="0x40bb0ea8"/>
        <function-ref name="cancel" scoped="" ref="0x40bb4010"/>
        <function-ref name="set" scoped="" ref="0x40bb40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40bac948" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40bac948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bacc20"/>
        <function-ref name="write" scoped="" ref="0x40bacd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40bb2928" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40bb2928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb2b00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb2be0"/>
        <function-ref name="request" scoped="" ref="0x40bb2cc0"/>
        <function-ref name="granted" scoped="" ref="0x40bb2da0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb2e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x40bb49c0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x40bb49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb4c18"/>
        <function-ref name="isInput" scoped="" ref="0x40bb4cf8"/>
        <function-ref name="toggle" scoped="" ref="0x40bb4dd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb4eb8"/>
        <function-ref name="get" scoped="" ref="0x40bb3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb30f0"/>
        <function-ref name="set" scoped="" ref="0x40bb31d0"/>
        <function-ref name="clr" scoped="" ref="0x40bb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40baa340" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40baa340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baa518"/>
        <function-ref name="write" scoped="" ref="0x40baa5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x40baa820" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40baa820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baa9f8"/>
        <function-ref name="write" scoped="" ref="0x40baaad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40bad868" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bad868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bada40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x40bb3ea8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x40bb3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bb20c0"/>
        <function-ref name="isInput" scoped="" ref="0x40bb21a0"/>
        <function-ref name="toggle" scoped="" ref="0x40bb2280"/>
        <function-ref name="isOutput" scoped="" ref="0x40bb2360"/>
        <function-ref name="get" scoped="" ref="0x40bb2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bb2520"/>
        <function-ref name="set" scoped="" ref="0x40bb2600"/>
        <function-ref name="clr" scoped="" ref="0x40bb26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40bcfb10" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bcfb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bcfce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bcfdc8"/>
        <function-ref name="led1On" scoped="" ref="0x40bcfea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ba9010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ba90f0"/>
        <function-ref name="get" scoped="" ref="0x40ba91d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ba92b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ba9630"/>
        <function-ref name="set" scoped="" ref="0x40ba9390"/>
        <function-ref name="led0On" scoped="" ref="0x40ba9470"/>
        <function-ref name="led2On" scoped="" ref="0x40ba9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40bab450" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40bab450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bab628"/>
        <function-ref name="write" scoped="" ref="0x40bab708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40bbd3b0" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40bbd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40bbd588"/>
        <function-ref name="stop" scoped="" ref="0x40bbd668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x40bae6b8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40bae6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40bae890"/>
        <function-ref name="writeDone" scoped="" ref="0x40bae970"/>
        <function-ref name="write" scoped="" ref="0x40baea50"/>
        <function-ref name="beginRead" scoped="" ref="0x40baeb30"/>
        <function-ref name="readDone" scoped="" ref="0x40baec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x40badc78" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40badc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bade50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x40bab010" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40bab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40bab1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x40bbbd90" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x40bbbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40bba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40c20190" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40c20190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c20468"/>
        <function-ref name="write" scoped="" ref="0x40c20548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40c26598" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40c26598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40c237a0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40c237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c23978"/>
        <function-ref name="write" scoped="" ref="0x40c23a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40c1f010" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1f1e8"/>
        <function-ref name="write" scoped="" ref="0x40c1f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40c1f448" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40c1f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1f620"/>
        <function-ref name="write" scoped="" ref="0x40c1f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40c196e8" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c196e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c198c0"/>
        <function-ref name="write" scoped="" ref="0x40c199a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40c1a5c8" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c1a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a7a0"/>
        <function-ref name="write" scoped="" ref="0x40c1a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40c25010" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40c25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c251e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40c1bcb8" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40c1bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1be90"/>
        <function-ref name="write" scoped="" ref="0x40c1a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40c21030" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40c21030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21208"/>
        <function-ref name="write" scoped="" ref="0x40c212e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40c218a0" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40c218a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21a78"/>
        <function-ref name="write" scoped="" ref="0x40c21b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40c1ee38" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40c1ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d050"/>
        <function-ref name="write" scoped="" ref="0x40c1d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40c1f880" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40c1f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1fa58"/>
        <function-ref name="write" scoped="" ref="0x40c1fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40bfd988" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40bfd988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40bfdb60"/>
        <function-ref name="abortRelease" scoped="" ref="0x40bfdc40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40bfdd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40c25d70" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40c25d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40c24190" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c24190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c243e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40c24568" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40c24568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40c1a190" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c1a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a368"/>
        <function-ref name="write" scoped="" ref="0x40c1a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40c256c0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40c256c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c25898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40c21468" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40c21468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21640"/>
        <function-ref name="write" scoped="" ref="0x40c21720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40c23bd8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40c23bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c23db0"/>
        <function-ref name="write" scoped="" ref="0x40c23e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40c26240" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40c26240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40c192b0" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40c192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c19488"/>
        <function-ref name="write" scoped="" ref="0x40c19568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40c1aa00" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c1aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1abd8"/>
        <function-ref name="write" scoped="" ref="0x40c1acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40c1d2b0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40c1d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d488"/>
        <function-ref name="write" scoped="" ref="0x40c1d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40c1b880" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40c1b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ba58"/>
        <function-ref name="write" scoped="" ref="0x40c1bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40c1e190" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40c1e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1e368"/>
        <function-ref name="write" scoped="" ref="0x40c1e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40c19b20" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c19b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c19ef8"/>
        <function-ref name="writeDone" scoped="" ref="0x40c18010"/>
        <function-ref name="write" scoped="" ref="0x40c180f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40c181d0"/>
        <function-ref name="readDone" scoped="" ref="0x40c182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40bfdea0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40bfdea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c260c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40c23368" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40c23368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c23540"/>
        <function-ref name="write" scoped="" ref="0x40c23620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40c21cd8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40c21cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c21eb0"/>
        <function-ref name="write" scoped="" ref="0x40c20010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40c1fcb8" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40c1fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1fe90"/>
        <function-ref name="write" scoped="" ref="0x40c1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40c206c8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40c206c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c208a0"/>
        <function-ref name="write" scoped="" ref="0x40c20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40c268f0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40c268f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40c20b00" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c20b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c20cd8"/>
        <function-ref name="write" scoped="" ref="0x40c20db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bfd2d0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bfd2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bfd4a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bfd588"/>
        <function-ref name="request" scoped="" ref="0x40bfd668"/>
        <function-ref name="granted" scoped="" ref="0x40bfd748"/>
        <function-ref name="isOwner" scoped="" ref="0x40bfd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40c248c0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c248c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40c23010" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40c23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c231e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40c1b448" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40c1b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1b620"/>
        <function-ref name="write" scoped="" ref="0x40c1b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40c1b010" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40c1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1b1e8"/>
        <function-ref name="write" scoped="" ref="0x40c1b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40c25a18" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c25a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c25bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40c1db20" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40c1db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1dcf8"/>
        <function-ref name="write" scoped="" ref="0x40c1ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40c1ae38" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40c1ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c19050"/>
        <function-ref name="write" scoped="" ref="0x40c19130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40c1d6e8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40c1d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1d8c0"/>
        <function-ref name="write" scoped="" ref="0x40c1d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40c26c48" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40c26c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c26e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40c1ea00" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40c1ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ebd8"/>
        <function-ref name="write" scoped="" ref="0x40c1ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40c25368" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40c25368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c25540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40c1e5c8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40c1e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1e7a0"/>
        <function-ref name="write" scoped="" ref="0x40c1e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40c24c18" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40c24c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c24df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40c18430" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40c18430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c18608"/>
        <function-ref name="writeDone" scoped="" ref="0x40c186e8"/>
        <function-ref name="write" scoped="" ref="0x40c187c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40c188a8"/>
        <function-ref name="readDone" scoped="" ref="0x40c18988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40c3b688" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40c3b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3b860"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40c3b940"/>
        <function-ref name="sfd" scoped="" ref="0x40c3ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c3bbc8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c3bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40c3a0c8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40c3a0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c3a2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c3b1e8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c3b1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c3b3c0"/>
        <function-ref name="stop" scoped="" ref="0x40c3b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40c34df0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40c34df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c33010"/>
        <function-ref name="isInput" scoped="" ref="0x40c330f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c331d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c332b0"/>
        <function-ref name="get" scoped="" ref="0x40c33390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c33470"/>
        <function-ref name="set" scoped="" ref="0x40c33550"/>
        <function-ref name="clr" scoped="" ref="0x40c33630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40c30f28" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40c30f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40c2f110"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40c2f1f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40c2f2d0"/>
        <function-ref name="syncDone" scoped="" ref="0x40c2f3b0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40c2f490"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40c2f570"/>
        <function-ref name="setChannel" scoped="" ref="0x40c2f650"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40c2f730"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40c2f810"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40c2f8f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40c2f9d0"/>
        <function-ref name="sync" scoped="" ref="0x40c2fab0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c2fb90"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40c2fcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40c4e230" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40c4e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c4e408"/>
        <function-ref name="runTask" scoped="" ref="0x40c4e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c2e0b0" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c2e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c2ebb0"/>
        <function-ref name="clear" scoped="" ref="0x40c2d010"/>
        <function-ref name="isValid" scoped="" ref="0x40c2e800"/>
        <function-ref name="set" scoped="" ref="0x40c2d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40c33848" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40c33848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c33a20"/>
        <function-ref name="isInput" scoped="" ref="0x40c33b00"/>
        <function-ref name="toggle" scoped="" ref="0x40c33be0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c33cc0"/>
        <function-ref name="get" scoped="" ref="0x40c33da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c33e80"/>
        <function-ref name="set" scoped="" ref="0x40c32010"/>
        <function-ref name="clr" scoped="" ref="0x40c320f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x40c2c278" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40c2c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2c450"/>
        <function-ref name="write" scoped="" ref="0x40c2c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x40c2c740" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40c2c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2c918"/>
        <function-ref name="write" scoped="" ref="0x40c2c9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40c2a128" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40c2a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2a300"/>
        <function-ref name="write" scoped="" ref="0x40c2a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40c30250" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c30250"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c30428"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c30508"/>
        <function-ref name="getRssi" scoped="" ref="0x40c305e8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c306c8"/>
        <function-ref name="getPower" scoped="" ref="0x40c307a8"/>
        <function-ref name="getLqi" scoped="" ref="0x40c30888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40c365a0" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40c365a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c36778"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40c36858"/>
        <function-ref name="sfd" scoped="" ref="0x40c36938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40c319c0" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40c319c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c31b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40c343e8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40c343e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c345c0"/>
        <function-ref name="isInput" scoped="" ref="0x40c346a0"/>
        <function-ref name="toggle" scoped="" ref="0x40c34780"/>
        <function-ref name="isOutput" scoped="" ref="0x40c34860"/>
        <function-ref name="get" scoped="" ref="0x40c34940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c34a20"/>
        <function-ref name="set" scoped="" ref="0x40c34b00"/>
        <function-ref name="clr" scoped="" ref="0x40c34be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x40c2a628" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40c2a628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2a800"/>
        <function-ref name="write" scoped="" ref="0x40c2a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c3ad50" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c3ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c3af28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40c30a90" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c30a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c30c68"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c30d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c36ae0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c36ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c36cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40c32a48" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40c32a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c32c20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c32d00"/>
        <function-ref name="request" scoped="" ref="0x40c32de0"/>
        <function-ref name="granted" scoped="" ref="0x40c32ec0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c31010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x40c2cc08" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40c2cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2cde0"/>
        <function-ref name="write" scoped="" ref="0x40c2cec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40c31238" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40c31238"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40c31410"/>
        <function-ref name="writeDone" scoped="" ref="0x40c314f0"/>
        <function-ref name="write" scoped="" ref="0x40c315d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40c316b0"/>
        <function-ref name="readDone" scoped="" ref="0x40c31790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40c2ab10" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40c2ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c2ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40c34010" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40c34010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40c341e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c29010" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c291e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c292c8"/>
        <function-ref name="led1On" scoped="" ref="0x40c293a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c29488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c29568"/>
        <function-ref name="get" scoped="" ref="0x40c29648"/>
        <function-ref name="led1Off" scoped="" ref="0x40c29728"/>
        <function-ref name="led2Off" scoped="" ref="0x40c29aa8"/>
        <function-ref name="set" scoped="" ref="0x40c29808"/>
        <function-ref name="led0On" scoped="" ref="0x40c298e8"/>
        <function-ref name="led2On" scoped="" ref="0x40c299c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40c2dcf8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40c2dcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c2ded0"/>
        <function-ref name="write" scoped="" ref="0x40c2c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40c2d8b8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40c2d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c2da90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40c32388" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40c32388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c32560"/>
        <function-ref name="disable" scoped="" ref="0x40c32640"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40c32720"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40c32800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40c31df0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40c31df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40c30070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c36100" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c36100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c362d8"/>
        <function-ref name="stop" scoped="" ref="0x40c363b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c72790" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c72968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40c754a8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c754a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c75680"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c75760"/>
        <function-ref name="getRssi" scoped="" ref="0x40c75840"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c75920"/>
        <function-ref name="getPower" scoped="" ref="0x40c75a00"/>
        <function-ref name="getLqi" scoped="" ref="0x40c75ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40c72de8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c72de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c71920"/>
        <function-ref name="clear" scoped="" ref="0x40c71cd0"/>
        <function-ref name="isValid" scoped="" ref="0x40c71570"/>
        <function-ref name="set" scoped="" ref="0x40c6f0a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40c722e0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c722e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c724b8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c72598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c6d010" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c6d1e8"/>
        <function-ref name="isSet" scoped="" ref="0x40c6d2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40c6d3a8"/>
        <function-ref name="set" scoped="" ref="0x40c6d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c6f7e0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c6f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c6e3c0"/>
        <function-ref name="clear" scoped="" ref="0x40c6e770"/>
        <function-ref name="isValid" scoped="" ref="0x40c6e010"/>
        <function-ref name="set" scoped="" ref="0x40c6eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c75d50" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c75d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c75f28"/>
        <function-ref name="noAck" scoped="" ref="0x40c72018"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c720f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c94128" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c94128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c94300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40c6ddd8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40c6ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40c6a010"/>
        <function-ref name="setNetwork" scoped="" ref="0x40c6a0f0"/>
        <function-ref name="getRssi" scoped="" ref="0x40c6a1d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x40c6a2b0"/>
        <function-ref name="getPower" scoped="" ref="0x40c6a390"/>
        <function-ref name="getLqi" scoped="" ref="0x40c6a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40c91ee8" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c91ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c8f0e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c8f1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c8f2a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8f380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c8f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40c94780" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40c94780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c932a0"/>
        <function-ref name="clear" scoped="" ref="0x40c93650"/>
        <function-ref name="isValid" scoped="" ref="0x40c94ed0"/>
        <function-ref name="set" scoped="" ref="0x40c93a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40c6ac60" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40c6ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40c6ae38"/>
        <function-ref name="getMetadata" scoped="" ref="0x40c6af18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c918c0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c918c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c91a98"/>
        <function-ref name="isSet" scoped="" ref="0x40c91b78"/>
        <function-ref name="cancel" scoped="" ref="0x40c91c58"/>
        <function-ref name="set" scoped="" ref="0x40c91d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40c8f7a0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40c8f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c8fde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40c8e240" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40c8e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c8e888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c92178" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c92178"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c92c78"/>
        <function-ref name="clear" scoped="" ref="0x40c91048"/>
        <function-ref name="isValid" scoped="" ref="0x40c928c8"/>
        <function-ref name="set" scoped="" ref="0x40c913f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40c6a6e0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40c6a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c6a8b8"/>
        <function-ref name="noAck" scoped="" ref="0x40c6a998"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c6aa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c6b6b8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c6b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c6bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40cc10a0" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cc10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40361828"/>
            <typename><typedef-ref name="T32khz" ref="0x403619f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc17f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cc1ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cc1a68"/>
        <function-ref name="overflow" scoped="" ref="0x40cc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40cbf4c8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cbf4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cbd010"/>
        <function-ref name="fired" scoped="" ref="0x40cbe268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cbe970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cbe718"/>
        <function-ref name="getdt" scoped="" ref="0x40cbd4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40cbd268"/>
        <function-ref name="isRunning" scoped="" ref="0x40cbe4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cbfaf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cbec90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cbfd70"/>
        <function-ref name="stop" scoped="" ref="0x40cbe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40cb5e38" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40cb5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4208"/>
        <function-ref name="write" scoped="" ref="0x40cb42e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40cba388" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40cba388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cba560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40cb64b8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40cb64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6690"/>
        <function-ref name="write" scoped="" ref="0x40cb6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40cb4cd8" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40cb4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4eb0"/>
        <function-ref name="write" scoped="" ref="0x40cb3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40cb3190" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40cb3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb3368"/>
        <function-ref name="write" scoped="" ref="0x40cb3448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40cad448" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40cad448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cad620"/>
        <function-ref name="write" scoped="" ref="0x40cad700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40cae2b0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40cae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cae488"/>
        <function-ref name="write" scoped="" ref="0x40cae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40cbad90" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40cbad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40cafa00" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40cafa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cafbd8"/>
        <function-ref name="write" scoped="" ref="0x40cafcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40cb6d28" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40cb6d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6f00"/>
        <function-ref name="write" scoped="" ref="0x40cb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40cb55c8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40cb55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb57a0"/>
        <function-ref name="write" scoped="" ref="0x40cb5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40cb2b20" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40cb2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb2cf8"/>
        <function-ref name="write" scoped="" ref="0x40cb2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40cb35c8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40cb35c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb37a0"/>
        <function-ref name="write" scoped="" ref="0x40cb3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40cbb790" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40cbb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40cbb968"/>
        <function-ref name="abortRelease" scoped="" ref="0x40cbba48"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40cbbb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40cb9b98" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40cb9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb9d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40cb9ef0" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40cb9ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb8188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40cb8308" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40cb8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40cafe38" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40cafe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cae050"/>
        <function-ref name="write" scoped="" ref="0x40cae130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40cb94e8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40cb94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40cb5190" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40cb5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb5368"/>
        <function-ref name="write" scoped="" ref="0x40cb5448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40cb68f0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40cb68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6ac8"/>
        <function-ref name="write" scoped="" ref="0x40cb6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40cba030" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40cba030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cba208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40cad010" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40cad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cad1e8"/>
        <function-ref name="write" scoped="" ref="0x40cad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x40cae6e8" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x40cae6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cae8c0"/>
        <function-ref name="write" scoped="" ref="0x40cae9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40cb1010" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40cb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb11e8"/>
        <function-ref name="write" scoped="" ref="0x40cb12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40caf5c8" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40caf5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caf7a0"/>
        <function-ref name="write" scoped="" ref="0x40caf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40cb3e38" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40cb3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb2050"/>
        <function-ref name="write" scoped="" ref="0x40cb2130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40cad880" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40cad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cadc58"/>
        <function-ref name="writeDone" scoped="" ref="0x40cadd38"/>
        <function-ref name="write" scoped="" ref="0x40cade18"/>
        <function-ref name="beginRead" scoped="" ref="0x40cadef8"/>
        <function-ref name="readDone" scoped="" ref="0x40cac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40cbbca8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40cbbca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cbbe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40cb6080" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40cb6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb6258"/>
        <function-ref name="write" scoped="" ref="0x40cb6338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40cb5a00" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40cb5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb5bd8"/>
        <function-ref name="write" scoped="" ref="0x40cb5cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40cb3a00" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40cb3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb3bd8"/>
        <function-ref name="write" scoped="" ref="0x40cb3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40cb4468" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40cb4468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4640"/>
        <function-ref name="write" scoped="" ref="0x40cb4720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40cba6e0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40cba6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cba8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40cb48a0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40cb48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4a78"/>
        <function-ref name="write" scoped="" ref="0x40cb4b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cbb0d8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cbb0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cbb2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cbb390"/>
        <function-ref name="request" scoped="" ref="0x40cbb470"/>
        <function-ref name="granted" scoped="" ref="0x40cbb550"/>
        <function-ref name="isOwner" scoped="" ref="0x40cbb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40cb8660" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40cb8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb8838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40cb8d10" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40cb8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb8ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40caf190" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40caf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caf368"/>
        <function-ref name="write" scoped="" ref="0x40caf448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40cb1cb8" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40cb1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb1e90"/>
        <function-ref name="write" scoped="" ref="0x40caf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40cb9840" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40cb9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb9a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x40cb1880" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x40cb1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb1a58"/>
        <function-ref name="write" scoped="" ref="0x40cb1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40caeb20" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40caeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40caecf8"/>
        <function-ref name="write" scoped="" ref="0x40caedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40cb1448" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40cb1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb1620"/>
        <function-ref name="write" scoped="" ref="0x40cb1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40cbaa38" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40cbaa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cbac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40cb26e8" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40cb26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb28c0"/>
        <function-ref name="write" scoped="" ref="0x40cb29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40cb9190" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40cb9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb9368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40cb22b0" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40cb22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb2488"/>
        <function-ref name="write" scoped="" ref="0x40cb2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40cb89b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40cb89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40cb8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40cac190" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40cac190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40cac368"/>
        <function-ref name="writeDone" scoped="" ref="0x40cac448"/>
        <function-ref name="write" scoped="" ref="0x40cac528"/>
        <function-ref name="beginRead" scoped="" ref="0x40cac608"/>
        <function-ref name="readDone" scoped="" ref="0x40cac6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40cc3948" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cc3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cc3b20"/>
        <function-ref name="rand32" scoped="" ref="0x40cc3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cc3088" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cc3088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cc8da8" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cc8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40ced478" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ced478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ced650"/>
        <function-ref name="rand32" scoped="" ref="0x40ced730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cc2b10" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cc2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ced1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cc25f0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cc25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40cc7608" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40cc7608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cc77e0"/>
        <function-ref name="toIdle" scoped="" ref="0x40cc78c0"/>
        <function-ref name="isState" scoped="" ref="0x40cc79a0"/>
        <function-ref name="isIdle" scoped="" ref="0x40cc7a80"/>
        <function-ref name="requestState" scoped="" ref="0x40cc7b60"/>
        <function-ref name="forceState" scoped="" ref="0x40cc7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ce5a78" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ce5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce5c50"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce5d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce5e10"/>
        <function-ref name="cancel" scoped="" ref="0x40ce5ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ce5308" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ce5308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce54e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce55c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce56a0"/>
        <function-ref name="cancel" scoped="" ref="0x40ce5780"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce5860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cdf430" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cdf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cdf608"/>
        <function-ref name="getPayload" scoped="" ref="0x40cdf6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cdf7c8"/>
        <function-ref name="cancel" scoped="" ref="0x40cdf8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdf988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ce2940" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ce2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ce2b18"/>
        <function-ref name="getPayload" scoped="" ref="0x40ce2bf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ce2cd8"/>
        <function-ref name="cancel" scoped="" ref="0x40ce2db8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ce2e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40cde350" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cde350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cde528"/>
        <function-ref name="rand32" scoped="" ref="0x40cde608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cdf040" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cdf040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cdf218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40cde7f0" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cde7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40cde9c8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40cdeaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40cdfb00" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40cdfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cdfcd8"/>
        <function-ref name="toIdle" scoped="" ref="0x40cdfdb8"/>
        <function-ref name="isState" scoped="" ref="0x40cdfe98"/>
        <function-ref name="isIdle" scoped="" ref="0x40cde010"/>
        <function-ref name="requestState" scoped="" ref="0x40cde0f0"/>
        <function-ref name="forceState" scoped="" ref="0x40cde1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ce1738" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ce1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ce1910"/>
        <function-ref name="toIdle" scoped="" ref="0x40ce19f0"/>
        <function-ref name="isState" scoped="" ref="0x40ce1ad0"/>
        <function-ref name="isIdle" scoped="" ref="0x40ce1bb0"/>
        <function-ref name="requestState" scoped="" ref="0x40ce1c90"/>
        <function-ref name="forceState" scoped="" ref="0x40ce1d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cff688" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cff688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cff860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ce4d68" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ce4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40cff260" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40cff260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cff438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cfb010" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cfb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cfcb48" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cfcb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cfcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cfc3d8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cfc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40cfb3d0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40cfb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40cfb5a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40cfb688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40cfc800" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40cfc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cfc9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d16748" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d16748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d16920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d16af8" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d16af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d16cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d16db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d16e90"/>
        <function-ref name="cancel" scoped="" ref="0x40d15010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d17090" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d17090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d17268"/>
        <function-ref name="getPayload" scoped="" ref="0x40d17348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d17428"/>
        <function-ref name="cancel" scoped="" ref="0x40d17508"/>
        <function-ref name="sendDone" scoped="" ref="0x40d175e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40d17b40" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40d17b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d17d18"/>
        <function-ref name="getPayload" scoped="" ref="0x40d17df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d17ed8"/>
        <function-ref name="cancel" scoped="" ref="0x40d16010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d17770" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d17770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d17948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d189a0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d18b78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d18c58"/>
        <function-ref name="request" scoped="" ref="0x40d18d38"/>
        <function-ref name="granted" scoped="" ref="0x40d18e18"/>
        <function-ref name="isOwner" scoped="" ref="0x40d18ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40d16320" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40d16320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d164f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d0f550" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d0f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d0f728"/>
        <function-ref name="getPayload" scoped="" ref="0x40d0f808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d0f8e8"/>
        <function-ref name="cancel" scoped="" ref="0x40d0f9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d0faa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d0fcb8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d0fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d0fe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x40d2a3c0" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x40d2a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d2a598"/>
        <function-ref name="runTask" scoped="" ref="0x40d2a678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40d0e060" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d0e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d0e238"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d0e318"/>
        <function-ref name="getRssi" scoped="" ref="0x40d0e3f8"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d0e4d8"/>
        <function-ref name="getPower" scoped="" ref="0x40d0e5b8"/>
        <function-ref name="getLqi" scoped="" ref="0x40d0e698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x40d109b8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x40d109b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d10b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40d10c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d10d50"/>
        <function-ref name="cancel" scoped="" ref="0x40d10e30"/>
        <function-ref name="sendDone" scoped="" ref="0x40d10f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40d0ed58" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40d0ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d0d010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d0d0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d0d1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40d0d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40d0e880" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d0e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40d0ea58"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d0eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d105e8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d105e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d107c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d12718" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d12718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d128f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d129d0"/>
        <function-ref name="request" scoped="" ref="0x40d12ab0"/>
        <function-ref name="granted" scoped="" ref="0x40d12b90"/>
        <function-ref name="isOwner" scoped="" ref="0x40d12c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d12e58" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d12e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d10050"/>
        <function-ref name="getPayload" scoped="" ref="0x40d10130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d10210"/>
        <function-ref name="cancel" scoped="" ref="0x40d102f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d103d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x40d0f160" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x40d0f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d0f338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d139a0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d13b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40d13cd8" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40d13cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d13eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d47010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d470f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40d471d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d41c78" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d41c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d41e50"/>
        <function-ref name="stopDone" scoped="" ref="0x40d40010"/>
        <function-ref name="start" scoped="" ref="0x40d400f0"/>
        <function-ref name="stop" scoped="" ref="0x40d401d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d40c18" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d40c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d40df0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d40ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d3f010"/>
        <function-ref name="cancel" scoped="" ref="0x40d3f0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d3f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d3f3e0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d3f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d3f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d44ac8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d44ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d44ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d44d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d44e60"/>
        <function-ref name="cancel" scoped="" ref="0x40d41010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40d41640" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40d41640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40d41818"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40d418f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40d419d8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40d41ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40d403c8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40d403c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d405a0"/>
        <function-ref name="toIdle" scoped="" ref="0x40d40680"/>
        <function-ref name="isState" scoped="" ref="0x40d40760"/>
        <function-ref name="isIdle" scoped="" ref="0x40d40840"/>
        <function-ref name="requestState" scoped="" ref="0x40d40920"/>
        <function-ref name="forceState" scoped="" ref="0x40d40a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d3f800" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d3f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d3f9d8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d3fab8"/>
        <function-ref name="start" scoped="" ref="0x40d3fb98"/>
        <function-ref name="stop" scoped="" ref="0x40d3fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d41278" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d41278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d41450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40d3e438" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40d3e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40d3e610"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40d3e6f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40d3e7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40d3e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40d3d448" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40d3d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d3d620"/>
        <function-ref name="toIdle" scoped="" ref="0x40d3d700"/>
        <function-ref name="isState" scoped="" ref="0x40d3d7e0"/>
        <function-ref name="isIdle" scoped="" ref="0x40d3d8c0"/>
        <function-ref name="requestState" scoped="" ref="0x40d3d9a0"/>
        <function-ref name="forceState" scoped="" ref="0x40d3da80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d35ce8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d35ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d35ec0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d64010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d640f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d641d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d43e40" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d43e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d35050"/>
        <function-ref name="getPayload" scoped="" ref="0x40d35130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d35210"/>
        <function-ref name="cancel" scoped="" ref="0x40d352f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d353d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40d35578" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40d35578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d35750"/>
        <function-ref name="setRetries" scoped="" ref="0x40d35830"/>
        <function-ref name="getRetries" scoped="" ref="0x40d35910"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d359f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d35ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40d61270" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d61270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d61448"/>
        <function-ref name="noAck" scoped="" ref="0x40d61528"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d61608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40d649f8" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40d649f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d64bd0"/>
        <function-ref name="setRetries" scoped="" ref="0x40d64cb0"/>
        <function-ref name="getRetries" scoped="" ref="0x40d64d90"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d64e70"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d61010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d50220" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d50220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d503f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d51a88" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d51a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d51c60"/>
        <function-ref name="getPayload" scoped="" ref="0x40d51d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d51e20"/>
        <function-ref name="cancel" scoped="" ref="0x40d51f00"/>
        <function-ref name="sendDone" scoped="" ref="0x40d50010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40d4f2f0" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40d4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40d4f4c8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40d4f5a8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40d4f688"/>
        <function-ref name="syncDone" scoped="" ref="0x40d4f768"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40d4f848"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40d4f928"/>
        <function-ref name="setChannel" scoped="" ref="0x40d4fa08"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40d4fae8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40d4fbc8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40d4fca8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40d4fd88"/>
        <function-ref name="sync" scoped="" ref="0x40d4fe68"/>
        <function-ref name="getChannel" scoped="" ref="0x40d4e010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40d4e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40d51238" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40d51238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40d51410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40d514f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40d515d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40d516b0"/>
        <function-ref name="setCca" scoped="" ref="0x40d51790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40d51870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40d53b88" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40d53b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40d53d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40d4ea40" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40d4ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40d4ec18"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40d4ecf8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40d4edd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40d4eeb8"/>
        <function-ref name="setCca" scoped="" ref="0x40d4d010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40d4d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d53190" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d53190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d53368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d53448"/>
        <function-ref name="getPayload" scoped="" ref="0x40d53528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d53608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d536e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d562c8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d562c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d564a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d56580"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d56660"/>
        <function-ref name="cancel" scoped="" ref="0x40d56740"/>
        <function-ref name="sendDone" scoped="" ref="0x40d56820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d55a38" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d55a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d55c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40d505b8" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40d505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40d50790"/>
        <function-ref name="setNetwork" scoped="" ref="0x40d50870"/>
        <function-ref name="getRssi" scoped="" ref="0x40d50950"/>
        <function-ref name="getNetwork" scoped="" ref="0x40d50a30"/>
        <function-ref name="getPower" scoped="" ref="0x40d50b10"/>
        <function-ref name="getLqi" scoped="" ref="0x40d50bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x40d4d330" loc="59:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x40d4d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d4d508"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d4d5e8"/>
        <function-ref name="request" scoped="" ref="0x40d4d6c8"/>
        <function-ref name="granted" scoped="" ref="0x40d4d7a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40d4d888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40d4e380" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40d4e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40d4e558"/>
        <function-ref name="changed" scoped="" ref="0x40d4e638"/>
        <function-ref name="amGroup" scoped="" ref="0x40d4e718"/>
        <function-ref name="setAddress" scoped="" ref="0x40d4e7f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40d50dd8" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40d50dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40d4f050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40d4f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d56c88" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d56c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d56e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d4d9f8" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d4d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d4dbd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d4dcb0"/>
        <function-ref name="led1On" scoped="" ref="0x40d4dd90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d4de70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d7c010"/>
        <function-ref name="get" scoped="" ref="0x40d7c0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40d7c1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40d7c550"/>
        <function-ref name="set" scoped="" ref="0x40d7c2b0"/>
        <function-ref name="led0On" scoped="" ref="0x40d7c390"/>
        <function-ref name="led2On" scoped="" ref="0x40d7c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40d553a0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40d553a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d55578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d544c8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d544c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d546a0"/>
        <function-ref name="source" scoped="" ref="0x40d54780"/>
        <function-ref name="address" scoped="" ref="0x40d54860"/>
        <function-ref name="destination" scoped="" ref="0x40d54940"/>
        <function-ref name="setSource" scoped="" ref="0x40d54a20"/>
        <function-ref name="setDestination" scoped="" ref="0x40d54b00"/>
        <function-ref name="type" scoped="" ref="0x40d54be0"/>
        <function-ref name="setType" scoped="" ref="0x40d54cc0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d54da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40d54e80"/>
        <function-ref name="localGroup" scoped="" ref="0x40d53010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40d54158" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40d54158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d54330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40dbdf08" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40dbdf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40dbc0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40dbc1d0"/>
        <function-ref name="start" scoped="" ref="0x40dbc2b0"/>
        <function-ref name="stop" scoped="" ref="0x40dbc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40dbdae0" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlC.nc">
      <component-ref qname="BlockingActiveMessageC.BlockingStdControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbdcb8"/>
        <function-ref name="stop" scoped="" ref="0x40dbdd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40db64f8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40db64f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40db66d0"/>
        <function-ref name="stopDone" scoped="" ref="0x40db67b0"/>
        <function-ref name="start" scoped="" ref="0x40db6890"/>
        <function-ref name="stop" scoped="" ref="0x40db6970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40dbad48" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlP.nc">
      <component-ref qname="BlockingStdControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40dbad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dbaf20"/>
        <function-ref name="stop" scoped="" ref="0x40db6018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40db1100" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40db1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40db12d8"/>
        <function-ref name="stopDone" scoped="" ref="0x40db13b8"/>
        <function-ref name="start" scoped="" ref="0x40db1498"/>
        <function-ref name="stop" scoped="" ref="0x40db1578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40db1720" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40db1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40db18f8"/>
        <function-ref name="start" scoped="" ref="0x40db19d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40db4270" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40db4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db4448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40db05e0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40db05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40db07b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40db0898"/>
        <function-ref name="led1On" scoped="" ref="0x40db0978"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40db0a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40db0b38"/>
        <function-ref name="get" scoped="" ref="0x40db0c18"/>
        <function-ref name="led1Off" scoped="" ref="0x40db0cf8"/>
        <function-ref name="led2Off" scoped="" ref="0x40daf0f0"/>
        <function-ref name="set" scoped="" ref="0x40db0dd8"/>
        <function-ref name="led0On" scoped="" ref="0x40db0eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40daf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingStdControl" ref="0x40db4920" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingStdControl" scoped="" ref="0x40db4920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40db4af8"/>
        <function-ref name="stop" scoped="" ref="0x40db4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40dddde8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingStdControlImplP.nc">
      <component-ref qname="BlockingStdControlImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40dddde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40db0010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40db00f0"/>
        <function-ref name="init" scoped="" ref="0x40db01d0"/>
        <function-ref name="remove" scoped="" ref="0x40db02b0"/>
        <function-ref name="find" scoped="" ref="0x40db0390"/>
        <function-ref name="dequeue" scoped="" ref="0x40db0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40db2858" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueC.nc">
      <component-ref qname="SystemCallQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40db2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40db2a30"/>
        <function-ref name="isEmpty" scoped="" ref="0x40db2b10"/>
        <function-ref name="init" scoped="" ref="0x40db2bf0"/>
        <function-ref name="remove" scoped="" ref="0x40db2cd0"/>
        <function-ref name="find" scoped="" ref="0x40db2db0"/>
        <function-ref name="dequeue" scoped="" ref="0x40db2e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40df5500" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40df5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40df56d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40df57b8"/>
        <function-ref name="led1On" scoped="" ref="0x40df5898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40df5978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40df5a58"/>
        <function-ref name="get" scoped="" ref="0x40df5b38"/>
        <function-ref name="led1Off" scoped="" ref="0x40df5c18"/>
        <function-ref name="led2Off" scoped="" ref="0x40df4010"/>
        <function-ref name="set" scoped="" ref="0x40df5cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40df5dd8"/>
        <function-ref name="led2On" scoped="" ref="0x40df5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemCallQueue" ref="0x40dc7798" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40dc7798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40dc7970"/>
        <function-ref name="isEmpty" scoped="" ref="0x40dc7a50"/>
        <function-ref name="init" scoped="" ref="0x40dc7b30"/>
        <function-ref name="remove" scoped="" ref="0x40dc7c10"/>
        <function-ref name="find" scoped="" ref="0x40dc7cf0"/>
        <function-ref name="dequeue" scoped="" ref="0x40dc7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkedList" ref="0x40df6010" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SystemCallQueueP.nc">
      <component-ref qname="SystemCallQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkedList" scoped="" ref="0x40df6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkedList"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df61e8"/>
        <function-ref name="getLast" scoped="" ref="0x40df62c8"/>
        <function-ref name="indexOf" scoped="" ref="0x40df63a8"/>
        <function-ref name="addAfter" scoped="" ref="0x40df6488"/>
        <function-ref name="addLast" scoped="" ref="0x40df6568"/>
        <function-ref name="removeAt" scoped="" ref="0x40df6648"/>
        <function-ref name="init" scoped="" ref="0x40df6728"/>
        <function-ref name="addAt" scoped="" ref="0x40df6808"/>
        <function-ref name="addFirst" scoped="" ref="0x40df68e8"/>
        <function-ref name="remove" scoped="" ref="0x40df69c8"/>
        <function-ref name="removeBefore" scoped="" ref="0x40df6aa8"/>
        <function-ref name="getAfter" scoped="" ref="0x40df6b88"/>
        <function-ref name="getAt" scoped="" ref="0x40df6c68"/>
        <function-ref name="removeLast" scoped="" ref="0x40df6dc8"/>
        <function-ref name="getBefore" scoped="" ref="0x40df6ea8"/>
        <function-ref name="addBefore" scoped="" ref="0x40df5010"/>
        <function-ref name="removeAfter" scoped="" ref="0x40df50f0"/>
        <function-ref name="getFirst" scoped="" ref="0x40df51d0"/>
        <function-ref name="removeFirst" scoped="" ref="0x40df52b0"/>
        <function-ref name="size" scoped="" ref="0x40df5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40de76e0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <component-ref qname="BlockingAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40de76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de78b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40de7998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40de7e40" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <component-ref qname="BlockingAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40de7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40de7178" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverP.nc">
      <component-ref qname="BlockingAMReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40de7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de7350"/>
        <function-ref name="getPayload" scoped="" ref="0x40de7430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e20010" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e201e8"/>
        <function-ref name="stopThread" scoped="" ref="0x40e202c8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e203a8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e20488"/>
        <function-ref name="startThread" scoped="" ref="0x40e20568"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e20648"/>
        <function-ref name="initThread" scoped="" ref="0x40e20728"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e20808"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e208e8"/>
        <function-ref name="joinThread" scoped="" ref="0x40e209c8"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e20aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40de4178" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40de4178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de4350"/>
        <function-ref name="getPayload" scoped="" ref="0x40de4430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40de45a0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40de45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de4778"/>
        <function-ref name="payloadLength" scoped="" ref="0x40de4858"/>
        <function-ref name="getPayload" scoped="" ref="0x40de4938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40de4a18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40de4af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40e223f0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40e223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40e225c8"/>
        <function-ref name="start" scoped="" ref="0x40e226a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40de5988" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40de5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de5b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40e220c8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e220c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40de5d38" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40de5d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de5f20"/>
        <function-ref name="getPayload" scoped="" ref="0x40de4018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e20be8" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e20be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e20dc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e20ea0"/>
        <function-ref name="led1On" scoped="" ref="0x40e1f010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e1f0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e1f1d0"/>
        <function-ref name="get" scoped="" ref="0x40e1f2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e1f390"/>
        <function-ref name="led2On" scoped="" ref="0x40e1f710"/>
        <function-ref name="set" scoped="" ref="0x40e1f550"/>
        <function-ref name="led2Off" scoped="" ref="0x40e1f470"/>
        <function-ref name="led0On" scoped="" ref="0x40e1f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40e227e8" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40e227e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e229c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e22aa0"/>
        <function-ref name="init" scoped="" ref="0x40e22b80"/>
        <function-ref name="remove" scoped="" ref="0x40e22c60"/>
        <function-ref name="find" scoped="" ref="0x40e22d40"/>
        <function-ref name="dequeue" scoped="" ref="0x40e22e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40de4d60" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMReceiverP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40de4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e23910"/>
        <function-ref name="fired" scoped="" ref="0x40e25b48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e232b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e23048"/>
        <function-ref name="getdt" scoped="" ref="0x40e23de0"/>
        <function-ref name="gett0" scoped="" ref="0x40e23b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40e25db0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e253c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e235e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e25650"/>
        <function-ref name="stop" scoped="" ref="0x40e258e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingSnoop" ref="0x40e183c8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <component-ref qname="BlockingAMSnooperP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingSnoop" scoped="" ref="0x40e183c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e185a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e18680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x40e16100" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <component-ref qname="BlockingAMSnooperP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40e16100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e162d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingSnoopAny" ref="0x40e18920" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSnooperP.nc">
      <component-ref qname="BlockingAMSnooperP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingSnoopAny" scoped="" ref="0x40e18920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e18af8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e18bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e435b0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e435b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e43788"/>
        <function-ref name="stopThread" scoped="" ref="0x40e43868"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e43948"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e43a28"/>
        <function-ref name="startThread" scoped="" ref="0x40e43b08"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e43be8"/>
        <function-ref name="initThread" scoped="" ref="0x40e43cc8"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e43da8"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e43e88"/>
        <function-ref name="joinThread" scoped="" ref="0x40e42010"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceiveAny" ref="0x40e15710" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceiveAny" scoped="" ref="0x40e15710"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e158e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e159c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e15b38" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e15b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e15d10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e15df0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e15ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e14010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e140f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40e11998" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40e11998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40e11b70"/>
        <function-ref name="start" scoped="" ref="0x40e11c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e16f28" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e16f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e15110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40e11670" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e11858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40e152e8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40e152e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e154d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e155b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e42230" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e42230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e42408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e424e8"/>
        <function-ref name="led1On" scoped="" ref="0x40e425c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e426a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e42788"/>
        <function-ref name="get" scoped="" ref="0x40e42868"/>
        <function-ref name="led1Off" scoped="" ref="0x40e42948"/>
        <function-ref name="led2On" scoped="" ref="0x40e42cc8"/>
        <function-ref name="set" scoped="" ref="0x40e42b08"/>
        <function-ref name="led2Off" scoped="" ref="0x40e42a28"/>
        <function-ref name="led0On" scoped="" ref="0x40e42be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCallQueue" ref="0x40e11d90" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCallQueue" scoped="" ref="0x40e11d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCallQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e43010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e430f0"/>
        <function-ref name="init" scoped="" ref="0x40e431d0"/>
        <function-ref name="remove" scoped="" ref="0x40e432b0"/>
        <function-ref name="find" scoped="" ref="0x40e43390"/>
        <function-ref name="dequeue" scoped="" ref="0x40e43470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e14358" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverImplP.nc">
      <component-ref qname="BlockingAMSnooperP.BlockingAMReceiverImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e14358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403613e8"/>
            <typename><typedef-ref name="TMilli" ref="0x403615b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e13ec8"/>
        <function-ref name="fired" scoped="" ref="0x40e13130"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40e13868"/>
        <function-ref name="isOneShot" scoped="" ref="0x40e13600"/>
        <function-ref name="getdt" scoped="" ref="0x40e113b8"/>
        <function-ref name="gett0" scoped="" ref="0x40e11150"/>
        <function-ref name="isRunning" scoped="" ref="0x40e13398"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40e14990"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40e13b98"/>
        <function-ref name="startOneShot" scoped="" ref="0x40e14c20"/>
        <function-ref name="stop" scoped="" ref="0x40e14eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e39950" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <component-ref qname="BlockingAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e39950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e39b28"/>
        <function-ref name="getPayload" scoped="" ref="0x40e39c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e39ce8"/>
        <function-ref name="cancel" scoped="" ref="0x40e39dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e39ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40e39100" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderP.nc">
      <component-ref qname="BlockingAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40e39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e392d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e393b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e39498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemCall" ref="0x40e35528" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemCall" scoped="" ref="0x40e35528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemCall"/>
      </instance>
      <interface-functions>
        <function-ref name="finish" scoped="" ref="0x40e35700"/>
        <function-ref name="start" scoped="" ref="0x40e357e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e35e90" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e35e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e520c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e521a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e52280"/>
        <function-ref name="cancel" scoped="" ref="0x40e52360"/>
        <function-ref name="sendDone" scoped="" ref="0x40e52440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e52580" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e52580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e52758"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e52838"/>
        <function-ref name="getPayload" scoped="" ref="0x40e52918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e529f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e52ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e36be8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e36be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e36dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40e35010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40e35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e351f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e352d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e353b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40e35920" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40e35920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40e35af8"/>
        <function-ref name="lock" scoped="" ref="0x40e35bd8"/>
        <function-ref name="init" scoped="" ref="0x40e35cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e52c18" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderImplP.nc">
      <component-ref qname="BlockingAMSenderP.BlockingAMSenderImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e52c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e52df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e52ed0"/>
        <function-ref name="led1On" scoped="" ref="0x40e51010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e510f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e511d0"/>
        <function-ref name="get" scoped="" ref="0x40e512b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40e51390"/>
        <function-ref name="led2On" scoped="" ref="0x40e51710"/>
        <function-ref name="set" scoped="" ref="0x40e51550"/>
        <function-ref name="led2Off" scoped="" ref="0x40e51470"/>
        <function-ref name="led0On" scoped="" ref="0x40e51630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40e50698" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexC.nc">
      <component-ref qname="MutexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40e50698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40e50870"/>
        <function-ref name="lock" scoped="" ref="0x40e50950"/>
        <function-ref name="init" scoped="" ref="0x40e50a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e4a1e8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e4a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e4a3c0"/>
        <function-ref name="stopThread" scoped="" ref="0x40e4a4a0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e4a580"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e4a660"/>
        <function-ref name="startThread" scoped="" ref="0x40e4a740"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e4a820"/>
        <function-ref name="initThread" scoped="" ref="0x40e4a900"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e4a9e0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e4aac0"/>
        <function-ref name="joinThread" scoped="" ref="0x40e4aba0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e4ac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40e4da20" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40e4da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e4dbf8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e4dcd8"/>
        <function-ref name="init" scoped="" ref="0x40e4ddb8"/>
        <function-ref name="remove" scoped="" ref="0x40e4de98"/>
        <function-ref name="dequeue" scoped="" ref="0x40e4a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40e4d498" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/MutexP.nc">
      <component-ref qname="MutexP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40e4d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40e4d670"/>
        <function-ref name="lock" scoped="" ref="0x40e4d750"/>
        <function-ref name="init" scoped="" ref="0x40e4d830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConditionVariable" ref="0x40e68f00" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <component-ref qname="ThreadSynchronizationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40e68f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40e6f0f0"/>
        <function-ref name="isBlocking" scoped="" ref="0x40e6f1d0"/>
        <function-ref name="wait" scoped="" ref="0x40e6f2b0"/>
        <function-ref name="init" scoped="" ref="0x40e6f390"/>
        <function-ref name="signalNext" scoped="" ref="0x40e6f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReferenceCounter" ref="0x40e64770" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <component-ref qname="ThreadSynchronizationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReferenceCounter" scoped="" ref="0x40e64770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReferenceCounter"/>
      </instance>
      <interface-functions>
        <function-ref name="count" scoped="" ref="0x40e64948"/>
        <function-ref name="increment" scoped="" ref="0x40e64a28"/>
        <function-ref name="init" scoped="" ref="0x40e64b08"/>
        <function-ref name="waitOnValue" scoped="" ref="0x40e64be8"/>
        <function-ref name="decrement" scoped="" ref="0x40e64cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Barrier" ref="0x40e70208" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <component-ref qname="ThreadSynchronizationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Barrier" scoped="" ref="0x40e70208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Barrier"/>
      </instance>
      <interface-functions>
        <function-ref name="isBlocking" scoped="" ref="0x40e703e0"/>
        <function-ref name="reset" scoped="" ref="0x40e704c0"/>
        <function-ref name="block" scoped="" ref="0x40e705a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Semaphore" ref="0x40e6a2d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <component-ref qname="ThreadSynchronizationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40e6a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e6a4a8"/>
        <function-ref name="reset" scoped="" ref="0x40e6a588"/>
        <function-ref name="acquire" scoped="" ref="0x40e6a668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mutex" ref="0x40e70718" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadSynchronizationC.nc">
      <component-ref qname="ThreadSynchronizationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40e70718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40e708f0"/>
        <function-ref name="lock" scoped="" ref="0x40e709d0"/>
        <function-ref name="init" scoped="" ref="0x40e70ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Barrier" ref="0x40e6e420" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierC.nc">
      <component-ref qname="BarrierC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Barrier" scoped="" ref="0x40e6e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Barrier"/>
      </instance>
      <interface-functions>
        <function-ref name="isBlocking" scoped="" ref="0x40e6e5f8"/>
        <function-ref name="reset" scoped="" ref="0x40e6e6d8"/>
        <function-ref name="block" scoped="" ref="0x40e6e7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e62920" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
      <component-ref qname="BarrierP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e62920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e62af8"/>
        <function-ref name="stopThread" scoped="" ref="0x40e62bd8"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e62cb8"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e62d98"/>
        <function-ref name="startThread" scoped="" ref="0x40e62e78"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e5f010"/>
        <function-ref name="initThread" scoped="" ref="0x40e5f0f0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e5f1d0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e5f2b0"/>
        <function-ref name="joinThread" scoped="" ref="0x40e5f390"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e5f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40e5f620" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
      <component-ref qname="BarrierP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40e5f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e5f7f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e5f8d8"/>
        <function-ref name="init" scoped="" ref="0x40e5f9b8"/>
        <function-ref name="remove" scoped="" ref="0x40e5fa98"/>
        <function-ref name="dequeue" scoped="" ref="0x40e5fb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Barrier" ref="0x40e62370" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
      <component-ref qname="BarrierP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Barrier" scoped="" ref="0x40e62370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Barrier"/>
      </instance>
      <interface-functions>
        <function-ref name="isBlocking" scoped="" ref="0x40e62548"/>
        <function-ref name="reset" scoped="" ref="0x40e62628"/>
        <function-ref name="block" scoped="" ref="0x40e62708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e5fce8" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BarrierP.nc">
      <component-ref qname="BarrierP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e5fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e5fec0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e5e010"/>
        <function-ref name="led1On" scoped="" ref="0x40e5e0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e5e1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e5e2b0"/>
        <function-ref name="get" scoped="" ref="0x40e5e390"/>
        <function-ref name="led1Off" scoped="" ref="0x40e5e470"/>
        <function-ref name="led2Off" scoped="" ref="0x40e5e7f0"/>
        <function-ref name="set" scoped="" ref="0x40e5e550"/>
        <function-ref name="led0On" scoped="" ref="0x40e5e630"/>
        <function-ref name="led2On" scoped="" ref="0x40e5e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Semaphore" ref="0x40e63968" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreC.nc">
      <component-ref qname="SemaphoreC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40e63968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e63b40"/>
        <function-ref name="reset" scoped="" ref="0x40e63c20"/>
        <function-ref name="acquire" scoped="" ref="0x40e63d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConditionVariable" ref="0x40e898f0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableC.nc">
      <component-ref qname="ConditionVariableC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40e898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40e89ac8"/>
        <function-ref name="isBlocking" scoped="" ref="0x40e89ba8"/>
        <function-ref name="wait" scoped="" ref="0x40e89c88"/>
        <function-ref name="init" scoped="" ref="0x40e89d68"/>
        <function-ref name="signalNext" scoped="" ref="0x40e89e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e834c8" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e834c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e836a0"/>
        <function-ref name="stopThread" scoped="" ref="0x40e83780"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e83860"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e83940"/>
        <function-ref name="startThread" scoped="" ref="0x40e83a20"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e83b00"/>
        <function-ref name="initThread" scoped="" ref="0x40e83be0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e83cc0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e83da0"/>
        <function-ref name="joinThread" scoped="" ref="0x40e83e80"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e82010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConditionVariable" ref="0x40e86cb8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40e86cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40e86e90"/>
        <function-ref name="isBlocking" scoped="" ref="0x40e83010"/>
        <function-ref name="wait" scoped="" ref="0x40e830f0"/>
        <function-ref name="init" scoped="" ref="0x40e831d0"/>
        <function-ref name="signalNext" scoped="" ref="0x40e832b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40e821c0" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40e821c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e82398"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e82478"/>
        <function-ref name="init" scoped="" ref="0x40e82558"/>
        <function-ref name="remove" scoped="" ref="0x40e82638"/>
        <function-ref name="dequeue" scoped="" ref="0x40e82718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40e82890" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40e82890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40e82a68"/>
        <function-ref name="lock" scoped="" ref="0x40e82b48"/>
        <function-ref name="init" scoped="" ref="0x40e82c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e82d98" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ConditionVariableP.nc">
      <component-ref qname="ConditionVariableP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e82d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e81010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e810f0"/>
        <function-ref name="led1On" scoped="" ref="0x40e811d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e812b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e81390"/>
        <function-ref name="get" scoped="" ref="0x40e81470"/>
        <function-ref name="led1Off" scoped="" ref="0x40e81550"/>
        <function-ref name="led2Off" scoped="" ref="0x40e818d0"/>
        <function-ref name="set" scoped="" ref="0x40e81630"/>
        <function-ref name="led0On" scoped="" ref="0x40e81710"/>
        <function-ref name="led2On" scoped="" ref="0x40e817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40ea9798" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40ea9798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40ea9970"/>
        <function-ref name="stopThread" scoped="" ref="0x40ea9a50"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40ea9b30"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40ea9c10"/>
        <function-ref name="startThread" scoped="" ref="0x40ea9cf0"/>
        <function-ref name="threadInfo" scoped="" ref="0x40ea9dd0"/>
        <function-ref name="initThread" scoped="" ref="0x40ea9eb0"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40ea8010"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40ea80f0"/>
        <function-ref name="joinThread" scoped="" ref="0x40ea81d0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40ea82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConditionVariable" ref="0x40ea89b0" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConditionVariable" scoped="" ref="0x40ea89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ConditionVariable"/>
      </instance>
      <interface-functions>
        <function-ref name="signalAll" scoped="" ref="0x40ea8b88"/>
        <function-ref name="isBlocking" scoped="" ref="0x40ea8c68"/>
        <function-ref name="wait" scoped="" ref="0x40ea8d48"/>
        <function-ref name="init" scoped="" ref="0x40ea8e28"/>
        <function-ref name="signalNext" scoped="" ref="0x40ea8f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Semaphore" ref="0x40ea91e8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Semaphore" scoped="" ref="0x40ea91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Semaphore"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ea93c0"/>
        <function-ref name="reset" scoped="" ref="0x40ea94a0"/>
        <function-ref name="acquire" scoped="" ref="0x40ea9580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mutex" ref="0x40ea8428" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mutex" scoped="" ref="0x40ea8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mutex"/>
      </instance>
      <interface-functions>
        <function-ref name="unlock" scoped="" ref="0x40ea8600"/>
        <function-ref name="lock" scoped="" ref="0x40ea86e0"/>
        <function-ref name="init" scoped="" ref="0x40ea87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ea7090" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/system/SemaphoreP.nc">
      <component-ref qname="SemaphoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ea7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ea7268"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ea7348"/>
        <function-ref name="led1On" scoped="" ref="0x40ea7428"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ea7508"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ea75e8"/>
        <function-ref name="get" scoped="" ref="0x40ea76c8"/>
        <function-ref name="led1Off" scoped="" ref="0x40ea77a8"/>
        <function-ref name="led2Off" scoped="" ref="0x40ea7b28"/>
        <function-ref name="set" scoped="" ref="0x40ea7888"/>
        <function-ref name="led0On" scoped="" ref="0x40ea7968"/>
        <function-ref name="led2On" scoped="" ref="0x40ea7a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReferenceCounter" ref="0x40e8ab28" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterC.nc">
      <component-ref qname="ReferenceCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReferenceCounter" scoped="" ref="0x40e8ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReferenceCounter"/>
      </instance>
      <interface-functions>
        <function-ref name="count" scoped="" ref="0x40e8ad00"/>
        <function-ref name="increment" scoped="" ref="0x40e8ade0"/>
        <function-ref name="init" scoped="" ref="0x40e8aec0"/>
        <function-ref name="waitOnValue" scoped="" ref="0x40e9d010"/>
        <function-ref name="decrement" scoped="" ref="0x40e9d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadScheduler" ref="0x40e9a3e8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
      <component-ref qname="ReferenceCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadScheduler" scoped="" ref="0x40e9a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="suspendCurrentThread" scoped="" ref="0x40e9a5c0"/>
        <function-ref name="stopThread" scoped="" ref="0x40e9a6a0"/>
        <function-ref name="currentThreadId" scoped="" ref="0x40e9a780"/>
        <function-ref name="currentThreadInfo" scoped="" ref="0x40e9a860"/>
        <function-ref name="startThread" scoped="" ref="0x40e9a940"/>
        <function-ref name="threadInfo" scoped="" ref="0x40e9aa20"/>
        <function-ref name="initThread" scoped="" ref="0x40e9ab00"/>
        <function-ref name="brieflyInterruptCurrentThread" scoped="" ref="0x40e9abe0"/>
        <function-ref name="wakeupThread" scoped="" ref="0x40e9acc0"/>
        <function-ref name="joinThread" scoped="" ref="0x40e9ada0"/>
        <function-ref name="interruptCurrentThread" scoped="" ref="0x40e9ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReferenceCounter" ref="0x40e9dc28" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
      <component-ref qname="ReferenceCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReferenceCounter" scoped="" ref="0x40e9dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReferenceCounter"/>
      </instance>
      <interface-functions>
        <function-ref name="count" scoped="" ref="0x40e9de00"/>
        <function-ref name="increment" scoped="" ref="0x40e9dee0"/>
        <function-ref name="init" scoped="" ref="0x40e9a010"/>
        <function-ref name="waitOnValue" scoped="" ref="0x40e9a0f0"/>
        <function-ref name="decrement" scoped="" ref="0x40e9a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThreadQueue" ref="0x40e99060" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
      <component-ref qname="ReferenceCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadQueue" scoped="" ref="0x40e99060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e99238"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e99318"/>
        <function-ref name="init" scoped="" ref="0x40e993f8"/>
        <function-ref name="remove" scoped="" ref="0x40e994d8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e995b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e99728" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ReferenceCounterP.nc">
      <component-ref qname="ReferenceCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e99728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e99900"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e999e0"/>
        <function-ref name="led1On" scoped="" ref="0x40e99ac0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e99ba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e99c80"/>
        <function-ref name="get" scoped="" ref="0x40e99d60"/>
        <function-ref name="led1Off" scoped="" ref="0x40e99e40"/>
        <function-ref name="led2Off" scoped="" ref="0x40e981d8"/>
        <function-ref name="set" scoped="" ref="0x40e99f20"/>
        <function-ref name="led0On" scoped="" ref="0x40e98018"/>
        <function-ref name="led2On" scoped="" ref="0x40e980f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x40eae3f0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x40eae3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x40eae5c8"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x40eae6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x40ec2a08" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x40ec2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x40ec2be0"/>
        <function-ref name="pause" scoped="" ref="0x40ec2cc0"/>
        <function-ref name="resume" scoped="" ref="0x40ec2da0"/>
        <function-ref name="join" scoped="" ref="0x40ec2e80"/>
        <function-ref name="run" scoped="" ref="0x40eae010"/>
        <function-ref name="start" scoped="" ref="0x40eae0f0"/>
        <function-ref name="sleep" scoped="" ref="0x40eae1d0"/>
        <function-ref name="stop" scoped="" ref="0x40eae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40eae7e8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40eae7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eae9c0"/>
        <function-ref name="reset" scoped="" ref="0x40eaeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41253ef8" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41253ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412510e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41251960" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41251960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41251b38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41251c18"/>
        <function-ref name="led1On" scoped="" ref="0x41251cf8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41251dd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41251eb8"/>
        <function-ref name="get" scoped="" ref="0x41250010"/>
        <function-ref name="led1Off" scoped="" ref="0x412500f0"/>
        <function-ref name="led0On" scoped="" ref="0x41250470"/>
        <function-ref name="set" scoped="" ref="0x412502b0"/>
        <function-ref name="led2On" scoped="" ref="0x412501d0"/>
        <function-ref name="led2Off" scoped="" ref="0x41250390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x41251618" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x41251618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x412517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x41251220" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.BounceThread0.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x41251220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412513f8"/>
        <function-ref name="reset" scoped="" ref="0x412514d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40edd230" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMSender0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40edd230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40edd408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40edd4e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40edd5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edd6a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40edd788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingAMSend" ref="0x40ee1cd0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMSender0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingAMSend" scoped="" ref="0x40ee1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingAMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee1ea8"/>
        <function-ref name="getPayload" scoped="" ref="0x40edd010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40edd8c8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMSender0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40edd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eddaa0"/>
        <function-ref name="source" scoped="" ref="0x40eddb80"/>
        <function-ref name="address" scoped="" ref="0x40eddc60"/>
        <function-ref name="destination" scoped="" ref="0x40eddd40"/>
        <function-ref name="setSource" scoped="" ref="0x40edde20"/>
        <function-ref name="setDestination" scoped="" ref="0x40eddf00"/>
        <function-ref name="type" scoped="" ref="0x40edc010"/>
        <function-ref name="setType" scoped="" ref="0x40edc0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40edc1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40edc2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40edc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40edc4f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMSenderC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMSender0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40edc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40edc6c8"/>
        <function-ref name="noAck" scoped="" ref="0x40edc7a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40edc888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ed95f8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMReceiver0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ed95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed97d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ed98b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed9990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed9a70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ed9b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockingReceive" ref="0x40ed9200" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMReceiver0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockingReceive" scoped="" ref="0x40ed9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockingReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ed93d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ed9c90" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/BlockingAMReceiverC.nc">
      <component-ref qname="BarrierBounceAppC.BlockingAMReceiver0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ed9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ed9e68"/>
        <function-ref name="source" scoped="" ref="0x40ed6010"/>
        <function-ref name="address" scoped="" ref="0x40ed60f0"/>
        <function-ref name="destination" scoped="" ref="0x40ed61d0"/>
        <function-ref name="setSource" scoped="" ref="0x40ed62b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ed6390"/>
        <function-ref name="type" scoped="" ref="0x40ed6470"/>
        <function-ref name="setType" scoped="" ref="0x40ed6550"/>
        <function-ref name="isForMe" scoped="" ref="0x40ed6630"/>
        <function-ref name="setGroup" scoped="" ref="0x40ed6710"/>
        <function-ref name="localGroup" scoped="" ref="0x40ed67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadNotification" ref="0x40ed4c68" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadNotification" scoped="" ref="0x40ed4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadNotification"/>
      </instance>
      <interface-functions>
        <function-ref name="justCreated" scoped="" ref="0x40ed4e40"/>
        <function-ref name="aboutToDestroy" scoped="" ref="0x40ed4f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Thread" ref="0x40ed4330" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Thread" scoped="" ref="0x40ed4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Thread"/>
      </instance>
      <interface-functions>
        <function-ref name="yield" scoped="" ref="0x40ed4508"/>
        <function-ref name="pause" scoped="" ref="0x40ed45e8"/>
        <function-ref name="resume" scoped="" ref="0x40ed46c8"/>
        <function-ref name="join" scoped="" ref="0x40ed47a8"/>
        <function-ref name="run" scoped="" ref="0x40ed4888"/>
        <function-ref name="start" scoped="" ref="0x40ed4968"/>
        <function-ref name="sleep" scoped="" ref="0x40ed4a48"/>
        <function-ref name="stop" scoped="" ref="0x40ed4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x40ed3078" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadC.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x40ed3078"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ed3250"/>
        <function-ref name="reset" scoped="" ref="0x40ed3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41282370" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41282370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41282548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41282dc8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41282dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41280010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412800f0"/>
        <function-ref name="led1On" scoped="" ref="0x412801d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412802b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41280390"/>
        <function-ref name="get" scoped="" ref="0x41280470"/>
        <function-ref name="led1Off" scoped="" ref="0x41280550"/>
        <function-ref name="led0On" scoped="" ref="0x412808d0"/>
        <function-ref name="set" scoped="" ref="0x41280710"/>
        <function-ref name="led2On" scoped="" ref="0x41280630"/>
        <function-ref name="led2Off" scoped="" ref="0x412807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadFunction" ref="0x41282a80" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadFunction" scoped="" ref="0x41282a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadFunction"/>
      </instance>
      <interface-functions>
        <function-ref name="signalThreadRun" scoped="" ref="0x41282c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ThreadInfo" ref="0x41282688" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/system/ThreadInfoP.nc">
      <component-ref qname="BarrierBounceAppC.SyncThread.ThreadInfoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThreadInfo" scoped="" ref="0x41282688"/></type-interface>
      <instance>
        <interfacedef-ref qname="ThreadInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41282860"/>
        <function-ref name="reset" scoped="" ref="0x41282940"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b64e0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404a1e10" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a5010" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a6dd8" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404a75c0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404a7bf8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a7aa0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404a62d8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a6180" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a6830" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403bbbd0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b9010" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403bb440" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b97e0" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403bb800" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b93e8" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403b5ce8" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403bb090" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskScheduler" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasTasks" ref="0x402f8de0" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Check to see if there are any pending tasks in the task queue.</short>
          <long> &#10; Check to see if there are any pending tasks in the task queue. &#10;&#10; @return        whether there are any tasks waiting to run&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x402f8488" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f6288" loc="69:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f88c8" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/TaskScheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4038f8d8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4038fd20" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4038e1c8" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4038ea38" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4038d740" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4038dbe8" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4038e5f0" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40393338" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403931e0" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4038f4b0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4038eeb8" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4038d2f8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadInfo" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x404b0d88" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x404b0980" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadInfo.nc">
        <interfacedef-ref qname="ThreadInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadScheduler" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
      <function command="" provided="0" name="suspendCurrentThread" ref="0x40313368" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopThread" ref="0x4030eec8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030ed70" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadId" ref="0x4030f380" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="currentThreadInfo" ref="0x4030f818" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startThread" ref="0x4030e938" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030e7e0" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="threadInfo" ref="0x4030fdf8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030fc80" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initThread" ref="0x4030e3a0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4030e248" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="brieflyInterruptCurrentThread" ref="0x40313ce0" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wakeupThread" ref="0x403112c8" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40311170" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="joinThread" ref="0x40311878" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40311720" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="thread_id_t" ref="0x40307cd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptCurrentThread" ref="0x40313800" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadScheduler.nc">
        <interfacedef-ref qname="ThreadScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402fe2d0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fe7e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403a8b28" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40351010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403a2268" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403a2e78" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadCleanup" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="cleanup" ref="0x404d7210" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadCleanup.nc">
        <interfacedef-ref qname="ThreadCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadQueue" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/thread_queue.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x404dd170" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e1db8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404dd010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x404ea5c0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404ea468" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x404e1990" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404e1838" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x404ea010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404ddbe0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404ddde0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
                <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404dd768" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
        <interfacedef-ref qname="ThreadQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:53" alignment="I:1"><struct-ref name="thread" ref="0x4030a7e0"/>
              <typename><typedef-ref name="thread_t" ref="0x4030a8d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x404dd5f0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="thread_queue" ref="0x40302ef8"/>
                <typename><typedef-ref name="thread_queue_t" ref="0x40307300"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitArrayUtils" loc="28:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
      <function command="" provided="0" name="clrBit" ref="0x404e7d60" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e7a20" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e7c00" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrArray" ref="0x404e9748" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e93d0" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numBytes" ref="0x404e95e8" loc="29:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBit" ref="0x404e9eb8" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e9b78" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e9d58" loc="30:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBit" ref="0x404e7620" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
        <interfacedef-ref qname="BitArrayUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="array" ref="0x404e72e0" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="idx" ref="0x404e74c0" loc="31:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BitArrayUtils.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkedList" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/linked_list.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40565168" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40565010" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLast" ref="0x40570c70" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40570af8" loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="indexOf" ref="0x4056d658" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056d2c0" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056d4f8" loc="52:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAfter" ref="0x40563c70" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40563640" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x405638a0" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x40563b08" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addLast" ref="0x405631c8" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40564df0" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40563068" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAt" ref="0x4056c6f0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056c3a0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x4056c570" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x4055bb40" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4055b9e8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addAt" ref="0x40564178" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40565b68" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40565da0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x40564010" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addFirst" ref="0x40564988" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405645f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40564828" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x4056deb8" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056db00" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056dd38" loc="53:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeBefore" ref="0x4056bc48" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056b890" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056bac8" loc="57:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAfter" ref="0x4056f518" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056f160" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056f398" loc="50:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAt" ref="0x40570010" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40571c30" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x40571e00" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeLast" ref="0x4056b3a8" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056b230" loc="56:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBefore" ref="0x4056fd98" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056f9e0" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x4056fc18" loc="51:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addBefore" ref="0x40571790" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40571160" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="first" ref="0x405713c0" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="second" ref="0x40571628" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAfter" ref="0x40579518" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x40579160" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="e" ref="0x40579398" loc="58:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
                <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFirst" ref="0x40570648" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405704d0" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeFirst" ref="0x4056cd40" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="list_element" ref="0x402fff20"/>
              <typename><typedef-ref name="list_element_t" ref="0x40302550"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x4056cbc8" loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40565710" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
        <interfacedef-ref qname="LinkedList"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="l" ref="0x405655b8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/LinkedList.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="linked_list" ref="0x40302780"/>
                <typename><typedef-ref name="linked_list_t" ref="0x40302cf8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadNotification" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="justCreated" ref="0x405b76b0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToDestroy" ref="0x405b7ab0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadNotification.nc">
        <interfacedef-ref qname="ThreadNotification"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Thread" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="yield" ref="0x405c5460" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pause" ref="0x405b5c90" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x405c5090" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="join" ref="0x405c4260" loc="44:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x405c5e80" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405c5d28" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405b54f8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405b53a0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x405c59c8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x405c5870" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b58c0" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Thread.nc">
        <interfacedef-ref qname="Thread"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadFunction" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="signalThreadRun" ref="0x405c0200" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
        <interfacedef-ref qname="ThreadFunction"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="arg" ref="0x405c00a8" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadFunction.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ThreadSleep" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x405cfdd0" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
        <interfacedef-ref qname="ThreadSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="milli" ref="0x405cfc78" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ThreadSleep.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40605010" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40605010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40602790" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406045b8" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40603720" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406033d8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x406035c0" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40604f08" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40600138" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40602bd8" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40604a48" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40605668" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40605510" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40602170" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40603dc0" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40602010" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40605d00" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40605ba8" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406041f0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406118d8" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406118d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40611db8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406273c8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406273c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40627530" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40627530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40627a18" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40627530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40626510" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40626010" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40626938" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061b3b8" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061b3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4061b520" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40619810" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4061a4d0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406191c8" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061ae48" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40619068" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061a940" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40619ca0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4061bb50" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4061b9f8" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061b520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4061a070" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x4063cbb8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036b5b0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036b7d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406461a8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40374618"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374840"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406476e0" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036fea0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036e128"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40647ce8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036fea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036e128"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40647b90" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036fea0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4036e128"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406467b0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40374618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374840"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40646658" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40374618"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40374840"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40647228" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036b5b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036b7d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406470d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4036b5b0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4036b7d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x4063fce8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406511c8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x4063f8d0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40651688" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40645dd0" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370738"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40370960"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4063f3f0" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40370960"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4063f298" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40370738"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40370960"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406365b0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406434f0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40644498" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40636aa8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406448a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40643950" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40644058" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40636ed8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406365b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40644ca8" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406430c8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4062abd8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40638438" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4063ab08" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4063b0f8" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406389c8" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40638870" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40638e58" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4063bec0" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4063baa0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40638010" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4063b670" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4063b518" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4062abd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4063a2e8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4063a6e0" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PlatformInterrupt" loc="36:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="postAmble" ref="0x4067e010" loc="37:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/PlatformInterrupt.nc">
        <interfacedef-ref qname="PlatformInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCall" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="finish" ref="0x40723d38" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40723be0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407237c8" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
        <interfacedef-ref qname="SystemCall"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="syscall_ptr" ref="0x40723068" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="s" ref="0x40723270" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40723480" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </variable>
          <variable name="params" ref="0x40723658" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCall.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40736a68" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40736910" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40775460" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40775308" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x407724a8" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40772148" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40772328" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40774b08" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40774170" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40775d80" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40774010" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Barrier" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
      <function command="" provided="0" name="isBlocking" ref="0x40762a48" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
          <short>&#10; Query whether a barrier is currently blocked or not&#10; </short>
          <long>&#10; Query whether a barrier is currently blocked or not&#10; @param b The barrier you would like to query.&#10; @return  TRUE or FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="Barrier"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="b" ref="0x407628f0" loc="60:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40764d60" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
          <short>&#10; Reset a barrier for use.</short>
          <long>&#10; Reset a barrier for use.&#10; @param b     The barrier you would like to reset.&#10; @param count The number of threads that must call&#10;              block before the flood gates open and&#10;              the barrier is unblocked.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Barrier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="b" ref="0x40764a08" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40764c00" loc="48:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="block" ref="0x407623a8" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
          <short>&#10; Block on a barrier until all threads have called &#10; block() as indicated in the count parameter to reset()&#10; </short>
          <long>&#10; Block on a barrier until all threads have called &#10; block() as indicated in the count parameter to reset()&#10; @param b The barrier you would like to block on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Barrier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="b" ref="0x40762250" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Barrier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="barrier" ref="0x40764010"/>
                <typename><typedef-ref name="barrier_t" ref="0x40764578"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingAMSend" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4077b790" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4077b230" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4077b448" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4077b628" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4077a370" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4077a010" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4077a1f0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4077bbd0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingAMSend.nc">
        <interfacedef-ref qname="BlockingAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingReceive" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x407794f0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40779178" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40779390" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40779c58" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
        <interfacedef-ref qname="BlockingReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407798f8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40779ad8" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockingStdControl" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
      <function command="" provided="0" name="start" ref="0x407652d0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40765698" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/BlockingStdControl.nc">
        <interfacedef-ref qname="BlockingStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x407a03b8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407a0260" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x407a0eb0" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407a0d58" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4079e950" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4079e7f8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4078a648" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078a4f0" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40790010" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40792e20" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4077deb8" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40792578" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40792420" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4078e8f8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078e590" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4078e798" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40790bf8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40790890" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40790a98" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4078c010" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078fea0" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4078cb48" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078c818" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4078c9e8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40758960"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4078f4c0" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078f368" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4078b370" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4078b010" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4078b210" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4078bbe8" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4079ad58" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4079ac00" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40799ae0" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40799988" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4079a518" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407992a8" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x407a3010" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407a3010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407a3178" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a3178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x407a2370" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a3178"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407a2218" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x407a2e08" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407a2cb0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x407a3800" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407a36a8" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b88e0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a3178"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b8570" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x407b8780" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a3178"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4079ce78" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4079c918" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4079cb30" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4079cd10" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40795a88" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40795728" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40795908" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407951c8" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40796b80" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40796a28" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407ac898" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407ac540" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407ac738" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x407aa930" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
              <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407aa3e8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x407aa5c8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407aa7a8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x407bc288" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407bc130" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x407be188" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407be030" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x407bf308" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x407bf1b0" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x407c6c08" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x407c6ab0" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x407bf900" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x407bf7a8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x407bea38" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407be8e0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x407cb880" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x407cb508" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x407cb720" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x407c5288" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407aeef0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x407c5128" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x407c4eb8" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407c4b38" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x407c4d58" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x407c5910" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x401b6630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407c57b8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x407c46f8" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407c45a0" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x407aea28" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407ae8d0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x407c4010" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407c5e80" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x407bab60" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407ba7c8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x407baa00" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x407d2650" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d24f8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x407ba2f0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x407c2c20" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x407c2ac8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x407ce788" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407ce630" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x407c0b90" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407c07f8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x407c0a30" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x407cfe10" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407cfcb8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x407cf798" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407cf400" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x407cf638" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x407d0168" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407d0010" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x407c16a0" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407c1548" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407c8d28" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407c89e8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407c8bc8" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x407dba18" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407db6b8" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407db898" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407db158" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407dcb38" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407dc9e0" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407da820" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407da4c8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407da6c0" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x407de010" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x407e0670" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x407e0070" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407e0b20" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x407de708" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407e4ab0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407e4768" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x407e4950" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407f7640" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x407f5d40" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x407f5550" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x407f59f8" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407f5bd8" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407f5060" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x407f7cf0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407f7ee8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x407f7168" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x407f7010" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x407f8aa8" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x407f8600" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x407f91a8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407f9670" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x407f02c8" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x407340f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x407334f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f0130" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x407f0d58" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x40733bb0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x40749b00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f0bc0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x407e2ac0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x407e1da8" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x407e1940" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x407e6c40" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x407e25e8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x407e1010" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x407e14d0" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x407e2158" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40806478" loc="71:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x408075f0" loc="56:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x40806010" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x40807e80" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x40807a08" loc="61:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x407f2ab0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x407f2958" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x40807168" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x40807010" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x4083dd90" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x4083da28" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x4083dc30" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x4083d090" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x40822a88" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x40822698" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x40822928" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40825398" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40825240" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x4083d5a8" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40824780" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40824628" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40825d30" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40825bd8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x4083c8a0" loc="110:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x40822188" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40822030" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x4083c358" loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x408241a8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40828d60" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x408257a8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x40824bc0" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x408268e0" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x408268e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40826d90" loc="55:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40839558" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x408268e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40839228" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x408393f8" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x408268e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x408406d8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40840580" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40840d70" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40840c18" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40846660" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40846ed0" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40846ad0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40846170" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40847db8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40758bb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40846010" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40758e18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x4083fba0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40843608" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40845da8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x408432a0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408434a0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40842410" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40843bb0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x408420a8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408422a8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40848e48" loc="57:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408489e8" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x408485d8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40848070" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x408bc620" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403820d0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403822f8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x408a0058" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037c568"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037c790"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408a1ec8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037c568"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037c790"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x408a0b38" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037db30"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037dd58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x408a48c0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40371448"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40371670"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x408bc168" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037db30"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037dd58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x408bc010" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037db30"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x4037dd58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x408bcc30" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403820d0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403822f8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x408bcad8" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403820d0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403822f8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x408a1390" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037bb90"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037bdb8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x408a4de0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037c568"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4037c790"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x408a19d8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40371448"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40371670"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408a1880" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40371448"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40371670"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x408a0678" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037bb90"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037bdb8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x408a0520" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037bb90"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4037bdb8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x408a3dd8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x408b78f0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x408b7798" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x408b8ec8" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408b92f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x408b9e40" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408b9ce8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408b82a8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x408b7368" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408b9868" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x408b9710" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408a3dd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408b86b0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408b8aa8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x4099fba0" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4099c5b0" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x4099c168" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x4099c010" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x4099f698" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x409aaab0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x409a9a08" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409aa6b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x409a9540" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x409a93e8" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x409aa2b0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x409aaf00" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x409ba010" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40a01010" loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40a01500" loc="31:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40a019e0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40a11c88" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a11928" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a11b28" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40a0d390" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a0fe20" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a0d030" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a0d228" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a0f600" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a0f2a0" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a0f4a0" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40a11098" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40738db8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a14d28" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a14f28" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40a10a48" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a104e8" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a106e8" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a108e0" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a1e068" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a22ae0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a22cf8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a22ee8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a1d6b0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a1ef18" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a1d148" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a1d338" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401b71e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a1d540" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40a23c98" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40a23b40" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a82ec0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a82d68" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a7fad8" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a7f980" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a7f400" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a7e168" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a7e010" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40a958e8" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a8f070" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a92158" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a8f658" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a8f500" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a95498" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a90168" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a90010" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a93370" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a93218" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a941a8" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a8c738" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a8c5e0" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a937c8" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a8e010" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a8fe88" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a8e898" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a90bf8" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a90aa0" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a8c1a8" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a926e8" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a92590" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a94740" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a945e8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a93d18" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a93bc0" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a90618" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a8fa80" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a8e420" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a8ecf0" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a92b20" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a95d10" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a94d08" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a94bb0" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a894e8" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a899e8" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40ac4138" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac4620" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40ae5c50" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b072c8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40b09f20" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b09a60" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40b00820" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b04200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b006c8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b04200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40b014a8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40b01b68" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b04200"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b01a10" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b04200"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40b00138" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40b04200"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x40ba51d8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40bcf3c8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40bd1e18" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x40bcf268" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x40bd1980" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x40bd1500" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40bd13a8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401b7848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x40bb1538" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bb13e0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40bb5c18" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bb5ac0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bb0708" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bb05b0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40bb1e10" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bb1cb8" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40766060"/>
                <typename><typedef-ref name="message_t" ref="0x40766df0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40cc5580" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cc5580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40cc5bd0" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cc5580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40cc5a78" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cc5580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemCallQueue" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
      <function command="" provided="0" name="enqueue" ref="0x40dad090" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40daed08" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40daef10" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40dddc80" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40dddb28" loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40dae8d8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40dae780" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40dadea8" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40dadb20" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40dadd28" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
                <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="find" ref="0x40ddd6c8" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40ddd338" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40ddd548" loc="45:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="syscall_id_t" ref="0x40306010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40dad698" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
        <interfacedef-ref qname="SystemCallQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><struct-ref name="syscall" ref="0x4030a4d0"/>
              <typename><typedef-ref name="syscall_t" ref="0x4030a5c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="q" ref="0x40dad520" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/SystemCallQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="syscall_queue" ref="0x40db1ea8"/>
                <typename><typedef-ref name="syscall_queue_t" ref="0x40dae260"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mutex" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/mutex.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="unlock" ref="0x40e31c28" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40e31ad0" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lock" ref="0x40e316d0" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40e31578" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40e31188" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
        <interfacedef-ref qname="Mutex"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40e31030" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Mutex.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ConditionVariable" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/condvar.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues (klueska@cs.stanford.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="signalAll" ref="0x40e68590" loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
          <short>&#10; Signal all threads waiting on this condition variable &#10; to continue execution.</short>
          <long>&#10; Signal all threads waiting on this condition variable &#10; to continue execution.  To unblock just the next thread&#10; waiting on this condition vairable use signalNext().&#10; @param c The condition variable associated with the thread &#10;          you would like to signal.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e68438" loc="70:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isBlocking" ref="0x40e68c88" loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
          <short>&#10; Query whether a condition variable is currently blocking &#10; any threads from executing.</short>
          <long>&#10; Query whether a condition variable is currently blocking &#10; any threads from executing.&#10; @param c The cndition variable you would like to query.&#10; @return  TRUE or FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e68b30" loc="77:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40e697c0" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
          <short>&#10; Wait on a condition variable until one of the signal&#10; calls unbocks me.</short>
          <long>&#10; Wait on a condition variable until one of the signal&#10; calls unbocks me.  In the process, unlock the mutex &#10; passed in to me.&#10; @param c The condition variable you would like to wait on.&#10; @param m The mutex you would like to unlock&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e69470" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m" ref="0x40e69660" loc="54:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="mutex" ref="0x40e3c568"/>
                <typename><typedef-ref name="mutex_t" ref="0x40e3ca98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40e69010" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
          <short>&#10; Reset a condition variable for use.</short>
          <long>&#10; Reset a condition variable for use.&#10; @param c The condition variable you would like to reset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e6adf8" loc="46:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="signalNext" ref="0x40e69e60" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
          <short>&#10; Signal the next thread waiting on this condition variable &#10; to continue execution.</short>
          <long>&#10; Signal the next thread waiting on this condition variable &#10; to continue execution.  To unblock all threads waiting on &#10; this condition vairable use signalAll().&#10; @param c The condition variable associated with the thread &#10;          you would like to signal.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ConditionVariable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e69d08" loc="62:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ConditionVariable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:3" alignment="I:1"><struct-ref name="condvar" ref="0x40e6d010"/>
                <typename><typedef-ref name="condvar_t" ref="0x40e6d3f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReferenceCounter" loc="38:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/types/refcounter.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="count" ref="0x40e64608" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
        <interfacedef-ref qname="ReferenceCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x40e644b0" loc="43:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="increment" ref="0x40e65310" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
        <interfacedef-ref qname="ReferenceCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x40e651b8" loc="40:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40e6fd78" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
        <interfacedef-ref qname="ReferenceCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x40e6fc20" loc="39:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="waitOnValue" ref="0x40e64060" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
        <interfacedef-ref qname="ReferenceCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x40e65cd8" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x40e65ed0" loc="42:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="decrement" ref="0x40e65898" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
        <interfacedef-ref qname="ReferenceCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x40e65740" loc="41:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/ReferenceCounter.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="refcounter" ref="0x403074e8"/>
                <typename><typedef-ref name="refcounter_t" ref="0x40307a70"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Semaphore" loc="32:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
      <function command="" provided="0" name="release" ref="0x40e6a168" loc="35:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40e6a010" loc="35:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40e6c590" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40e6c260" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="v" ref="0x40e6c430" loc="33:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401b6b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="acquire" ref="0x40e6cb18" loc="34:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
        <interfacedef-ref qname="Semaphore"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fada0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x40e6c9c0" loc="34:/opt/tinyos-2.1.1/tos/lib/coroutines/interfaces/Semaphore.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref name="semaphore" ref="0x40e6d618"/>
                <typename><typedef-ref name="semaphore_t" ref="0x40e6ddd0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
